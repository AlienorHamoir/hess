{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f9bafe90-9e1a-42a5-afef-1f52f7e20f4e",
   "metadata": {},
   "outputs": [{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c346ecde-9c55-4ebe-a71b-3ceae792358d",
   "metadata": {},
   "outputs": [],
   "source": [
    "!pip install numpy scipy matplotlib pandas casadi cvxpy control gurobipy\n",
    "pip install casadi[complete] --upgrade\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "046ebaf1-ec21-44d5-b771-ad8ee36c5e40",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Initialization of libraries\n",
    "# Numerical computations and optimizations\n",
    "import numpy as np\n",
    "from scipy.optimize import minimize\n",
    "\n",
    "# Plotting and visualization\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import os\n",
    "\n",
    "# Data manipulation\n",
    "import pandas as pd\n",
    "\n",
    "# Symbolic computations and MPC\n",
    "import casadi as ca\n",
    "\n",
    "# FMU interaction\n",
    "#from pyfmi import load_fmu\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "88a229cd",
   "metadata": {},
   "outputs": [],
   "source": [
    "def optimizer_V0(T, t_s, c_el, pv, load, SOE_initial, LOH_initial): \n",
    "    # adapt inputs: T (horizon of simulation), ts (sampling time), SOE_battery, LOH_hess, pv, load, c_el (electricity prices)\n",
    "    # states: SOE_battery, LOH_hess\n",
    "    # inputs to FMU: P_battery, P_FC_sys (start with P_FC), P_El_sys (start with P_El), state_FC, state_EL\n",
    "\n",
    "    # V0: no auxiliaries, no thermal model, no transitions, no STB state, state on-off, no transition, constant efficiency\n",
    "    # inputs variables in MPC: P_battery_disch, P_battery_ch, P_grid, P_FC, delta_ON_FC, delta_OFF_FC, P_EL, delta_ON_EL, delta_OFF_EL\n",
    "    \n",
    "    \n",
    "    # Access global parameters\n",
    "    global P_grid_max, P_battery_nom, eta_batt_ch, eta_batt_disch, SOE_min, SOE_max\n",
    "    global LOH_min, LOH_max, C_max, eta_El, eta_FC, P_EL_min, P_EL_max, P_EL_STB, P_FC_min, P_FC_max, P_FC_STB, r_EL, r_FC\n",
    "    global alpha_EL, alpha_FC, c_battery\n",
    "\n",
    "    N = int(T // t_s)\n",
    "    \n",
    "    # Initialize\n",
    "    import casadi as ca\n",
    "    opti = ca.Opti()\n",
    "\n",
    "    # -----------------------------\n",
    "    # Variables and solver\n",
    "    # -----------------------------\n",
    "\n",
    "    SOE = opti.variable(1, N+1)  # state\n",
    "    LOH = opti.variable(1, N+1)  # state\n",
    "    P_batt = opti.variable(1, N)  # input\n",
    "    P_grid_sale = opti.variable(1, N)        # input \n",
    "    P_grid_pchs = opti.variable(1, N)        # input \n",
    "    P_FC = opti.variable(1, N)          # input\n",
    "    delta_ON_FC = opti.variable(1, N)   # binary input\n",
    "    delta_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    P_EL = opti.variable(1, N)          # input\n",
    "    delta_ON_EL = opti.variable(1, N)   # binary input\n",
    "    delta_OFF_EL = opti.variable(1, N)  # binary input\n",
    "\n",
    "    # delta_i are discrete variables (binary)\n",
    "    discrete_var = [0]*(N+1) + [0]*(N+1) + [0]*N + [0]*N + [0]*N + [0]*N + [1]*N + [1]*N + [0]*N + [1]*N + [1]*N\n",
    "\n",
    "    # Solver\n",
    "    opti.solver('bonmin', {'discrete': discrete_var, 'bonmin.tol': 1e-4, 'bonmin.print_level': 0, 'print_time': 0})\n",
    "\n",
    "    # -----------------------------\n",
    "    # Constraints\n",
    "    # -----------------------------\n",
    "\n",
    "    # Initial storage level\n",
    "    opti.subject_to(SOE[0] == SOE_initial)\n",
    "    opti.subject_to(LOH[0] == LOH_initial)\n",
    "\n",
    "    # Constraints at every time step\n",
    "    for t in range(N):\n",
    "\n",
    "            # Bounds on grid\n",
    "            opti.subject_to(pv[t] + P_grid_pchs[t] + 0.89 * P_FC[t] == load[t] + P_grid_sale[t] + P_batt[t] + 1.19 * P_EL[t])\n",
    "            opti.subject_to(P_grid_sale[t]>=0)\n",
    "            opti.subject_to(P_grid_sale[t]<=P_grid_max)\n",
    "            opti.subject_to(P_grid_pchs[t]>=0)\n",
    "            opti.subject_to(P_grid_pchs[t]<=P_grid_max)\n",
    "\n",
    "            # Bounds on battery and SOE\n",
    "            opti.subject_to(P_batt[t]>=0)\n",
    "            opti.subject_to(P_batt[t]<=0.9 * P_battery_nom)\n",
    "        \n",
    "            opti.subject_to(SOE[t+1] == SOE[t] + P_batt[t] * t_s/3600)\n",
    "            opti.subject_to(SOE[t] >= SOE_min)\n",
    "            opti.subject_to(SOE[t] <= SOE_max)\n",
    "            \n",
    "            # Bounds on hydrogen storage \n",
    "            opti.subject_to(LOH[t+1] == LOH[t] + (P_EL[t] * eta_EL - P_FC[t]/eta_FC) * t_s /C_max)\n",
    "            opti.subject_to(LOH[t] >= LOH_min)\n",
    "            opti.subject_to(LOH[t] <= LOH_max)                \n",
    "\n",
    "            # Constraints on electrolyzer\n",
    "            # Bounds when ON                \n",
    "            opti.subject_to(P_EL[t] >= delta_ON_EL[t] * P_EL_min)\n",
    "            opti.subject_to(P_EL[t] <= delta_ON_EL[t] * P_EL_max)\n",
    "        \n",
    "            # Ramping constraints                \n",
    "            if t < N-1:                \n",
    "                opti.subject_to(P_EL[t+1] - P_EL[t] <= r_EL)\n",
    "                opti.subject_to(P_EL[t] - P_EL[t+1] <= r_EL)\n",
    "                            \n",
    "            # Constraints on fuel cell\n",
    "            # Bounds when ON\n",
    "            opti.subject_to(P_FC[t] >= delta_ON_FC[t] * P_FC_min)\n",
    "            opti.subject_to(P_FC[t] <= delta_ON_FC[t] * P_FC_max)\n",
    "            \n",
    "            # Ramping constraints                \n",
    "            if t < N-1:                \n",
    "                opti.subject_to(P_FC[t+1] - P_FC[t] <= r_FC)\n",
    "                opti.subject_to(P_FC[t] - P_FC[t+1] <= r_FC)\n",
    "                            \n",
    "            # States                \n",
    "            opti.subject_to(delta_ON_EL[t] + delta_OFF_EL[t] == 1)\n",
    "            opti.subject_to(delta_ON_FC[t] + delta_OFF_FC[t] == 1)\n",
    "\n",
    "\n",
    "                            \n",
    "            # Bilinear to linear\n",
    "\n",
    "\n",
    "    # -----------------------------\n",
    "    # Objective\n",
    "    # -----------------------------\n",
    "\n",
    "    obj = sum(alpha_EL * t_s/3600 * delta_ON_EL[t] + alpha_FC * t_s/3600 * delta_ON_FC[t] + c_battery * ca.fabs(P_batt[t]) + (c_el[t] * P_grid_pchs[t] - 0 * c_el[t] * P_grid_sale[t]) * t_s/3600 for t in range(N))\n",
    "    opti.minimize(obj)\n",
    "    \n",
    "    # -----------------------------\n",
    "    # Solve and get optimal values\n",
    "    # -----------------------------\n",
    "\n",
    "    sol = opti.solve()\n",
    "    \n",
    "    SOE_opt = sol.value(SOE)\n",
    "    LOH_opt = sol.value(LOH)\n",
    "    P_batt_opt = sol.value(P_batt)\n",
    "    P_grid_sale_opt = sol.value(P_grid_sale)\n",
    "    P_grid_pchs_opt = sol.value(P_grid_pchs)\n",
    "    P_FC_opt = sol.value(P_FC)  \n",
    "    delta_ON_FC_opt = sol.value(delta_ON_FC)\n",
    "    delta_OFF_FC_opt = sol.value(delta_OFF_FC)\n",
    "    P_EL_opt = sol.value(P_EL)\n",
    "    delta_ON_EL_opt = sol.value(delta_ON_EL)\n",
    "    delta_OFF_EL_opt = sol.value(delta_OFF_EL)\n",
    "\n",
    "    obj_opt = round(sol.value(obj), 2)\n",
    "\n",
    "    return SOE_opt, LOH_opt, P_batt_opt, P_grid_sale_opt, P_grid_pchs_opt, delta_ON_EL_opt, delta_OFF_EL_opt, P_EL_opt, delta_ON_FC_opt, delta_OFF_FC_opt, P_FC_opt, obj_opt\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2e373cb3",
   "metadata": {},
   "outputs": [],
   "source": [
    "def optimizer_V1(T, t_s, c_el, pv, load, SOE_initial, LOH_initial): \n",
    "    # states: SOE_battery, LOH_hess\n",
    "    # inputs to FMU: P_battery, P_FC_sys (start with P_FC), P_El_sys (start with P_El), state_FC, state_EL\n",
    "\n",
    "    # V1: no auxiliaries, no thermal model, no STB state, add transitions and costs between OFF-On\n",
    "    # inputs variables in MPC: P_battery, P_grid, P_FC, delta_ON_FC, delta_OFF_FC, sigma_OFF_ON_FC, P_EL, delta_ON_EL, delta_OFF_EL, sigma_OFF_ON_EL\n",
    "    \n",
    "    # Access global parameters\n",
    "    global P_grid_max, P_battery_nom, SOE_min, SOE_max\n",
    "    global LOH_min, LOH_max, C_max, eta_EL, eta_FC, P_EL_min, P_EL_max, P_EL_STB, P_FC_min, P_FC_max, P_FC_STB, r_EL, r_FC\n",
    "    global alpha_EL, alpha_FC, C_EL, C_FC, c_battery, rho_grid, rho_grid_sale, P_grid_max_sale\n",
    "    \n",
    "\n",
    "    N = int(T // t_s)\n",
    "    \n",
    "    # Initialize\n",
    "    import casadi as ca\n",
    "    opti = ca.Opti(\"conic\")\n",
    "    #opti = ca.Opti()\n",
    "    \n",
    "    # -----------------------------\n",
    "    # Variables and solver\n",
    "    # -----------------------------\n",
    "\n",
    "    SOE = opti.variable(1, N+1)  # state\n",
    "    LOH = opti.variable(1, N+1)  # state\n",
    "    P_batt = opti.variable(1, N)  # input\n",
    "    P_batt_abs = opti.variable(1,N) # input\n",
    "\n",
    "    P_grid_sale = opti.variable(1, N)        # input \n",
    "    P_grid_pchs = opti.variable(1, N)        # input \n",
    "    \n",
    "    P_FC = opti.variable(1, N)          # input\n",
    "    delta_ON_FC = opti.variable(1, N)   # binary input\n",
    "    delta_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_FC = opti.variable(1, N)  # binary input\n",
    "    \n",
    "    P_EL = opti.variable(1, N)          # input\n",
    "    delta_ON_EL = opti.variable(1, N)   # binary input\n",
    "    delta_OFF_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_EL = opti.variable(1, N)  # binary input\n",
    "\n",
    "\n",
    "    # delta_i are discrete variables (binary)\n",
    "    discrete_var = [0]*(N+1) + [0]*(N+1) + [0]*N + [0]*N + [0]*N + [0]*N + [0]*N + [1]*N + [1]*N + [1]*N + [0]*N + [1]*N + [1]*N + [1]*N\n",
    "\n",
    "    # Solver\n",
    "    opti.solver('gurobi', {'discrete': discrete_var})\n",
    "    #opti.solver('bonmin', {'discrete': discrete_var, 'bonmin.tol': 1e-4, 'bonmin.print_level': 0, 'print_time': 0})\n",
    "\n",
    "\n",
    "    # -----------------------------\n",
    "    # Constraints\n",
    "    # -----------------------------\n",
    "\n",
    "    \n",
    "    # Initial storage level\n",
    "    opti.subject_to(SOE[0] == SOE_initial)\n",
    "    opti.subject_to(LOH[0] == LOH_initial)\n",
    "\n",
    "    # Impose initial state of FC and electrolyzer to be OFF\n",
    "    opti.subject_to(delta_OFF_EL[0] == 1)\n",
    "    opti.subject_to(delta_OFF_FC[0] == 1)\n",
    "    \n",
    "\n",
    "    # Constraints at every time step\n",
    "    for t in range(N):\n",
    "\n",
    "            # Bounds on grid\n",
    "            opti.subject_to(pv[t] + P_grid_pchs[t] + 0.89*P_FC[t] == load[t] + P_grid_sale[t] + P_batt[t] + 1.19*P_EL[t])\n",
    "            opti.subject_to(P_grid_sale[t]>=0)\n",
    "            opti.subject_to(P_grid_sale[t]<=P_grid_max_sale)\n",
    "            opti.subject_to(P_grid_pchs[t]>=0)\n",
    "            opti.subject_to(P_grid_pchs[t]<=P_grid_max)\n",
    "\n",
    "            # Bounds on battery and SOE\n",
    "            opti.subject_to(P_batt_abs[t] >= P_batt[t])\n",
    "            opti.subject_to(P_batt_abs[t] >= -P_batt[t])\n",
    "        \n",
    "            \n",
    "            opti.subject_to(P_batt[t]>= -0.9 * P_battery_nom)\n",
    "            opti.subject_to(P_batt[t]<= 0.9 * P_battery_nom)\n",
    "        \n",
    "            opti.subject_to(SOE[t+1] == SOE[t] + P_batt[t] * t_s/3600)\n",
    "            opti.subject_to(SOE[t] >= SOE_min)\n",
    "            opti.subject_to(SOE[t] <= SOE_max)\n",
    "            \n",
    "            # Bounds on hydrogen storage \n",
    "            opti.subject_to(LOH[t+1] == LOH[t] + (P_EL[t] * eta_EL - P_FC[t]/eta_FC) * t_s / C_max)\n",
    "            opti.subject_to(LOH[t] >= LOH_min)\n",
    "            opti.subject_to(LOH[t] <= LOH_max)                \n",
    "\n",
    "            # Constraints on electrolyzer\n",
    "            # Bounds when ON                \n",
    "            opti.subject_to(P_EL[t] >= delta_ON_EL[t] * P_EL_min)\n",
    "            opti.subject_to(P_EL[t] <= delta_ON_EL[t] * P_EL_max)\n",
    "        \n",
    "            # Ramping constraints                \n",
    "            if t < N-1:                \n",
    "                opti.subject_to(P_EL[t+1] - P_EL[t] <= r_EL)\n",
    "                opti.subject_to(P_EL[t] - P_EL[t+1] <= r_EL)\n",
    "                            \n",
    "            # Constraints on fuel cell\n",
    "            # Bounds when ON\n",
    "            opti.subject_to(P_FC[t] >= delta_ON_FC[t] * P_FC_min)\n",
    "            opti.subject_to(P_FC[t] <= delta_ON_FC[t] * P_FC_max)\n",
    "            \n",
    "            # Ramping constraints                \n",
    "            if t < N-1:                \n",
    "                opti.subject_to(P_FC[t+1] - P_FC[t] <= r_FC)\n",
    "                opti.subject_to(P_FC[t] - P_FC[t+1] <= r_FC)\n",
    "                            \n",
    "            # States \n",
    "            opti.subject_to(delta_ON_EL[t] >= 0)\n",
    "            opti.subject_to(delta_ON_EL[t] <= 1)\n",
    "            opti.subject_to(delta_OFF_EL[t] >= 0)\n",
    "            opti.subject_to(delta_OFF_EL[t] <= 1)\n",
    "            opti.subject_to(sigma_OFF_ON_EL[t] >= 0)\n",
    "            opti.subject_to(sigma_OFF_ON_EL[t] <= 1)\n",
    "\n",
    "            opti.subject_to(delta_ON_FC[t] >= 0)\n",
    "            opti.subject_to(delta_ON_FC[t] <= 1)\n",
    "            opti.subject_to(delta_OFF_FC[t] >= 0)\n",
    "            opti.subject_to(delta_OFF_FC[t] <= 1)\n",
    "            opti.subject_to(sigma_OFF_ON_FC[t] >= 0)\n",
    "            opti.subject_to(sigma_OFF_ON_FC[t] <= 1)    \n",
    "                           \n",
    "            opti.subject_to(delta_ON_EL[t] + delta_OFF_EL[t] == 1)\n",
    "            opti.subject_to(delta_ON_FC[t] + delta_OFF_FC[t] == 1)\n",
    "            \n",
    "            # Transitions EL and FC\n",
    "            if t >= 1 and t <= N:              \n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - delta_OFF_EL[t-1] <= 0)\n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - delta_ON_EL[t] <= 0)\n",
    "                opti.subject_to(delta_OFF_EL[t-1] + delta_ON_EL[t] - sigma_OFF_ON_EL[t] <= 1)\n",
    "\n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - delta_OFF_FC[t-1] <= 0)\n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - delta_ON_FC[t] <= 0)\n",
    "                opti.subject_to(delta_OFF_FC[t-1] + delta_ON_FC[t] - sigma_OFF_ON_FC[t] <= 1)\n",
    "\n",
    "\n",
    "            # Transitions dwwelling time for OFF-STB\n",
    "            T_CLD_EL = 1 \n",
    "            T_CLD_FC = 1\n",
    "             # Electrolyzer constraints\n",
    "            if t >= 1 and t < N - T_CLD_EL:\n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - sigma_OFF_ON_EL[t-1] <= sigma_OFF_ON_EL[t+1:t + T_CLD_EL+1])\n",
    "                sigma_sum_EL = sum([sigma_OFF_ON_EL[t-j] for j in range(T_CLD_EL)])\n",
    "                opti.subject_to(sigma_sum_EL <= T_CLD_EL)\n",
    "    \n",
    "            # Fuel Cell constraints\n",
    "            if t >= 1 and t < N - T_CLD_FC:\n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - sigma_OFF_ON_FC[t-1] <= sigma_OFF_ON_FC[t+1:t + T_CLD_FC+1])\n",
    "                sigma_sum_FC = sum([sigma_OFF_ON_FC[t-j] for j in range(T_CLD_FC)])\n",
    "                opti.subject_to(sigma_sum_FC <= T_CLD_FC)\n",
    "             \n",
    "                    \n",
    "            # Bilinear to linear\n",
    "\n",
    "\n",
    "    # -----------------------------\n",
    "    # Objective\n",
    "    # -----------------------------\n",
    "\n",
    "    obj = sum(alpha_EL * t_s/3600 * delta_ON_EL[t] + C_EL * sigma_OFF_ON_EL[t] + alpha_FC * t_s/3600 * delta_ON_FC[t] \n",
    "    + C_FC * sigma_OFF_ON_FC[t] + c_battery * P_batt_abs[t] + rho_grid *(c_el[t]/1000 * P_grid_pchs[t] - rho_grid_sale * c_el[t]/1000 * P_grid_sale[t]) * t_s/3600 for t in range(N))\n",
    "    opti.minimize(obj)\n",
    "    \n",
    "    # -----------------------------\n",
    "    # Solve and get optimal values\n",
    "    # -----------------------------\n",
    "\n",
    "    sol = opti.solve()\n",
    "    \n",
    "    SOE_opt = sol.value(SOE)\n",
    "    LOH_opt = sol.value(LOH)\n",
    "    P_batt_opt = sol.value(P_batt)\n",
    "    P_batt_abs = sol.value(P_batt_abs)\n",
    "\n",
    "    P_grid_sale_opt = sol.value(P_grid_sale)\n",
    "    P_grid_pchs_opt = sol.value(P_grid_pchs)\n",
    "    \n",
    "    P_FC_opt = sol.value(P_FC)  \n",
    "    delta_ON_FC_opt = sol.value(delta_ON_FC)\n",
    "    delta_OFF_FC_opt = sol.value(delta_OFF_FC)\n",
    "    sigma_OFF_ON_FC_opt = sol.value(sigma_OFF_ON_FC)\n",
    "    P_EL_opt = sol.value(P_EL)\n",
    "    delta_ON_EL_opt = sol.value(delta_ON_EL)\n",
    "    delta_OFF_EL_opt = sol.value(delta_OFF_EL)\n",
    "    sigma_OFF_ON_EL_opt = sol.value(sigma_OFF_ON_EL)\n",
    "\n",
    "    obj_opt = round(sol.value(obj), 2)\n",
    "\n",
    "    return SOE_opt, LOH_opt, P_batt_opt, P_grid_sale_opt, P_grid_pchs_opt, delta_ON_EL_opt, delta_OFF_EL_opt, sigma_OFF_ON_EL_opt, P_EL_opt, delta_ON_FC_opt, delta_OFF_FC_opt, sigma_OFF_ON_FC_opt, P_FC_opt, obj_opt\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d7656666",
   "metadata": {},
   "outputs": [],
   "source": [
    "def optimizer_V2(T, t_s, c_el, pv, load, SOE_initial, LOH_initial): \n",
    "    # Adapt inputs: T (horizon of simulation), ts (sampling time), SOE_battery, LOH_hess, pv, load, c_el (electricity prices)\n",
    "    # states: SOE_battery, LOH_hess\n",
    "    # inputs to FMU: P_battery, P_FC_sys (start with P_FC), P_El_sys (start with P_El), state_FC, state_EL\n",
    "\n",
    "    # V2: no auxiliaries, no thermal model, include STB state, and transitions and costs between OFF-On\n",
    "    # inputs variables in MPC: P_battery, P_grid, P_FC, delta_ON_FC, delta_OFF_FC, sigma_OFF_ON_FC, P_EL, delta_ON_EL, delta_OFF_EL, sigma_OFF_ON_EL\n",
    "    \n",
    "    # Access global parameters\n",
    "    global P_grid_max, P_battery_nom, SOE_min, SOE_max\n",
    "    global LOH_min, LOH_max, C_max, eta_EL, eta_FC, P_EL_min, P_EL_max, P_EL_STB, P_FC_min, P_FC_max, P_FC_STB, r_EL, r_FC\n",
    "    global alpha_EL, alpha_FC, C_EL_ON, C_EL_STB, C_EL_OFF, C_FC_ON, C_FC_STB, C_FC_OFF, c_battery, P_grid_max_sale, rho_grid, rho_grid_sale\n",
    "\n",
    "    N = int(T // t_s)\n",
    "    \n",
    "    # Initialize\n",
    "    import casadi as ca\n",
    "    opti = ca.Opti(\"conic\")\n",
    "\n",
    "    # -----------------------------\n",
    "    # Variables and solver\n",
    "    # -----------------------------\n",
    "\n",
    " \n",
    "    SOE = opti.variable(1, N+1)  # state\n",
    "    LOH = opti.variable(1, N+1)  # state\n",
    "\n",
    "    P_batt = opti.variable(1, N)  # input\n",
    "    P_batt_abs = opti.variable(1,N) # binary input\n",
    "\n",
    "    P_grid_sale = opti.variable(1, N)        # input \n",
    "    P_grid_pchs = opti.variable(1, N)        # input \n",
    "\n",
    "    P_FC = opti.variable(1, N)          # input\n",
    "    delta_ON_FC = opti.variable(1, N)   # binary input\n",
    "    delta_STB_FC = opti.variable(1, N)  # binary input\n",
    "    delta_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_STB_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_STB_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_ON_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_STB_ON_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_ON_STB_FC = opti.variable(1, N)  # binary input\n",
    "\n",
    "    P_EL = opti.variable(1, N)          # input\n",
    "    delta_ON_EL = opti.variable(1, N)   # binary input\n",
    "    delta_STB_EL = opti.variable(1, N)  # binary input\n",
    "    delta_OFF_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_STB_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_STB_OFF_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_ON_OFF_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_STB_ON_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_ON_STB_EL = opti.variable(1, N)  # binary input\n",
    "\n",
    "    # binary inputs are discrete variables \n",
    "    discrete_var = [0]*(N+1) + [0]*(N+1) + [0]*N + [0]*N + [0]*N + [0]*N + [0]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [0]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N \n",
    "\n",
    "    # Solver\n",
    "    opti.solver('gurobi', {'discrete': discrete_var})\n",
    "    #opti.solver('bonmin', {'discrete': discrete_var, 'bonmin.tol': 1e-4, 'bonmin.print_level': 0, 'print_time': 0})\n",
    "\n",
    "    # -----------------------------\n",
    "    # Constraints\n",
    "    # -----------------------------\n",
    "    \n",
    "    # Initial storage level\n",
    "    opti.subject_to(SOE[0] == SOE_initial)\n",
    "    opti.subject_to(LOH[0] == LOH_initial)\n",
    "\n",
    "    # Impose initial state of FC and electrolyzer to be OFF\n",
    "    opti.subject_to(delta_OFF_EL[0] == 1)\n",
    "    opti.subject_to(delta_OFF_FC[0] == 1)\n",
    "\n",
    "    # Constraints at every time step\n",
    "    for t in range(N):\n",
    "        # Bounds on grid\n",
    "        opti.subject_to(pv[t] + P_grid_pchs[t] + (0.89*P_FC[t] - P_FC_STB * delta_STB_FC[t]) \n",
    "                        == load[t] + P_grid_sale[t] + P_batt[t]  + (1.19*P_EL[t] + P_EL_STB * delta_STB_EL[t]))\n",
    "        opti.subject_to(P_grid_sale[t]>=0)\n",
    "        opti.subject_to(P_grid_sale[t]<=P_grid_max_sale)\n",
    "        opti.subject_to(P_grid_pchs[t]>=0)\n",
    "        opti.subject_to(P_grid_pchs[t]<=P_grid_max)\n",
    "\n",
    "        # Bounds on battery and SOE\n",
    "        opti.subject_to(P_batt_abs[t] >= P_batt[t])\n",
    "        opti.subject_to(P_batt_abs[t] >= -P_batt[t])\n",
    "        \n",
    "        opti.subject_to(P_batt[t]>= - 0.9 * P_battery_nom)\n",
    "        opti.subject_to(P_batt[t]<= 0.9 * P_battery_nom)\n",
    "    \n",
    "        opti.subject_to(SOE[t+1] == SOE[t] + P_batt[t] * t_s/3600)\n",
    "        opti.subject_to(SOE[t] >= SOE_min)\n",
    "        opti.subject_to(SOE[t] <= SOE_max)\n",
    "        \n",
    "        # Bounds on hydrogen storage \n",
    "        opti.subject_to(LOH[t+1] == LOH[t] + (P_EL[t] * eta_EL - P_FC[t]/eta_FC) * t_s /C_max)\n",
    "        opti.subject_to(LOH[t] >= LOH_min)\n",
    "        opti.subject_to(LOH[t] <= LOH_max)                \n",
    "\n",
    "        # Constraints on electrolyzer\n",
    "        # Bounds when ON                \n",
    "        opti.subject_to(P_EL[t] >= delta_ON_EL[t] * P_EL_min)\n",
    "        opti.subject_to(P_EL[t] <= delta_ON_EL[t] * P_EL_max)\n",
    "    \n",
    "        # Ramping constraints                \n",
    "        if t < N-1:                \n",
    "            opti.subject_to(P_EL[t+1] - P_EL[t] <= r_EL)\n",
    "            opti.subject_to(P_EL[t] - P_EL[t+1] <= r_EL)\n",
    "                        \n",
    "        # Constraints on fuel cell\n",
    "        # Bounds when ON\n",
    "        opti.subject_to(P_FC[t] >= delta_ON_FC[t] * P_FC_min)\n",
    "        opti.subject_to(P_FC[t] <= delta_ON_FC[t] * P_FC_max)\n",
    "        \n",
    "        # Ramping constraints                \n",
    "        if t < N-1:                \n",
    "            opti.subject_to(P_FC[t+1] - P_FC[t] <= r_FC)\n",
    "            opti.subject_to(P_FC[t] - P_FC[t+1] <= r_FC)\n",
    "                        \n",
    "        # States    \n",
    "        opti.subject_to(delta_ON_EL[t] >= 0)\n",
    "        opti.subject_to(delta_ON_EL[t] <= 1)\n",
    "        opti.subject_to(delta_OFF_EL[t] >= 0)\n",
    "        opti.subject_to(delta_OFF_EL[t] <= 1)\n",
    "        opti.subject_to(delta_STB_EL[t] >= 0)\n",
    "        opti.subject_to(delta_STB_EL[t] <= 1)\n",
    "\n",
    "        opti.subject_to(delta_ON_FC[t] >= 0)\n",
    "        opti.subject_to(delta_ON_FC[t] <= 1)\n",
    "        opti.subject_to(delta_OFF_FC[t] >= 0)\n",
    "        opti.subject_to(delta_OFF_FC[t] <= 1)\n",
    "        opti.subject_to(delta_STB_FC[t] >= 0)\n",
    "        opti.subject_to(delta_STB_FC[t] <= 1)\n",
    "\n",
    "        opti.subject_to(delta_ON_EL[t] + delta_STB_EL[t] + delta_OFF_EL[t] == 1)\n",
    "        opti.subject_to(delta_ON_FC[t] + delta_STB_FC[t] + delta_OFF_FC[t] == 1)\n",
    "        \n",
    "        # Transitions EL\n",
    "        opti.subject_to(sigma_OFF_STB_EL[t] >= 0)\n",
    "        opti.subject_to(sigma_OFF_STB_EL[t] <= 1)  \n",
    "        opti.subject_to(sigma_STB_OFF_EL[t] >= 0)\n",
    "        opti.subject_to(sigma_STB_ON_EL[t] >= 0)\n",
    "        opti.subject_to(sigma_ON_STB_EL[t] >= 0)\n",
    "        opti.subject_to(sigma_ON_OFF_EL[t] >= 0)\n",
    "        opti.subject_to(sigma_OFF_ON_EL[t] == 0)\n",
    "\n",
    "        if t >= 1 and t < N:  \n",
    "            # OFF to STB\n",
    "            opti.subject_to(sigma_OFF_STB_EL[t] - delta_OFF_EL[t-1] <= 0)\n",
    "            opti.subject_to(sigma_OFF_STB_EL[t] - delta_STB_EL[t] <= 0)\n",
    "            opti.subject_to(delta_OFF_EL[t-1] + delta_STB_EL[t] - sigma_OFF_STB_EL[t] <= 1)\n",
    "            # STB to OFF\n",
    "            opti.subject_to(sigma_STB_OFF_EL[t] - delta_STB_EL[t-1] <= 0)\n",
    "            opti.subject_to(sigma_STB_OFF_EL[t] - delta_OFF_EL[t] <= 0)\n",
    "            opti.subject_to(delta_STB_EL[t-1] + delta_OFF_EL[t] - sigma_STB_OFF_EL[t] <= 1)\n",
    "            # STB to ON\n",
    "            opti.subject_to(sigma_STB_ON_EL[t] - delta_STB_EL[t-1] <= 0)\n",
    "            opti.subject_to(sigma_STB_ON_EL[t] - delta_ON_EL[t] <= 0)\n",
    "            opti.subject_to(delta_STB_EL[t-1] + delta_ON_EL[t] - sigma_STB_ON_EL[t] <= 1)\n",
    "            # ON to STB\n",
    "            opti.subject_to(sigma_ON_STB_EL[t] - delta_ON_EL[t-1] <= 0)\n",
    "            opti.subject_to(sigma_ON_STB_EL[t] - delta_STB_EL[t] <= 0)\n",
    "            opti.subject_to(delta_ON_EL[t-1] + delta_STB_EL[t] - sigma_ON_STB_EL[t] <= 1)\n",
    "            # ON to OFF\n",
    "            opti.subject_to(sigma_ON_OFF_EL[t] - delta_ON_EL[t-1] <= 0)\n",
    "            opti.subject_to(sigma_ON_OFF_EL[t] - delta_OFF_EL[t] <= 0)\n",
    "            opti.subject_to(delta_ON_EL[t-1] + delta_OFF_EL[t] - sigma_ON_OFF_EL[t] <= 1)\n",
    "            # OFF to ON\n",
    "            opti.subject_to(sigma_OFF_ON_EL[t] - delta_OFF_EL[t-1] <= 0)\n",
    "            opti.subject_to(sigma_OFF_ON_EL[t] - delta_ON_EL[t] <= 0)\n",
    "            opti.subject_to(delta_OFF_EL[t-1] + delta_ON_EL[t] - sigma_OFF_ON_EL[t] <= 1)\n",
    "\n",
    "\n",
    "        # Transitions FC \n",
    "        opti.subject_to(sigma_OFF_STB_FC[t] >= 0)\n",
    "        opti.subject_to(sigma_OFF_STB_FC[t] <= 1)\n",
    "        opti.subject_to(sigma_STB_OFF_FC[t] >= 0)\n",
    "        opti.subject_to(sigma_STB_ON_FC[t] >= 0)\n",
    "        opti.subject_to(sigma_ON_STB_FC[t] >= 0)\n",
    "        opti.subject_to(sigma_ON_OFF_FC[t] >= 0)\n",
    "        opti.subject_to(sigma_OFF_ON_FC[t] == 0)\n",
    "\n",
    "        if t >= 1 and t < N:  \n",
    "            # OFF to STB\n",
    "            opti.subject_to(sigma_OFF_STB_FC[t] - delta_OFF_FC[t-1] <= 0)\n",
    "            opti.subject_to(sigma_OFF_STB_FC[t] - delta_STB_FC[t] <= 0)\n",
    "            opti.subject_to(delta_OFF_FC[t-1] + delta_STB_FC[t] - sigma_OFF_STB_FC[t] <= 1)\n",
    "            # STB to OFF\n",
    "            opti.subject_to(sigma_STB_OFF_FC[t] - delta_STB_FC[t-1] <= 0)\n",
    "            opti.subject_to(sigma_STB_OFF_FC[t] - delta_OFF_FC[t] <= 0)\n",
    "            opti.subject_to(delta_STB_FC[t-1] + delta_OFF_FC[t] - sigma_STB_OFF_FC[t] <= 1)\n",
    "            # STB to ON\n",
    "            opti.subject_to(sigma_STB_ON_FC[t] - delta_STB_FC[t-1] <= 0)\n",
    "            opti.subject_to(sigma_STB_ON_FC[t] - delta_ON_FC[t] <= 0)\n",
    "            opti.subject_to(delta_STB_FC[t-1] + delta_ON_FC[t] - sigma_STB_ON_FC[t] <= 1)\n",
    "            # ON to STB\n",
    "            opti.subject_to(sigma_ON_STB_FC[t] - delta_ON_FC[t-1] <= 0)\n",
    "            opti.subject_to(sigma_ON_STB_FC[t] - delta_STB_FC[t] <= 0)\n",
    "            opti.subject_to(delta_ON_FC[t-1] + delta_STB_FC[t] - sigma_ON_STB_FC[t] <= 1)\n",
    "            # ON to OFF\n",
    "            opti.subject_to(sigma_ON_OFF_FC[t] - delta_ON_FC[t-1] <= 0)\n",
    "            opti.subject_to(sigma_ON_OFF_FC[t] - delta_OFF_FC[t] <= 0)\n",
    "            opti.subject_to(delta_ON_FC[t-1] + delta_OFF_FC[t] - sigma_ON_OFF_FC[t] <= 1)\n",
    "            # OFF to ON              \n",
    "            opti.subject_to(sigma_OFF_ON_FC[t] - delta_OFF_FC[t-1] <= 0)\n",
    "            opti.subject_to(sigma_OFF_ON_FC[t] - delta_ON_FC[t] <= 0)\n",
    "            opti.subject_to(delta_OFF_FC[t-1] + delta_ON_FC[t] - sigma_OFF_ON_FC[t] <= 1)\n",
    "\n",
    "        # Transitions dwwelling time for OFF-STB\n",
    "        T_CLD_EL = 1\n",
    "        T_CLD_FC = 1\n",
    "        # Electrolyzer constraints\n",
    "        if t >= 1 and t < N - T_CLD_EL:\n",
    "            opti.subject_to(sigma_OFF_STB_EL[t] - sigma_OFF_STB_EL[t-1] <= sigma_OFF_STB_EL[t+1:t + T_CLD_EL+1])\n",
    "            sigma_sum_EL = sum([sigma_OFF_STB_EL[t-j] for j in range(T_CLD_EL)]) # should go to rage(T_CDL_EL+1)\n",
    "            opti.subject_to(sigma_sum_EL <= T_CLD_EL)\n",
    "        \n",
    "        # Fuel Cell constraints\n",
    "        if t >= 1 and t < N - T_CLD_FC:\n",
    "            opti.subject_to(sigma_OFF_STB_FC[t] - sigma_OFF_STB_FC[t-1] <= sigma_OFF_STB_FC[t+1:t + T_CLD_FC+1])\n",
    "            sigma_sum_FC = sum([sigma_OFF_STB_FC[t-j] for j in range(T_CLD_FC)])  # should go to rage(T_CDL_FC+1)\n",
    "            opti.subject_to(sigma_sum_FC <= T_CLD_FC)\n",
    "             \n",
    "                    \n",
    "\n",
    "\n",
    "    # -----------------------------\n",
    "    # Objective\n",
    "    # -----------------------------\n",
    "\n",
    "    obj = sum(alpha_EL * t_s/3600 * delta_ON_EL[t] + C_EL_ON * sigma_OFF_STB_EL[t] + C_EL_STB * sigma_STB_OFF_EL[t] + C_EL_OFF * sigma_ON_OFF_EL[t] \n",
    "    + alpha_FC * t_s/3600 * delta_ON_FC[t] + C_FC_ON * sigma_OFF_STB_FC[t] + C_FC_STB * sigma_STB_OFF_FC[t] + C_FC_OFF * sigma_ON_OFF_FC[t] \n",
    "    + c_battery * P_batt_abs[t] + rho_grid * (c_el[t]/1000 * P_grid_pchs[t] - rho_grid_sale * c_el[t]/1000 * P_grid_sale[t]) * t_s/3600 for t in range(N))\n",
    "    opti.minimize(obj)\n",
    "    \n",
    "    # -----------------------------\n",
    "    # Solve and get optimal values\n",
    "    # -----------------------------\n",
    "\n",
    "    sol = opti.solve()\n",
    "    \n",
    "    SOE_opt = sol.value(SOE)\n",
    "    LOH_opt = sol.value(LOH)\n",
    "\n",
    "    P_batt_opt = sol.value(P_batt)\n",
    "    P_batt_abs = sol.value(P_batt_abs)\n",
    "\n",
    "    P_grid_sale_opt = sol.value(P_grid_sale)\n",
    "    P_grid_pchs_opt = sol.value(P_grid_pchs)\n",
    "\n",
    "    P_FC_opt = sol.value(P_FC)  \n",
    "    delta_ON_FC_opt = sol.value(delta_ON_FC)\n",
    "    delta_STB_FC_opt = sol.value(delta_STB_FC)\n",
    "    delta_OFF_FC_opt = sol.value(delta_OFF_FC)\n",
    "    sigma_OFF_STB_FC_opt = sol.value(sigma_OFF_STB_FC)\n",
    "    sigma_STB_OFF_FC_opt = sol.value(sigma_STB_OFF_FC)\n",
    "    sigma_ON_STB_FC_opt = sol.value(sigma_ON_STB_FC)\n",
    "    sigma_STB_ON_FC_opt = sol.value(sigma_STB_ON_FC)\n",
    "    sigma_ON_OFF_FC_opt = sol.value(sigma_ON_OFF_FC)\n",
    "    sigma_OFF_ON_FC_opt = sol.value(sigma_OFF_ON_FC)\n",
    "\n",
    "    P_EL_opt = sol.value(P_EL)  \n",
    "    delta_ON_EL_opt = sol.value(delta_ON_EL)\n",
    "    delta_STB_EL_opt = sol.value(delta_STB_EL)\n",
    "    delta_OFF_EL_opt = sol.value(delta_OFF_EL)\n",
    "    sigma_OFF_STB_EL_opt = sol.value(sigma_OFF_STB_EL)\n",
    "    sigma_STB_OFF_EL_opt = sol.value(sigma_STB_OFF_EL)\n",
    "    sigma_ON_STB_EL_opt = sol.value(sigma_ON_STB_EL)\n",
    "    sigma_STB_ON_EL_opt = sol.value(sigma_STB_ON_EL)\n",
    "    sigma_ON_OFF_EL_opt = sol.value(sigma_ON_OFF_EL)\n",
    "    sigma_OFF_ON_EL_opt = sol.value(sigma_OFF_ON_EL)\n",
    "\n",
    "\n",
    "    obj_opt = round(sol.value(obj), 3)\n",
    "\n",
    "    return SOE_opt, LOH_opt, P_batt_opt, P_grid_sale_opt, P_grid_pchs_opt, delta_ON_EL_opt, delta_STB_EL_opt, delta_OFF_EL_opt, sigma_OFF_STB_EL_opt, sigma_STB_OFF_EL_opt, sigma_ON_STB_EL_opt, sigma_STB_ON_EL_opt, sigma_ON_OFF_EL_opt, sigma_OFF_ON_EL_opt, P_EL_opt, delta_ON_FC_opt, delta_STB_FC_opt, delta_OFF_FC_opt, sigma_OFF_STB_FC_opt, sigma_STB_OFF_FC_opt, sigma_ON_STB_FC_opt, sigma_STB_ON_FC_opt, sigma_ON_OFF_FC_opt, sigma_OFF_ON_FC_opt , P_FC_opt, obj_opt\n",
    "        \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b4a43567",
   "metadata": {},
   "outputs": [],
   "source": [
    "def optimizer_V3(T, t_s, c_el, pv, load, SOE_initial, LOH_initial): \n",
    "    # states: SOE_battery, LOH_hess\n",
    "    # inputs to FMU: P_battery, P_FC_sys (start with P_FC), P_El_sys (start with P_El), state_FC, state_EL\n",
    "\n",
    "    # V3: no auxiliaries, no thermal model, no STB state, add transitions and costs between OFF-On, PWA efficiency\n",
    "    # inputs variables in MPC: P_battery, P_grid, P_FC, delta_ON_FC, delta_OFF_FC, sigma_OFF_ON_FC, P_EL, delta_ON_EL, delta_OFF_EL, sigma_OFF_ON_EL\n",
    "    \n",
    "    # Access global parameters\n",
    "    global m, M, P_grid_max, P_battery_nom, SOE_min, SOE_max\n",
    "    global LOH_min, LOH_max, C_max, eta_EL, eta_FC, P_EL_min, P_EL_max, P_EL_STB, P_FC_min, P_FC_max, P_FC_STB, r_EL, r_FC\n",
    "    global alpha_EL, alpha_FC, C_EL, C_FC, c_battery, P_grid_max_sale, rho_grid, rho_grid_sale\n",
    "    \n",
    " \n",
    "\n",
    "    N = int(T // t_s)\n",
    "    \n",
    "    # Initialize\n",
    "    import casadi as ca\n",
    "    #opti = ca.Opti()\n",
    "    opti = ca.Opti(\"conic\")\n",
    "\n",
    "\n",
    "    # -----------------------------\n",
    "    # Variables and solver\n",
    "    # -----------------------------\n",
    "\n",
    "    SOE = opti.variable(1, N+1)  # state\n",
    "    LOH = opti.variable(1, N+1)  # state\n",
    "\n",
    "    P_batt = opti.variable(1, N)  # input\n",
    "    P_batt_abs = opti.variable(1,N) # input\n",
    "\n",
    "    P_grid_sale = opti.variable(1, N)        # input \n",
    "    P_grid_pchs = opti.variable(1, N)        # input \n",
    "\n",
    "    P_FC = opti.variable(1, N)          # input\n",
    "    delta_ON_FC = opti.variable(1, N)   # binary input\n",
    "    delta_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_FC = opti.variable(1, N)  # binary input\n",
    "    x1_FC = opti.variable(1, N)   # PWA binary input\n",
    "    x2_FC = opti.variable(1, N)  # PWA binary input\n",
    "    x3_FC = opti.variable(1, N)  # PWA binary input\n",
    "    z1_FC = opti.variable(1, N)          # bilinear input\n",
    "    z2_FC = opti.variable(1, N)          # bilinear input\n",
    "    z3_FC = opti.variable(1, N)          # bilinear input\n",
    "\n",
    "    P_EL = opti.variable(1, N)          # input\n",
    "    delta_ON_EL = opti.variable(1, N)   # binary input\n",
    "    delta_OFF_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_EL = opti.variable(1, N)  # binary input\n",
    "    x1_EL = opti.variable(1, N)   # PWA binary input\n",
    "    x2_EL = opti.variable(1, N)  # PWA binary input\n",
    "    x3_EL = opti.variable(1, N)  # PWA binary input\n",
    "    z1_EL = opti.variable(1, N)          # bilinear input\n",
    "    z2_EL = opti.variable(1, N)          # bilinear input\n",
    "    z3_EL = opti.variable(1, N)          # bilinear input\n",
    "\n",
    "    # binary inputs are discrete variables \n",
    "    discrete_var = [0]*(N+1) + [0]*(N+1) + [0]*N + [0]*N + [0]*N + [0]*N + [0]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [0]*N + [0]*N + [0]*N + [0]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [0]*N + [0]*N + [0]*N\n",
    "\n",
    "    # Solver\n",
    "    opti.solver('gurobi', {'discrete': discrete_var})\n",
    "    #opti.solver('bonmin', {'discrete': discrete_var, 'bonmin.tol': 1e-4, 'bonmin.print_level': 0, 'print_time': 0})\n",
    "\n",
    "    # -----------------------------\n",
    "    # Constraints\n",
    "    # -----------------------------\n",
    "\n",
    "    \n",
    "    # Initial storage level\n",
    "    opti.subject_to(SOE[0] == SOE_initial)\n",
    "    opti.subject_to(LOH[0] == LOH_initial)\n",
    "\n",
    "    # Impose initial state of FC and electrolyzer to be OFF\n",
    "    opti.subject_to(delta_OFF_EL[0] == 1)\n",
    "    opti.subject_to(delta_OFF_FC[0] == 1)\n",
    "\n",
    "\n",
    "    \n",
    "\n",
    "    # Constraints at every time step\n",
    "    for t in range(N):\n",
    "\n",
    "            # Bounds on grid\n",
    "            opti.subject_to(pv[t] + P_grid_pchs[t] + 0.89*P_FC[t] == load[t] + P_grid_sale[t] + P_batt[t] + 1.19*P_EL[t])\n",
    "            opti.subject_to(P_grid_sale[t]>=0)\n",
    "            opti.subject_to(P_grid_sale[t]<=P_grid_max_sale)\n",
    "            opti.subject_to(P_grid_pchs[t]>=0)\n",
    "            opti.subject_to(P_grid_pchs[t]<=P_grid_max)\n",
    "\n",
    "            # Bounds on battery and SOE\n",
    "            opti.subject_to(P_batt_abs[t] >= P_batt[t])\n",
    "            opti.subject_to(P_batt_abs[t] >= -P_batt[t])\n",
    "            \n",
    "            opti.subject_to(P_batt[t]>= -0.9 * P_battery_nom)\n",
    "            opti.subject_to(P_batt[t]<= 0.9 * P_battery_nom)\n",
    "        \n",
    "            opti.subject_to(SOE[t+1] == SOE[t] + P_batt[t]  * t_s/3600)\n",
    "            opti.subject_to(SOE[t] >= SOE_min)\n",
    "            opti.subject_to(SOE[t] <= SOE_max)\n",
    "            \n",
    "            #PWA efficiency electrolyzer\n",
    "            # We introduce 3 binary variables xi to activate the piece i of the PWA\n",
    "            opti.subject_to(x1_EL[t] >= 0)\n",
    "            opti.subject_to(x1_EL[t] <= 1)\n",
    "            opti.subject_to(x2_EL[t] >= 0)\n",
    "            opti.subject_to(x2_EL[t] <= 1)\n",
    "            opti.subject_to(x3_EL[t] >= 0)\n",
    "            opti.subject_to(x3_EL[t] <= 1)    \n",
    "\n",
    "            opti.subject_to(delta_OFF_EL[t] + x1_EL[t] + x2_EL[t] + x3_EL[t] == 1)\n",
    "\n",
    "            opti.subject_to(P_EL[t] >= P_EL_min - M * (1-x1_EL[t]))\n",
    "            opti.subject_to(P_EL[t] <= 1700 + M * (1-x1_EL[t]))\n",
    "            opti.subject_to(P_EL[t] >= 1700 - M * (1-x2_EL[t]))\n",
    "            opti.subject_to(P_EL[t] <= 3750 + M * (1-x2_EL[t]))\n",
    "            opti.subject_to(P_EL[t] >= 3750 - M * (1-x3_EL[t]))\n",
    "            opti.subject_to(P_EL[t] <= P_EL_max + M * (1-x3_EL[t]))\n",
    "           \n",
    "            # Piecewise linear expression to replace P_EL * eta_EL:\n",
    "            #Non-linear: P_eta_EL = x1_EL[t] * (0.71685 * P_EL[t] + 71.8325) + x2_EL[t] * (0.56641 * P_EL[t] + 327.2039) + x3_EL[t] * (0.48142 * P_EL[t] + 616.6985)\n",
    "            # We introduce 3 variables zi to replace the bilinear product xi * P_EL\n",
    "            P_eta_EL =  0.68186 * z1_EL[t] + x1_EL[t] * 41.1124 + 0.59523 * z2_EL[t] + x2_EL[t] * 192.3783 + 0.53432 * z3_EL[t] + x3_EL[t] * 400.5637\n",
    "            \n",
    "            # Bi-linear constraints\n",
    "            # For z1_EL and x1_EL\n",
    "            opti.subject_to(z1_EL[t] >= m * x1_EL[t])\n",
    "            opti.subject_to(z1_EL[t] <= M * x1_EL[t])\n",
    "            opti.subject_to(z1_EL[t] >= P_EL[t] - M * (1 - x1_EL[t]))\n",
    "            opti.subject_to(z1_EL[t] <= P_EL[t] + m * (1 - x1_EL[t]))\n",
    "            # For z2_EL and x2_EL\n",
    "            opti.subject_to(z2_EL[t] >= m * x2_EL[t])\n",
    "            opti.subject_to(z2_EL[t] <= M * x2_EL[t])\n",
    "            opti.subject_to(z2_EL[t] >= P_EL[t] - M * (1 - x2_EL[t]))\n",
    "            opti.subject_to(z2_EL[t] <= P_EL[t] + m * (1 - x2_EL[t]))\n",
    "            # For z3_EL and x3_EL\n",
    "            opti.subject_to(z3_EL[t] >= m * x3_EL[t])\n",
    "            opti.subject_to(z3_EL[t] <= M * x3_EL[t])\n",
    "            opti.subject_to(z3_EL[t] >= P_EL[t] - M * (1 - x3_EL[t]))\n",
    "            opti.subject_to(z3_EL[t] <= P_EL[t] + m * (1 - x3_EL[t]))\n",
    "\n",
    "            #PWA efficiency fuel cell\n",
    "            # We introduce 3 binary variables xi to activate the piece i of the PWA\n",
    "            opti.subject_to(x1_FC[t] >= 0)\n",
    "            opti.subject_to(x1_FC[t] <= 1)\n",
    "            opti.subject_to(x2_FC[t] >= 0)\n",
    "            opti.subject_to(x2_FC[t] <= 1)\n",
    "            opti.subject_to(x3_FC[t] >= 0)\n",
    "            opti.subject_to(x3_FC[t] <= 1)    \n",
    "\n",
    "            opti.subject_to(delta_OFF_FC[t] + x1_FC[t] + x2_FC[t] + x3_FC[t] == 1)\n",
    "\n",
    "            opti.subject_to(P_FC[t] >= P_FC_min - M * (1-x1_FC[t]))\n",
    "            opti.subject_to(P_FC[t] <= 2200 + M * (1-x1_FC[t]))\n",
    "            opti.subject_to(P_FC[t] >= 2200 - M * (1-x2_FC[t]))\n",
    "            opti.subject_to(P_FC[t] <= 3800 + M * (1-x2_FC[t]))\n",
    "            opti.subject_to(P_FC[t] >= 3800 - M * (1-x3_FC[t]))\n",
    "            opti.subject_to(P_FC[t] <= P_FC_max + M * (1-x3_FC[t]))\n",
    "\n",
    "            # Piecewise linear expression to replace P_FC / eta_FC:\n",
    "            #Non-linear: P_eta_FC = x1_FC[t] * (2.8347 * P_FC[t] - 292.4739) + x2_FC[t] * (4.0384 * P_FC[t] -2929.9436) + x3_FC[t] * (6.3259 * P_FC[t] + 11682.9301)\n",
    "            # We introduce 3 variables zi to replace the bilinear product xi * P_FC\n",
    "            P_eta_FC = 2.8474 * z1_FC[t] - x1_FC[t] * 322.7086 +  3.7637 * z2_FC[t] - x2_FC[t] * 2337.5082 + 4.9519 * z3_FC[t] - x3_FC[t] * 6862.2995\n",
    "\n",
    "            # Bi-linear constraints\n",
    "            # For z1_FC and x1_FC\n",
    "            opti.subject_to(z1_FC[t] >= m * x1_FC[t])\n",
    "            opti.subject_to(z1_FC[t] <= M * x1_FC[t])\n",
    "            opti.subject_to(z1_FC[t] >= P_FC[t] - M * (1 - x1_FC[t]))\n",
    "            opti.subject_to(z1_FC[t] <= P_FC[t] + m * (1 - x1_FC[t]))\n",
    "            # For z2_FC and x2_FC\n",
    "            opti.subject_to(z2_FC[t] >= m * x2_FC[t])\n",
    "            opti.subject_to(z2_FC[t] <= M * x2_FC[t])\n",
    "            opti.subject_to(z2_FC[t] >= P_FC[t] - M * (1 - x2_FC[t]))\n",
    "            opti.subject_to(z2_FC[t] <= P_FC[t] + m * (1 - x2_FC[t]))\n",
    "            # For z3_FC and x3_FC\n",
    "            opti.subject_to(z3_FC[t] >= m * x3_FC[t])\n",
    "            opti.subject_to(z3_FC[t] <= M * x3_FC[t])\n",
    "            opti.subject_to(z3_FC[t] >= P_FC[t] - M * (1 - x3_FC[t]))\n",
    "            opti.subject_to(z3_FC[t] <= P_FC[t] + m * (1 - x3_FC[t]))\n",
    "\n",
    "\n",
    "            # Bounds on hydrogen storage \n",
    "            opti.subject_to(LOH[t+1] == LOH[t] + (P_eta_EL - P_eta_FC)/ C_max * t_s )\n",
    "            opti.subject_to(LOH[t] >= LOH_min)\n",
    "            opti.subject_to(LOH[t] <= LOH_max)                \n",
    "\n",
    "            # Constraints on electrolyzer\n",
    "            # Bounds when ON                \n",
    "            opti.subject_to(P_EL[t] >= delta_ON_EL[t] * P_EL_min)\n",
    "            opti.subject_to(P_EL[t] <= delta_ON_EL[t] * P_EL_max)\n",
    "        \n",
    "            # Ramping constraints                \n",
    "            if t < N-1:                \n",
    "                opti.subject_to(P_EL[t+1] - P_EL[t] <= r_EL)\n",
    "                opti.subject_to(P_EL[t] - P_EL[t+1] <= r_EL)\n",
    "                            \n",
    "            # Constraints on fuel cell\n",
    "            # Bounds when ON\n",
    "            opti.subject_to(P_FC[t] >= delta_ON_FC[t] * P_FC_min)\n",
    "            opti.subject_to(P_FC[t] <= delta_ON_FC[t] * P_FC_max)\n",
    "            \n",
    "            # Ramping constraints                \n",
    "            if t < N-1:                \n",
    "                opti.subject_to(P_FC[t+1] - P_FC[t] <= r_FC)\n",
    "                opti.subject_to(P_FC[t] - P_FC[t+1] <= r_FC)\n",
    "                            \n",
    "            # States      \n",
    "            opti.subject_to(delta_ON_EL[t] >= 0)\n",
    "            opti.subject_to(delta_ON_EL[t] <= 1)\n",
    "            opti.subject_to(delta_OFF_EL[t] >= 0)\n",
    "            opti.subject_to(delta_OFF_EL[t] <= 1)\n",
    "            opti.subject_to(sigma_OFF_ON_EL[t] >= 0)\n",
    "            opti.subject_to(sigma_OFF_ON_EL[t] <= 1)\n",
    "\n",
    "            opti.subject_to(delta_ON_FC[t] >= 0)\n",
    "            opti.subject_to(delta_ON_FC[t] <= 1)\n",
    "            opti.subject_to(delta_OFF_FC[t] >= 0)\n",
    "            opti.subject_to(delta_OFF_FC[t] <= 1)\n",
    "            opti.subject_to(sigma_OFF_ON_FC[t] >= 0)\n",
    "            opti.subject_to(sigma_OFF_ON_FC[t] <= 1)\n",
    "\n",
    "            opti.subject_to(delta_ON_EL[t] + delta_OFF_EL[t] == 1)\n",
    "            opti.subject_to(delta_ON_FC[t] + delta_OFF_FC[t] == 1)\n",
    "            \n",
    "            # Transitions EL and FC\n",
    "            if t >= 1 and t <= N:              \n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - delta_OFF_EL[t-1] <= 0)\n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - delta_ON_EL[t] <= 0)\n",
    "                opti.subject_to(delta_OFF_EL[t-1] + delta_ON_EL[t] - sigma_OFF_ON_EL[t] <= 1)\n",
    "\n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - delta_OFF_FC[t-1] <= 0)\n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - delta_ON_FC[t] <= 0)\n",
    "                opti.subject_to(delta_OFF_FC[t-1] + delta_ON_FC[t] - sigma_OFF_ON_FC[t] <= 1)\n",
    "\n",
    "\n",
    "            # Transitions dwwelling time for OFF-STB\n",
    "            T_CLD_EL = 1\n",
    "            T_CLD_FC = 1\n",
    "             # Electrolyzer constraints\n",
    "            if t >= 1 and t < N - T_CLD_EL:\n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - sigma_OFF_ON_EL[t-1] <= sigma_OFF_ON_EL[t+1:t + T_CLD_EL+1])\n",
    "                sigma_sum_EL = sum([sigma_OFF_ON_EL[t-j] for j in range(T_CLD_EL)])\n",
    "                opti.subject_to(sigma_sum_EL <= T_CLD_EL)\n",
    "    \n",
    "            # Fuel Cell constraints\n",
    "            if t >= 1 and t < N - T_CLD_FC:\n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - sigma_OFF_ON_FC[t-1] <= sigma_OFF_ON_FC[t+1:t + T_CLD_FC+1])\n",
    "                sigma_sum_FC = sum([sigma_OFF_ON_FC[t-j] for j in range(T_CLD_FC)])\n",
    "                opti.subject_to(sigma_sum_FC <= T_CLD_FC)\n",
    "             \n",
    "            \n",
    "   \n",
    "    # -----------------------------\n",
    "    # Objective\n",
    "    # -----------------------------\n",
    "\n",
    "    obj = sum(alpha_EL * t_s/3600 * delta_ON_EL[t] + C_EL * sigma_OFF_ON_EL[t] + alpha_FC * t_s/3600 * delta_ON_FC[t] \n",
    "    + C_FC * sigma_OFF_ON_FC[t] + c_battery * P_batt_abs[t] + rho_grid *(c_el[t]/1000 * P_grid_pchs[t] - rho_grid_sale * c_el[t]/1000 * P_grid_sale[t]) * t_s/3600 for t in range(N))\n",
    "    opti.minimize(obj)\n",
    "    \n",
    "    # -----------------------------\n",
    "    # Solve and get optimal values\n",
    "    # -----------------------------\n",
    "\n",
    "    sol = opti.solve()\n",
    "    \n",
    "    SOE_opt = sol.value(SOE)\n",
    "    LOH_opt = sol.value(LOH)\n",
    "    P_batt_opt = sol.value(P_batt)\n",
    "    P_batt_abs_opt = sol.value(P_batt_abs)\n",
    "    P_grid_sale_opt = sol.value(P_grid_sale)\n",
    "    P_grid_pchs_opt = sol.value(P_grid_pchs)\n",
    "    P_FC_opt = sol.value(P_FC)  \n",
    "    delta_ON_FC_opt = sol.value(delta_ON_FC)\n",
    "    delta_OFF_FC_opt = sol.value(delta_OFF_FC)\n",
    "    sigma_OFF_ON_FC_opt = sol.value(sigma_OFF_ON_FC)\n",
    "    x1_FC_opt = sol.value(x1_FC)\n",
    "    x2_FC_opt = sol.value(x2_FC)\n",
    "    x3_FC_opt = sol.value(x3_FC)\n",
    "    z1_FC_opt = sol.value(z1_FC)\n",
    "    z2_FC_opt = sol.value(z2_FC)\n",
    "    z3_FC_opt = sol.value(z3_FC)\n",
    "    P_EL_opt = sol.value(P_EL)\n",
    "    delta_ON_EL_opt = sol.value(delta_ON_EL)\n",
    "    delta_OFF_EL_opt = sol.value(delta_OFF_EL)\n",
    "    sigma_OFF_ON_EL_opt = sol.value(sigma_OFF_ON_EL)\n",
    "    x1_EL_opt = sol.value(x1_EL)\n",
    "    x2_EL_opt = sol.value(x2_EL)\n",
    "    x3_EL_opt = sol.value(x3_EL)\n",
    "    z1_EL_opt = sol.value(z1_EL)\n",
    "    z2_EL_opt = sol.value(z2_EL)\n",
    "    z3_EL_opt = sol.value(z3_EL)\n",
    "\n",
    "    obj_opt = round(sol.value(obj), 3)\n",
    "\n",
    "    return SOE_opt, LOH_opt, P_batt_opt, P_grid_sale_opt, P_grid_pchs_opt, delta_ON_EL_opt, delta_OFF_EL_opt, sigma_OFF_ON_EL_opt , P_EL_opt, delta_ON_FC_opt, delta_OFF_FC_opt, sigma_OFF_ON_FC_opt , P_FC_opt, obj_opt\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c4808e30",
   "metadata": {},
   "outputs": [],
   "source": [
    "def optimizer_V4(T, t_s, c_el, pv, load, SOE_initial, LOH_initial): \n",
    "    # states: SOE_battery, LOH_hess\n",
    "    # inputs to FMU: P_battery, P_FC_sys (start with P_FC), P_El_sys (start with P_El), state_FC, state_EL\n",
    "\n",
    "    # V4: no auxiliaries, no thermal model, STB state, add all transitions and costs, PWA efficiency\n",
    "   # inputs variables in MPC: P_battery, P_grid, P_FC, delta_ON_FC, delta_OFF_FC, sigma_OFF_ON_FC, P_EL, delta_ON_EL, delta_OFF_EL, sigma_OFF_ON_EL\n",
    "    \n",
    "    # Access global parameters\n",
    "    global m, M, P_grid_max, P_battery_nom, SOE_min, SOE_max\n",
    "    global LOH_min, LOH_max, C_max, eta_EL, eta_FC, P_EL_min, P_EL_max, P_EL_STB, P_FC_min, P_FC_max, P_FC_STB, r_EL, r_FC\n",
    "    global alpha_EL, alpha_FC, C_EL_ON, C_EL_STB, C_EL_OFF, C_FC_ON, C_FC_STB, C_FC_OFF, c_battery, P_grid_max_sale, rho_grid, rho_grid_sale\n",
    " \n",
    "\n",
    "    N = int(T // t_s)\n",
    "    \n",
    "    # Initialize\n",
    "    #import casadi as ca\n",
    "    #opti = ca.Opti()\n",
    "\n",
    "    opti = ca.Opti(\"conic\")\n",
    "\n",
    "\n",
    "    # -----------------------------\n",
    "    # Variables and solver\n",
    "    # -----------------------------\n",
    "\n",
    "    SOE = opti.variable(1, N+1)  # state\n",
    "    LOH = opti.variable(1, N+1)  # state\n",
    "\n",
    "    P_batt = opti.variable(1, N)  # input\n",
    "    P_batt_abs = opti.variable(1,N) # input\n",
    "\n",
    "    P_grid_sale = opti.variable(1, N)        # input \n",
    "    P_grid_pchs = opti.variable(1, N)        # input \n",
    "\n",
    "    P_FC = opti.variable(1, N)          # input\n",
    "    delta_ON_FC = opti.variable(1, N)   # binary input\n",
    "    delta_STB_FC = opti.variable(1, N)  # binary input\n",
    "    delta_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_STB_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_STB_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_ON_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_STB_ON_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_ON_STB_FC = opti.variable(1, N)  # binary input\n",
    "    x1_FC = opti.variable(1, N)   # PWA binary input\n",
    "    x2_FC = opti.variable(1, N)  # PWA binary input\n",
    "    x3_FC = opti.variable(1, N)  # PWA binary input\n",
    "    z1_FC = opti.variable(1, N)          # bilinear input\n",
    "    z2_FC = opti.variable(1, N)          # bilinear input\n",
    "    z3_FC = opti.variable(1, N)          # bilinear input\n",
    "\n",
    "    P_EL = opti.variable(1, N)          # input\n",
    "    delta_ON_EL = opti.variable(1, N)   # binary input\n",
    "    delta_STB_EL = opti.variable(1, N)  # binary input\n",
    "    delta_OFF_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_STB_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_STB_OFF_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_ON_OFF_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_STB_ON_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_ON_STB_EL = opti.variable(1, N)  # binary input\n",
    "    x1_EL = opti.variable(1, N)   # PWA binary input\n",
    "    x2_EL = opti.variable(1, N)  # PWA binary input\n",
    "    x3_EL = opti.variable(1, N)  # PWA binary input\n",
    "    z1_EL = opti.variable(1, N)          # bilinear input\n",
    "    z2_EL = opti.variable(1, N)          # bilinear input\n",
    "    z3_EL = opti.variable(1, N)          # bilinear input\n",
    "\n",
    "    # binary inputs are discrete variables \n",
    "    discrete_var = [0]*(N+1) + [0]*(N+1) + [0]*N + [0]*N + [0]*N + [0]*N + [0]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [0]*N + [0]*N + [0]*N + [0]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [0]*N + [0]*N + [0]*N\n",
    "\n",
    "    # Solver\n",
    "    opti.solver('gurobi', {'discrete': discrete_var})\n",
    "    \n",
    "    #opti.solver('bonmin', {'discrete': discrete_var, 'bonmin.tol': 1e-4, 'bonmin.print_level': 0, 'print_time': 0})\n",
    "\n",
    "    # -----------------------------\n",
    "    # Constraints\n",
    "    # -----------------------------\n",
    "\n",
    "    \n",
    "    # Initial storage level\n",
    "    opti.subject_to(SOE[0] == SOE_initial)\n",
    "    opti.subject_to(LOH[0] == LOH_initial)\n",
    "\n",
    "    # Impose initial state of FC and electrolyzer to be OFF\n",
    "    opti.subject_to(delta_OFF_EL[0] == 1)\n",
    "    opti.subject_to(delta_OFF_FC[0] == 1)\n",
    "    \n",
    "\n",
    "    # Constraints at every time step\n",
    "    for t in range(N):\n",
    "\n",
    "            # Bounds on grid\n",
    "            opti.subject_to(pv[t] + P_grid_pchs[t] + (0.89 * P_FC[t] - P_FC_STB * delta_STB_FC[t]) \n",
    "                                == load[t] + P_grid_sale[t] + P_batt[t]  + (1.19 * P_EL[t] + P_EL_STB * delta_STB_EL[t]))\n",
    "            \n",
    "            opti.subject_to(P_grid_sale[t]>=0)\n",
    "            opti.subject_to(P_grid_sale[t]<=P_grid_max_sale)\n",
    "            opti.subject_to(P_grid_pchs[t]>=0)\n",
    "            opti.subject_to(P_grid_pchs[t]<=P_grid_max)\n",
    "\n",
    "            # Bounds on battery and SOE\n",
    "            opti.subject_to(P_batt_abs[t] >= P_batt[t])\n",
    "            opti.subject_to(P_batt_abs[t] >= -P_batt[t])\n",
    "            \n",
    "            opti.subject_to(P_batt[t]>= -0.9 * P_battery_nom)\n",
    "            opti.subject_to(P_batt[t]<= 0.9 * P_battery_nom)\n",
    "        \n",
    "            opti.subject_to(SOE[t+1] == SOE[t] + P_batt[t]  * t_s/3600)\n",
    "            opti.subject_to(SOE[t] >= SOE_min)\n",
    "            opti.subject_to(SOE[t] <= SOE_max)\n",
    "            \n",
    "            #PWA efficiency electrolyzer\n",
    "            # We introduce 3 binary variables xi to activate the piece i of the PWA\n",
    "            opti.subject_to(x1_EL[t] >= 0)\n",
    "            opti.subject_to(x1_EL[t] <= 1)\n",
    "            opti.subject_to(x2_EL[t] >= 0)\n",
    "            opti.subject_to(x2_EL[t] <= 1)\n",
    "            opti.subject_to(x3_EL[t] >= 0)\n",
    "            opti.subject_to(x3_EL[t] <= 1)    \n",
    "\n",
    "            opti.subject_to(delta_ON_EL[t] == x1_EL[t] + x2_EL[t] + x3_EL[t])\n",
    "\n",
    "            opti.subject_to(P_EL[t] >= P_EL_min - M * (1-x1_EL[t]))\n",
    "            opti.subject_to(P_EL[t] <= 1700 + M * (1-x1_EL[t]))\n",
    "            opti.subject_to(P_EL[t] >= 1700 - M * (1-x2_EL[t]))\n",
    "            opti.subject_to(P_EL[t] <= 3750 + M * (1-x2_EL[t]))\n",
    "            opti.subject_to(P_EL[t] >= 3750 - M * (1-x3_EL[t]))\n",
    "            opti.subject_to(P_EL[t] <= P_EL_max + M * (1-x3_EL[t]))\n",
    "           \n",
    "            # Piecewise linear expression to replace P_EL * eta_EL:\n",
    "            #Non-linear: P_eta_EL = x1_EL[t] * (0.71685 * P_EL[t] + 71.8325) + x2_EL[t] * (0.56641 * P_EL[t] + 327.2039) + x3_EL[t] * (0.48142 * P_EL[t] + 616.6985)\n",
    "            # We introduce 3 variables zi to replace the bilinear product xi * P_EL\n",
    "            P_eta_EL =  0.68186 * z1_EL[t] + x1_EL[t] * 41.1124 + 0.59523 * z2_EL[t] + x2_EL[t] * 192.3783 + 0.53432 * z3_EL[t] + x3_EL[t] * 400.5637\n",
    "            \n",
    "            # Bi-linear constraints\n",
    "            # For z1_EL and x1_EL\n",
    "            opti.subject_to(z1_EL[t] >= m * x1_EL[t])\n",
    "            opti.subject_to(z1_EL[t] <= M * x1_EL[t])\n",
    "            opti.subject_to(z1_EL[t] >= P_EL[t] - M * (1 - x1_EL[t]))\n",
    "            opti.subject_to(z1_EL[t] <= P_EL[t] + m * (1 - x1_EL[t]))\n",
    "            # For z2_EL and x2_EL\n",
    "            opti.subject_to(z2_EL[t] >= m * x2_EL[t])\n",
    "            opti.subject_to(z2_EL[t] <= M * x2_EL[t])\n",
    "            opti.subject_to(z2_EL[t] >= P_EL[t] - M * (1 - x2_EL[t]))\n",
    "            opti.subject_to(z2_EL[t] <= P_EL[t] + m * (1 - x2_EL[t]))\n",
    "            # For z3_EL and x3_EL\n",
    "            opti.subject_to(z3_EL[t] >= m * x3_EL[t])\n",
    "            opti.subject_to(z3_EL[t] <= M * x3_EL[t])\n",
    "            opti.subject_to(z3_EL[t] >= P_EL[t] - M * (1 - x3_EL[t]))\n",
    "            opti.subject_to(z3_EL[t] <= P_EL[t] + m * (1 - x3_EL[t]))\n",
    "\n",
    "            #PWA efficiency fuel cell\n",
    "            # We introduce 3 binary variables xi to activate the piece i of the PWA\n",
    "            opti.subject_to(x1_FC[t] >= 0)\n",
    "            opti.subject_to(x1_FC[t] <= 1)\n",
    "            opti.subject_to(x2_FC[t] >= 0)\n",
    "            opti.subject_to(x2_FC[t] <= 1)\n",
    "            opti.subject_to(x3_FC[t] >= 0)\n",
    "            opti.subject_to(x3_FC[t] <= 1)    \n",
    "\n",
    "            opti.subject_to(delta_ON_FC[t] == x1_FC[t] + x2_FC[t] + x3_FC[t] )\n",
    "\n",
    "            opti.subject_to(P_FC[t] >= P_FC_min - M * (1-x1_FC[t]))\n",
    "            opti.subject_to(P_FC[t] <= 2200 + M * (1-x1_FC[t]))\n",
    "            opti.subject_to(P_FC[t] >= 2200 - M * (1-x2_FC[t]))\n",
    "            opti.subject_to(P_FC[t] <= 3800 + M * (1-x2_FC[t]))\n",
    "            opti.subject_to(P_FC[t] >= 3800 - M * (1-x3_FC[t]))\n",
    "            opti.subject_to(P_FC[t] <= P_FC_max + M * (1-x3_FC[t]))\n",
    "\n",
    "            # Piecewise linear expression to replace P_FC / eta_FC:\n",
    "            #Non-linear: P_eta_FC = x1_FC[t] * (2.8347 * P_FC[t] - 292.4739) + x2_FC[t] * (4.0384 * P_FC[t] -2929.9436) + x3_FC[t] * (6.3259 * P_FC[t] + 11682.9301)\n",
    "            # We introduce 3 variables zi to replace the bilinear product xi * P_FC\n",
    "            P_eta_FC = 2.8474 * z1_FC[t] - x1_FC[t] * 322.7086 +  3.7637 * z2_FC[t] - x2_FC[t] * 2337.5082 + 4.9519 * z3_FC[t] - x3_FC[t] * 6862.2995\n",
    "\n",
    "            # Bi-linear constraints\n",
    "            # For z1_FC and x1_FC\n",
    "            opti.subject_to(z1_FC[t] >= m * x1_FC[t])\n",
    "            opti.subject_to(z1_FC[t] <= M * x1_FC[t])\n",
    "            opti.subject_to(z1_FC[t] >= P_FC[t] - M * (1 - x1_FC[t]))\n",
    "            opti.subject_to(z1_FC[t] <= P_FC[t] + m * (1 - x1_FC[t]))\n",
    "            # For z2_FC and x2_FC\n",
    "            opti.subject_to(z2_FC[t] >= m * x2_FC[t])\n",
    "            opti.subject_to(z2_FC[t] <= M * x2_FC[t])\n",
    "            opti.subject_to(z2_FC[t] >= P_FC[t] - M * (1 - x2_FC[t]))\n",
    "            opti.subject_to(z2_FC[t] <= P_FC[t] + m * (1 - x2_FC[t]))\n",
    "            # For z3_FC and x3_FC\n",
    "            opti.subject_to(z3_FC[t] >= m * x3_FC[t])\n",
    "            opti.subject_to(z3_FC[t] <= M * x3_FC[t])\n",
    "            opti.subject_to(z3_FC[t] >= P_FC[t] - M * (1 - x3_FC[t]))\n",
    "            opti.subject_to(z3_FC[t] <= P_FC[t] + m * (1 - x3_FC[t]))\n",
    "\n",
    "\n",
    "            # Bounds on hydrogen storage : 1.5 being hydrogen stoichiometric coefficient\n",
    "            opti.subject_to(LOH[t+1] == LOH[t] + (P_eta_EL - P_eta_FC)/ C_max * t_s )\n",
    "            opti.subject_to(LOH[t] >= LOH_min)\n",
    "            opti.subject_to(LOH[t] <= LOH_max)                \n",
    "\n",
    "            # Constraints on electrolyzer\n",
    "            # Bounds when ON                \n",
    "            opti.subject_to(P_EL[t] >= delta_ON_EL[t] * P_EL_min)\n",
    "            opti.subject_to(P_EL[t] <= delta_ON_EL[t] * P_EL_max)\n",
    "        \n",
    "            # Ramping constraints                \n",
    "            #if t < N-1:                \n",
    "            #    opti.subject_to(P_EL[t+1] - P_EL[t] <= r_EL)\n",
    "            #    opti.subject_to(P_EL[t] - P_EL[t+1] <= r_EL)\n",
    "                            \n",
    "            # Constraints on fuel cell\n",
    "            # Bounds when ON\n",
    "            opti.subject_to(P_FC[t] >= delta_ON_FC[t] * P_FC_min)\n",
    "            opti.subject_to(P_FC[t] <= delta_ON_FC[t] * P_FC_max)\n",
    "            \n",
    "            # Ramping constraints                \n",
    "            #if t < N-1:                \n",
    "            #    opti.subject_to(P_FC[t+1] - P_FC[t] <= r_FC)\n",
    "            #    opti.subject_to(P_FC[t] - P_FC[t+1] <= r_FC)\n",
    "   \n",
    "            \n",
    "            # States    \n",
    "            opti.subject_to(delta_ON_EL[t] >= 0)\n",
    "            opti.subject_to(delta_ON_EL[t] <= 1)\n",
    "            opti.subject_to(delta_OFF_EL[t] >= 0)\n",
    "            opti.subject_to(delta_OFF_EL[t] <= 1)\n",
    "            opti.subject_to(delta_STB_EL[t] >= 0)\n",
    "            opti.subject_to(delta_STB_EL[t] <= 1)\n",
    "\n",
    "            opti.subject_to(delta_ON_FC[t] >= 0)\n",
    "            opti.subject_to(delta_ON_FC[t] <= 1)\n",
    "            opti.subject_to(delta_OFF_FC[t] >= 0)\n",
    "            opti.subject_to(delta_OFF_FC[t] <= 1)\n",
    "            opti.subject_to(delta_STB_FC[t] >= 0)\n",
    "            opti.subject_to(delta_STB_FC[t] <= 1)\n",
    "\n",
    "            opti.subject_to(delta_ON_EL[t] + delta_STB_EL[t] + delta_OFF_EL[t] == 1)\n",
    "            opti.subject_to(delta_ON_FC[t] + delta_STB_FC[t] + delta_OFF_FC[t] == 1)\n",
    "            \n",
    "            # Transitions EL\n",
    "                \n",
    "            opti.subject_to(sigma_OFF_STB_EL[t] >= 0)\n",
    "            opti.subject_to(sigma_OFF_STB_EL[t] <= 1)  \n",
    "            opti.subject_to(sigma_STB_OFF_EL[t] >= 0)\n",
    "            opti.subject_to(sigma_STB_ON_EL[t] >= 0)\n",
    "            opti.subject_to(sigma_ON_STB_EL[t] >= 0)\n",
    "            opti.subject_to(sigma_ON_OFF_EL[t] >= 0)\n",
    "            opti.subject_to(sigma_OFF_ON_EL[t] == 0)\n",
    "\n",
    "            if t >= 1 and t < N:  \n",
    "                # OFF to STB\n",
    "                opti.subject_to(sigma_OFF_STB_EL[t] - delta_OFF_EL[t-1] <= 0)\n",
    "                opti.subject_to(sigma_OFF_STB_EL[t] - delta_STB_EL[t] <= 0)\n",
    "                opti.subject_to(delta_OFF_EL[t-1] + delta_STB_EL[t] - sigma_OFF_STB_EL[t] <= 1)\n",
    "                # STB to OFF\n",
    "                opti.subject_to(sigma_STB_OFF_EL[t] - delta_STB_EL[t-1] <= 0)\n",
    "                opti.subject_to(sigma_STB_OFF_EL[t] - delta_OFF_EL[t] <= 0)\n",
    "                opti.subject_to(delta_STB_EL[t-1] + delta_OFF_EL[t] - sigma_STB_OFF_EL[t] <= 1)\n",
    "                # STB to ON\n",
    "                opti.subject_to(sigma_STB_ON_EL[t] - delta_STB_EL[t-1] <= 0)\n",
    "                opti.subject_to(sigma_STB_ON_EL[t] - delta_ON_EL[t] <= 0)\n",
    "                opti.subject_to(delta_STB_EL[t-1] + delta_ON_EL[t] - sigma_STB_ON_EL[t] <= 1)\n",
    "                # ON to STB\n",
    "                opti.subject_to(sigma_ON_STB_EL[t] - delta_ON_EL[t-1] <= 0)\n",
    "                opti.subject_to(sigma_ON_STB_EL[t] - delta_STB_EL[t] <= 0)\n",
    "                opti.subject_to(delta_ON_EL[t-1] + delta_STB_EL[t] - sigma_ON_STB_EL[t] <= 1)\n",
    "                # ON to OFF\n",
    "                opti.subject_to(sigma_ON_OFF_EL[t] - delta_ON_EL[t-1] <= 0)\n",
    "                opti.subject_to(sigma_ON_OFF_EL[t] - delta_OFF_EL[t] <= 0)\n",
    "                opti.subject_to(delta_ON_EL[t-1] + delta_OFF_EL[t] - sigma_ON_OFF_EL[t] <= 1)\n",
    "                # OFF to ON\n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - delta_OFF_EL[t-1] <= 0)\n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - delta_ON_EL[t] <= 0)\n",
    "                opti.subject_to(delta_OFF_EL[t-1] + delta_ON_EL[t] - sigma_OFF_ON_EL[t] <= 1)\n",
    "\n",
    "\n",
    "            # Transitions FC \n",
    "            opti.subject_to(sigma_OFF_STB_FC[t] >= 0)\n",
    "            opti.subject_to(sigma_OFF_STB_FC[t] <= 1)\n",
    "            opti.subject_to(sigma_STB_OFF_FC[t] >= 0)\n",
    "            opti.subject_to(sigma_STB_ON_FC[t] >= 0)\n",
    "            opti.subject_to(sigma_ON_STB_FC[t] >= 0)\n",
    "            opti.subject_to(sigma_ON_OFF_FC[t] >= 0)\n",
    "            opti.subject_to(sigma_OFF_ON_FC[t] == 0)\n",
    "\n",
    "            if t >= 1 and t < N: \n",
    "                # OFF to STB\n",
    "                opti.subject_to(sigma_OFF_STB_FC[t] - delta_OFF_FC[t-1] <= 0)\n",
    "                opti.subject_to(sigma_OFF_STB_FC[t] - delta_STB_FC[t] <= 0)\n",
    "                opti.subject_to(delta_OFF_FC[t-1] + delta_STB_FC[t] - sigma_OFF_STB_FC[t] <= 1)\n",
    "                # STB to OFF\n",
    "                opti.subject_to(sigma_STB_OFF_FC[t] - delta_STB_FC[t-1] <= 0)\n",
    "                opti.subject_to(sigma_STB_OFF_FC[t] - delta_OFF_FC[t] <= 0)\n",
    "                opti.subject_to(delta_STB_FC[t-1] + delta_OFF_FC[t] - sigma_STB_OFF_FC[t] <= 1)\n",
    "                # STB to ON\n",
    "                opti.subject_to(sigma_STB_ON_FC[t] - delta_STB_FC[t-1] <= 0)\n",
    "                opti.subject_to(sigma_STB_ON_FC[t] - delta_ON_FC[t] <= 0)\n",
    "                opti.subject_to(delta_STB_FC[t-1] + delta_ON_FC[t] - sigma_STB_ON_FC[t] <= 1)\n",
    "                # ON to STB\n",
    "                opti.subject_to(sigma_ON_STB_FC[t] - delta_ON_FC[t-1] <= 0)\n",
    "                opti.subject_to(sigma_ON_STB_FC[t] - delta_STB_FC[t] <= 0)\n",
    "                opti.subject_to(delta_ON_FC[t-1] + delta_STB_FC[t] - sigma_ON_STB_FC[t] <= 1)\n",
    "                # ON to OFF\n",
    "                opti.subject_to(sigma_ON_OFF_FC[t] - delta_ON_FC[t-1] <= 0)\n",
    "                opti.subject_to(sigma_ON_OFF_FC[t] - delta_OFF_FC[t] <= 0)\n",
    "                opti.subject_to(delta_ON_FC[t-1] + delta_OFF_FC[t] - sigma_ON_OFF_FC[t] <= 1)\n",
    "                # OFF to ON              \n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - delta_OFF_FC[t-1] <= 0)\n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - delta_ON_FC[t] <= 0)\n",
    "                opti.subject_to(delta_OFF_FC[t-1] + delta_ON_FC[t] - sigma_OFF_ON_FC[t] <= 1)\n",
    "\n",
    "\n",
    "            # Transitions dwwelling time for OFF-STB\n",
    "            T_CLD_EL = 1\n",
    "            T_CLD_FC = 1\n",
    "            # Electrolyzer constraints\n",
    "            if t >= 1 and t < N - T_CLD_EL:\n",
    "                opti.subject_to(sigma_OFF_STB_EL[t] - sigma_OFF_STB_EL[t-1] <= sigma_OFF_STB_EL[t+1:t + T_CLD_EL+1])\n",
    "                sigma_sum_EL = sum([sigma_OFF_STB_EL[t-j] for j in range(T_CLD_EL)]) # should go to rage(T_CDL_EL+1)\n",
    "                opti.subject_to(sigma_sum_EL <= T_CLD_EL)\n",
    "        \n",
    "            # Fuel Cell constraints\n",
    "            if t >= 1 and t < N - T_CLD_FC:\n",
    "                opti.subject_to(sigma_OFF_STB_FC[t] - sigma_OFF_STB_FC[t-1] <= sigma_OFF_STB_FC[t+1:t + T_CLD_FC+1])\n",
    "                sigma_sum_FC = sum([sigma_OFF_STB_FC[t-j] for j in range(T_CLD_FC)])  # should go to rage(T_CDL_FC+1)\n",
    "                opti.subject_to(sigma_sum_FC <= T_CLD_FC)\n",
    "\n",
    "\n",
    "\n",
    "            \n",
    "   \n",
    "    # -----------------------------\n",
    "    # Objective\n",
    "    # -----------------------------\n",
    "\n",
    "    obj = sum(alpha_EL * t_s/3600 * delta_ON_EL[t] + C_EL_ON * sigma_OFF_STB_EL[t] + C_EL_STB * sigma_STB_OFF_EL[t] + C_EL_OFF * sigma_ON_OFF_EL[t] \n",
    "                + alpha_FC * t_s/3600 * delta_ON_FC[t] + C_FC_ON * sigma_OFF_STB_FC[t] + C_FC_STB * sigma_STB_OFF_FC[t] + C_FC_OFF * sigma_ON_OFF_FC[t] \n",
    "                + c_battery * P_batt_abs[t] + rho_grid * (c_el[t]/1000 * P_grid_pchs[t] - rho_grid_sale * c_el[t]/1000 * P_grid_sale[t]) * t_s/3600 for t in range(N))\n",
    "    opti.minimize(obj)\n",
    "    \n",
    "    # -----------------------------\n",
    "    # Solve and get optimal values\n",
    "    # -----------------------------\n",
    "\n",
    "    sol = opti.solve()\n",
    "    \n",
    "    SOE_opt = sol.value(SOE)\n",
    "    LOH_opt = sol.value(LOH)\n",
    "    P_batt_opt = sol.value(P_batt)\n",
    "    P_batt_abs_opt = sol.value(P_batt_abs)\n",
    "    P_grid_sale_opt = sol.value(P_grid_sale)\n",
    "    P_grid_pchs_opt = sol.value(P_grid_pchs)\n",
    "\n",
    "    P_FC_opt = sol.value(P_FC)  \n",
    "    delta_ON_FC_opt = sol.value(delta_ON_FC)\n",
    "    delta_STB_FC_opt = sol.value(delta_STB_FC)\n",
    "    delta_OFF_FC_opt = sol.value(delta_OFF_FC)\n",
    "    sigma_OFF_STB_FC_opt = sol.value(sigma_OFF_STB_FC)\n",
    "    sigma_STB_OFF_FC_opt = sol.value(sigma_STB_OFF_FC)\n",
    "    sigma_ON_STB_FC_opt = sol.value(sigma_ON_STB_FC)\n",
    "    sigma_STB_ON_FC_opt = sol.value(sigma_STB_ON_FC)\n",
    "    sigma_ON_OFF_FC_opt = sol.value(sigma_ON_OFF_FC)\n",
    "    sigma_OFF_ON_FC_opt = sol.value(sigma_OFF_ON_FC)\n",
    "    x1_FC_opt = sol.value(x1_FC)\n",
    "    x2_FC_opt = sol.value(x2_FC)\n",
    "    x3_FC_opt = sol.value(x3_FC)\n",
    "    z1_FC_opt = sol.value(z1_FC)\n",
    "    z2_FC_opt = sol.value(z2_FC)\n",
    "    z3_FC_opt = sol.value(z3_FC)\n",
    "\n",
    "    P_EL_opt = sol.value(P_EL)\n",
    "    delta_ON_EL_opt = sol.value(delta_ON_EL)\n",
    "    delta_STB_EL_opt = sol.value(delta_STB_EL)\n",
    "    delta_OFF_EL_opt = sol.value(delta_OFF_EL)\n",
    "    sigma_OFF_STB_EL_opt = sol.value(sigma_OFF_STB_EL)\n",
    "    sigma_STB_OFF_EL_opt = sol.value(sigma_STB_OFF_EL)\n",
    "    sigma_ON_STB_EL_opt = sol.value(sigma_ON_STB_EL)\n",
    "    sigma_STB_ON_EL_opt = sol.value(sigma_STB_ON_EL)\n",
    "    sigma_ON_OFF_EL_opt = sol.value(sigma_ON_OFF_EL)\n",
    "    sigma_OFF_ON_EL_opt = sol.value(sigma_OFF_ON_EL)\n",
    "    x1_EL_opt = sol.value(x1_EL)\n",
    "    x2_EL_opt = sol.value(x2_EL)\n",
    "    x3_EL_opt = sol.value(x3_EL)\n",
    "    z1_EL_opt = sol.value(z1_EL)\n",
    "    z2_EL_opt = sol.value(z2_EL)\n",
    "    z3_EL_opt = sol.value(z3_EL)\n",
    "\n",
    "    obj_opt = round(sol.value(obj), 3)\n",
    "\n",
    "    return SOE_opt, LOH_opt, P_batt_opt, P_grid_sale_opt, P_grid_pchs_opt, delta_ON_EL_opt, delta_STB_EL_opt, delta_OFF_EL_opt, sigma_OFF_STB_EL_opt, sigma_STB_OFF_EL_opt, sigma_ON_STB_EL_opt, sigma_STB_ON_EL_opt, sigma_ON_OFF_EL_opt, sigma_OFF_ON_EL_opt, P_EL_opt, delta_ON_FC_opt, delta_STB_FC_opt, delta_OFF_FC_opt, sigma_OFF_STB_FC_opt, sigma_STB_OFF_FC_opt, sigma_ON_STB_FC_opt, sigma_STB_ON_FC_opt, sigma_ON_OFF_FC_opt, sigma_OFF_ON_FC_opt , P_FC_opt, obj_opt\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "3314872d-50b6-4c67-9485-8b1f762d86e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define global parameters\n",
    "M = 100000\n",
    "m = 1\n",
    "\n",
    "R = 8.314\n",
    "F = 96485\n",
    "V_tn = 1.482\n",
    "T_amb = 273.15 + 23.5\n",
    "K=1.4\n",
    "NCV_H2 = 1.19951*10**8\n",
    "M_H2O = 18\n",
    "M_H2 = 2\n",
    "M_Air = 18\n",
    "M_O2 = 32\n",
    "\n",
    "\n",
    "# Electrolyzer parameters\n",
    "eta_EL = 0.6\n",
    "eta_F_EL = 0.95 # Faradaic efficiency\n",
    "P_EL_STB = 285.7\n",
    "P_EL_nom = 5000\n",
    "P_EL_max = 5000\n",
    "P_EL_min = 500\n",
    "r_EL = 4500 # 20 W/s or depeds on t_s\n",
    "C_rep_EL = 0.27*1.55*10**(-3)  # replacement cost (euro/W) - to be multiplied by installed power in W P_EL_nom\n",
    "N_H_EL = 40000     # number of hours\n",
    "C_OM_EL = 0.002    # O&M cost (euro/h)\n",
    "alpha_EL = 1000 * (C_rep_EL * P_EL_nom /N_H_EL + C_OM_EL) # (euro/Wh * W + euro/h)\n",
    "C_EL = 0.1334 #(euro)\n",
    "C_EL_ON = 0.123\n",
    "C_EL_STB = 0.0042 \n",
    "C_EL_OFF = 0.0062 \n",
    "# Electrolyzer auxiliaries parameters\n",
    "\n",
    "\n",
    "# Fuel cell parameters\n",
    "eta_FC = 0.4\n",
    "eta_F_FC = 0.95 # Faradaic efficiency\n",
    "P_FC_STB = 16.6\n",
    "P_FC_nom = 5000\n",
    "P_FC_max = 5000\n",
    "P_FC_min = 300\n",
    "r_FC = 4700 # 20 W/s if t_s < 15min, otherwise = P_FC_max  \n",
    "C_rep_FC = 0.27*1.55*10**(-3)  # replacement cost for the fuel cell (euro/W) - to be multiplied by installed power in W P_EL_nom\n",
    "N_H_FC = 40000     # number of hours for the fuel cell (h)\n",
    "C_OM_FC = 0.01    # O&M cost for the fuel cell (euro/h)\n",
    "alpha_FC = 1000 * (C_rep_FC * P_FC_nom /N_H_FC + C_OM_FC) # (euro/Wh * W + euro/h)\n",
    "C_FC = 0.018 #(euro)\n",
    "C_FC_ON = 0.01 \n",
    "C_FC_STB = 0.003 \n",
    "C_FC_OFF = 0.005\n",
    "# Fuel cell auxiliaries parameters\n",
    "T_nom_FC = 55 + 273.15\n",
    "T_in_FC = 40 + 273.15\n",
    "R_th_FC = 0.0455\n",
    "cp_H2O = 4182\n",
    "H_T = cp_H2O * ( T_nom_FC - T_amb)\n",
    "H_0 = 258800\n",
    "lambda_H2 = 1.5\n",
    "lambda_O2 = 2\n",
    "cp_H2 = 14380\n",
    "cp_Air = 923\n",
    "h_H2_in = cp_H2 * T_in_FC\n",
    "h_Air_in = cp_Air * T_amb\n",
    "h_H2_out = cp_H2 * T_nom_FC\n",
    "h_Air_out = cp_Air * T_nom_FC\n",
    "\n",
    "\n",
    "# Hydrogen storage parameters\n",
    "LOH_min = 0.1 # (1)\n",
    "LOH_max = 0.99 # (1)\n",
    "C_max = 5158.1*10**6 # (J), for LHV = 119.96 MJ/kg\n",
    "\n",
    "# Battery parameters\n",
    "E_battery_nom = 5000 # (Wh)\n",
    "C_battery_inv = 0.37  # investment cost for the battery (euro/Wh)\n",
    "N_battery_cycles = 4000  # number of battery cycles\n",
    "P_battery_nom = 5000 # (W)\n",
    "c_battery = C_battery_inv * E_battery_nom / (2 * N_battery_cycles * P_battery_nom) # (euro/W)\n",
    "eta_batt_ch = 0.98 # (1)\n",
    "eta_batt_disch = 0.98 # (1)\n",
    "SOE_min = 0.1 * E_battery_nom # (Wh)\n",
    "SOE_max = 0.9 * E_battery_nom # (Wh)\n",
    "\n",
    "# Grid arameters\n",
    "P_grid_max = 8000 # (W)\n",
    "P_grid_max_sale = 0\n",
    "\n",
    "rho_grid = 1\n",
    "rho_grid_sale = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "b7041ac7",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "elec_prices = pd.read_csv('electricity_prices.csv')\n",
    "c_el_w = elec_prices['Low Season Weekday'].values #price $/kWh \n",
    "c_el_week = np.tile(c_el_w, 5)\n",
    "\n",
    "c_el_wk = elec_prices['Low Season Weekend'].values #price $/kWh \n",
    "c_el_weekend = np.tile(c_el_wk, 2)\n",
    "\n",
    "c_el_week_full = np.concatenate((c_el_week, c_el_weekend))\n",
    "\n",
    "\n",
    "forecasts = pd.read_csv('forecasts_winter2.csv')\n",
    "pv = forecasts['P_PV'].values \n",
    "load = forecasts['P_load'].values\n",
    "\n",
    "SOE_initial = 2500  # Initial state of energy of the battery\n",
    "LOH_initial = 0.5  # Initial level of hydrogen"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "9c3c085f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define global simulation parameters\n",
    "T = 24*60*60  # Time horizon length: horizon T = 24h \n",
    "t_s = 15*60  # Time step size in seconds: ts = 15min -> for not losing too much on transitions for HESS, ideally ts should be smaller or equal to tau_CLD\n",
    "N = int(T//t_s)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "9f18c836-268e-43e3-be45-8402523a8eb6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Academic license - for non-commercial use only\n",
      "Academic license - for non-commercial use only\n",
      "Gurobi Optimizer version 9.0.0 build v9.0.0rc2 (mac64)\n",
      "Optimize a model with 13112 rows, 3650 columns and 26208 nonzeros\n",
      "Model fingerprint: 0x8016db5b\n",
      "Variable types: 1346 continuous, 2304 integer (0 binary)\n",
      "Coefficient statistics:\n",
      "  Matrix range     [9e-08, 1e+05]\n",
      "  Objective range  [2e-05, 3e+00]\n",
      "  Bounds range     [0e+00, 0e+00]\n",
      "  RHS range        [1e-01, 1e+05]\n",
      "Warning: Model contains large matrix coefficient range\n",
      "         Consider reformulating model or setting NumericFocus parameter\n",
      "         to avoid numerical issues.\n",
      "\n",
      "User MIP start did not produce a new incumbent solution\n",
      "User MIP start violates constraint R2 by 1.000000000\n",
      "\n",
      "Presolve removed 7050 rows and 1022 columns\n",
      "Presolve time: 0.39s\n",
      "Presolved: 6062 rows, 2628 columns, 19818 nonzeros\n",
      "Variable types: 1057 continuous, 1571 integer (1571 binary)\n",
      "Found heuristic solution: objective 191.6707473\n",
      "\n",
      "Root relaxation: objective 3.811654e+01, 717 iterations, 0.03 seconds\n",
      "Another try with MIP start\n",
      "\n",
      "    Nodes    |    Current Node    |     Objective Bounds      |     Work\n",
      " Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time\n",
      "\n",
      "H    0     0                      40.9104791   -4.34337   111%     -    0s\n",
      "     0     0   38.11654    0   87   40.91048   38.11654  6.83%     -    0s\n",
      "     0     0   38.14503    0   67   40.91048   38.14503  6.76%     -    0s\n",
      "     0     0   38.17395    0   70   40.91048   38.17395  6.69%     -    0s\n",
      "     0     0   38.61423    0   57   40.91048   38.61423  5.61%     -    0s\n",
      "     0     0   38.63724    0   59   40.91048   38.63724  5.56%     -    1s\n",
      "     0     0   38.63724    0   82   40.91048   38.63724  5.56%     -    1s\n",
      "     0     0   38.63724    0   66   40.91048   38.63724  5.56%     -    1s\n",
      "     0     0   38.64865    0   62   40.91048   38.64865  5.53%     -    1s\n",
      "     0     0   38.66190    0   23   40.91048   38.66190  5.50%     -    1s\n",
      "     0     0   38.66530    0   74   40.91048   38.66530  5.49%     -    1s\n",
      "     0     0   38.66530    0   74   40.91048   38.66530  5.49%     -    2s\n",
      "     0     2   38.67530    0   74   40.91048   38.67530  5.46%     -    2s\n",
      "*  159   105               6      40.9104303   38.86708  4.99%  11.2    3s\n",
      "   985   449   39.66997   15    9   40.91043   38.99506  4.68%  11.8    5s\n",
      "  1640   745   39.15074   24    4   40.91043   39.02701  4.60%  11.6   10s\n",
      "  5798  1709   39.20676   23   11   40.91043   39.13988  4.33%   9.8   15s\n",
      " 10285  3021   39.33314   30   33   40.91043   39.20018  4.18%   9.3   22s\n",
      " 12471  3469   39.24814   20    9   40.91043   39.22018  4.13%   9.3   25s\n",
      " 16380  3643   39.42663   20    7   40.91043   39.32506  3.88%   9.3   30s\n",
      " 21162  2107     cutoff   28        40.91043   39.69710  2.97%   9.7   35s\n",
      "\n",
      "Cutting planes:\n",
      "  Gomory: 20\n",
      "  Cover: 2\n",
      "  Implied bound: 22\n",
      "  MIR: 6\n",
      "  Flow cover: 14\n",
      "  Inf proof: 2\n",
      "  Relax-and-lift: 2\n",
      "\n",
      "Explored 24719 nodes (244161 simplex iterations) in 38.95 seconds\n",
      "Thread count was 4 (of 4 available processors)\n",
      "\n",
      "Solution count 3: 40.9104 40.9105 191.671 \n",
      "\n",
      "Optimal solution found (tolerance 1.00e-04)\n",
      "Best objective 4.091043032064e+01, best bound 4.091043032064e+01, gap 0.0000%\n"
     ]
    }
   ],
   "source": [
    "# Call the optimizer function\n",
    "\n",
    "# V0\n",
    "#SOE_opt, LOH_opt, P_batt_opt, P_grid_sale_opt, P_grid_pchs_opt, delta_ON_EL_opt, delta_OFF_EL_opt, P_EL_opt, delta_ON_FC_opt, delta_OFF_FC_opt, P_FC_opt, obj_opt = optimizer(T, t_s, c_el, pv, load, SOE_initial, LOH_initial)\n",
    "\n",
    "# V1 and V3\n",
    "#SOE_opt, LOH_opt, P_batt_opt, P_grid_sale_opt, P_grid_pchs_opt, delta_ON_EL_opt, delta_OFF_EL_opt, sigma_OFF_ON_EL_opt, P_EL_opt, delta_ON_FC_opt, delta_OFF_FC_opt, sigma_OFF_ON_FC_opt, P_FC_opt, obj_opt = optimizer_V3(T, t_s, c_el_week_full[5*N:6*N], pv[3*N:4*N], load[3*N:4*N], SOE_initial, LOH_initial)\n",
    "\n",
    "# V2 and V4\n",
    "SOE_opt, LOH_opt, P_batt_opt, P_grid_sale_opt, P_grid_pchs_opt, delta_ON_EL_opt, delta_STB_EL_opt, delta_OFF_EL_opt, sigma_OFF_STB_EL_opt, sigma_STB_OFF_EL_opt, sigma_ON_STB_EL_opt, sigma_STB_ON_EL_opt, sigma_ON_OFF_EL_opt, sigma_OFF_ON_EL_opt, P_EL_opt, delta_ON_FC_opt, delta_STB_FC_opt, delta_OFF_FC_opt, sigma_OFF_STB_FC_opt, sigma_STB_OFF_FC_opt, sigma_ON_STB_FC_opt, sigma_STB_ON_FC_opt, sigma_ON_OFF_FC_opt, sigma_OFF_ON_FC_opt , P_FC_opt, obj_opt = optimizer_V4(T, t_s, c_el_week_full[2*N:3*N], pv[2*N:3*N], load[2*N:3*N], SOE_initial, LOH_initial)\n",
    "\n",
    "# V5\n",
    "#SOE_opt, LOH_opt, P_batt_opt, P_grid_sale_opt, P_grid_pchs_opt, delta_ON_EL_opt, delta_STB_EL_opt, delta_OFF_EL_opt, sigma_OFF_STB_EL_opt, sigma_STB_OFF_EL_opt, sigma_ON_STB_EL_opt, sigma_STB_ON_EL_opt, sigma_ON_OFF_EL_opt, sigma_OFF_ON_EL_opt, P_EL_opt, delta_ON_FC_opt, delta_STB_FC_opt, delta_OFF_FC_opt, sigma_OFF_STB_FC_opt, sigma_STB_OFF_FC_opt, sigma_ON_STB_FC_opt, sigma_STB_ON_FC_opt, sigma_ON_OFF_FC_opt, sigma_OFF_ON_FC_opt , P_FC_opt, P_EL_aux, P_FC_aux, obj_opt = optimizer_V5(T, t_s, c_el_2d[:N], pv[:N], load[:N], SOE_initial, LOH_initial)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "5d0d2221",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "40.91"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Ensure inputs are lists, even if they contain a single float\n",
    "if isinstance(delta_ON_EL_opt, float):\n",
    "    delta_ON_EL_opt = [delta_ON_EL_opt]\n",
    "if isinstance(delta_OFF_EL_opt, float):\n",
    "    delta_OFF_EL_opt = [delta_OFF_EL_opt]    \n",
    "if isinstance(delta_ON_FC_opt, float):\n",
    "    delta_ON_FC_opt = [delta_ON_FC_opt]\n",
    "if isinstance(delta_OFF_FC_opt, float):\n",
    "    delta_OFF_FC_opt = [delta_OFF_FC_opt]\n",
    "\n",
    "state_EL = []\n",
    "state_FC = []\n",
    "\n",
    "# Loop over each time step\n",
    "for i in range(len(delta_ON_EL_opt)):\n",
    "    # Determine the state of the electrolyzer\n",
    "    if delta_ON_EL_opt[i] == 1:\n",
    "        state_EL.append(2)  # ON state\n",
    "    elif delta_OFF_EL_opt[i] == 1:\n",
    "        state_EL.append(0)  # OFF state\n",
    "    else:\n",
    "        state_EL.append(1)  # Standby state\n",
    "\n",
    "    # Determine the state of the fuel cell\n",
    "    if delta_ON_FC_opt[i] == 1:\n",
    "        state_FC.append(2)  # ON state\n",
    "    elif delta_OFF_FC_opt[i] == 1:\n",
    "        state_FC.append(0)  # OFF state\n",
    "    else:\n",
    "        state_FC.append(1)  # Standby state\n",
    "\n",
    "state_EL = np.array(state_EL)\n",
    "state_FC = np.array(state_FC)\n",
    "\n",
    "obj_opt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "f9185ca4-7a63-4a77-a8d9-462ec4ce755b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1440x1872 with 8 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "time = np.arange(T/t_s + 1) / 4  # Convert time to hours\n",
    "\n",
    "plt.figure(figsize=(20, 26))\n",
    "\n",
    "# Plot SOE\n",
    "plt.subplot(5, 2, 1)\n",
    "plt.plot(time[:-1], SOE_opt[:-1])\n",
    "plt.title('State of Energy (SOE) of the Battery')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('SOE [Wh]')\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot LOH\n",
    "plt.subplot(5, 2, 2)\n",
    "plt.plot(time[:-1], LOH_opt[:-1])\n",
    "plt.title('Level of Hydrogen (LOH)')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('LOH [1]')\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot P_grid\n",
    "plt.subplot(5, 2, 5)\n",
    "plt.plot(time[:-1], P_grid_pchs_opt, label='Purchased from grid')\n",
    "plt.plot(time[:-1], P_grid_sale_opt, label='Sold to grid')\n",
    "plt.title('Power Grid Usage')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('Power [W]')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot P_EL and P_FC\n",
    "plt.subplot(5, 2, 4)\n",
    "plt.plot(time[:-1], P_EL_opt, label='Net Electrolyzer Power')\n",
    "plt.plot(time[:-1], P_FC_opt, label='Net Fuel Cell Power')\n",
    "#plt.plot(time[:-1], 1.19 * P_EL_opt, label='Electrolyzer + Auxiliaries Power')\n",
    "#plt.plot(time[:-1], 0.89 * P_FC_opt, label='Fuel Cell - Auxiliaries Power')\n",
    "plt.plot(time[:-1], 1.19*P_EL_opt  + P_EL_STB * delta_STB_EL_opt, label='Electrolyzer + Auxiliaries Power')\n",
    "plt.plot(time[:-1], 0.89*P_FC_opt - P_FC_STB * delta_STB_FC_opt, label='Fuel Cell - Auxiliaries Power')\n",
    "plt.title('Electrolyzer and Fuel Cell Power')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('Power [W]')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot P_batt_opt (Battery Power)\n",
    "plt.subplot(5, 2, 3)\n",
    "plt.plot(time[:-1], P_batt_opt)\n",
    "plt.title('Battery Power')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('Power [W]')\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot states HESS\n",
    "plt.subplot(5, 2, 6)\n",
    "plt.plot(time[:-1], state_EL, label='state_EL')\n",
    "plt.plot(time[:-1], state_FC, label='state_FC')\n",
    "plt.title('HESS states')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('States [-]')\n",
    "plt.yticks([0, 1, 2])\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot c_el (Electricity Cost)\n",
    "plt.subplot(5, 2, (9, 10))\n",
    "plt.plot(time[:-1], c_el_week_full[2*N:3*N])\n",
    "plt.title('Electricity Cost')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('Cost [$/kWh]')\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot all power contributions\n",
    "plt.subplot(5, 2, (7, 8))\n",
    "plt.plot(time[:-1], load[2*N:3*N], label='Load')\n",
    "plt.plot(time[:-1], pv[2*N:3*N], label='PV Generation')\n",
    "plt.plot(time[:-1], P_grid_pchs_opt - P_grid_sale_opt , label='Grid Power (pchs - sale)')\n",
    "plt.plot(time[:-1], P_batt_opt , label='Battery (ch - disch)')\n",
    "#plt.plot(time[:-1], P_EL_opt, label='Net Electrolyzer Power')\n",
    "#plt.plot(time[:-1], P_FC_opt, label='Net Fuel Cell Power')\n",
    "#plt.plot(time[:-1], 1.19*P_EL_opt, label='Electrolyzer + Auxiliaries Power')\n",
    "#plt.plot(time[:-1], 0.89*P_FC_opt, label='Fuel Cell - Auxiliaries Power')\n",
    "plt.plot(time[:-1], 1.19 * P_EL_opt + P_EL_STB * delta_STB_EL_opt, label='Electrolyzer + Auxiliaries Power')\n",
    "plt.plot(time[:-1], 0.89 * P_FC_opt - P_FC_STB * delta_STB_FC_opt, label='Fuel Cell + Auxiliaries Power')\n",
    "plt.title('Power Contributions')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('Power [W]')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "\n",
    "plt.savefig('MPC_V4_5.2.pdf', format='pdf')\n",
    "\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "24669277",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Plot all power contributions - sgn convention\n",
    "plt.figure(figsize=(16, 8))\n",
    "\n",
    "plt.plot(time[:-1], load[:N], label='Load')\n",
    "plt.plot(time[:-1], - pv[:N], label='PV Generation')\n",
    "plt.plot(time[:-1], P_grid_sale_opt , label='Grid Power (sale)')\n",
    "plt.plot(time[:-1], - P_grid_pchs_opt , label='Grid Power (pchs)')\n",
    "plt.plot(time[:-1], P_batt_opt , label='Battery (ch - disch)')\n",
    "#plt.plot(time[:-1], 1.19 * P_EL_opt, label='Electrolyzer + Auxiliaries Power')\n",
    "#plt.plot(time[:-1], - 0.89 * P_FC_opt, label='Fuel Cell + Auxiliaries Power')\n",
    "plt.plot(time[:-1], 1.19*P_EL_opt + P_EL_STB * delta_STB_EL_opt, label='Electrolyzer + Auxiliaries Power')\n",
    "plt.plot(time[:-1], - 0.89*P_FC_opt + P_FC_STB * delta_STB_FC_opt, label='Fuel Cell + Auxiliaries Power')\n",
    "plt.title('Power Balance')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('Power [W]')\n",
    "\n",
    "plt.savefig('MPC_V3_1.1.12_Powers.pdf', format='pdf')\n",
    "\n",
    "plt.legend()\n",
    "plt.grid(True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b4f49448",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Plt FC states\n",
    "\n",
    "plt.figure(figsize=(10, 12))\n",
    "\n",
    "# Plot delta_ON_FC\n",
    "plt.subplot(4, 1, 1)\n",
    "plt.step(time[:-1], delta_ON_FC_opt, label='delta_ON_FC', where='mid', color='blue')\n",
    "plt.title('Fuel Cell ON State')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('State')\n",
    "plt.yticks([0, 1])  # Set y-axis ticks to only display 0, 1, and 2\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot delta_OFF_FC\n",
    "plt.subplot(4, 1, 2)\n",
    "plt.step(time[:-1], delta_OFF_FC_opt, label='delta_OFF_FC', where='mid', color='red')\n",
    "plt.title('Fuel Cell OFF State')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('State')\n",
    "plt.yticks([0, 1])  # Set y-axis ticks to only display 0, 1, and 2\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot delta_STB_FC\n",
    "plt.subplot(4, 1, 3)\n",
    "plt.step(time[:-1], delta_STB_FC_opt, label='delta_STB_FC', where='mid', color='green')\n",
    "plt.title('Fuel Cell Standby State')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('State')\n",
    "plt.yticks([0, 1])  # Set y-axis ticks to only display 0, 1, and 2\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot State_FC\n",
    "plt.subplot(4, 1, 4)\n",
    "plt.step(time[:-1], state_FC, label='State_FC', where='mid', color='black')\n",
    "plt.title('Fuel Cell State')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('State')\n",
    "plt.yticks([0, 1, 2])  # Set y-axis ticks to only display 0, 1, and 2\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "\n",
    "plt.savefig('MPC_V4_stateFC_1.1.13.pdf', format='pdf')\n",
    "\n",
    "\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4098d13b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Plt EL states\n",
    "\n",
    "plt.figure(figsize=(10, 12))\n",
    "\n",
    "# Plot delta_ON_EL\n",
    "plt.subplot(4, 1, 1)\n",
    "plt.step(time[:-1], delta_ON_EL_opt, label='delta_ON_EL', where='mid', color='blue')\n",
    "plt.title('Electrolyzer ON State')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('State')\n",
    "plt.yticks([0, 1])  # Set y-axis ticks to only display 0 and 1\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot delta_OFF_EL\n",
    "plt.subplot(4, 1, 2)\n",
    "plt.step(time[:-1], delta_OFF_EL_opt, label='delta_OFF_EL', where='mid', color='red')\n",
    "plt.title('Electrolyzer OFF State')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('State')\n",
    "plt.yticks([0, 1])  # Set y-axis ticks to only display 0 and 1\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot delta_STB_EL\n",
    "plt.subplot(4, 1, 3)\n",
    "plt.step(time[:-1], delta_STB_EL_opt, label='delta_STB_EL', where='mid', color='green')\n",
    "plt.title('Electrolyzer Standby State')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('State')\n",
    "plt.yticks([0, 1])  # Set y-axis ticks to only display 0 and 1\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot State_EL\n",
    "plt.subplot(4, 1, 4)\n",
    "plt.step(time[:-1], state_EL, label='State_EL', where='mid', color='black')\n",
    "plt.title('Electrolyzer State')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('State')\n",
    "plt.yticks([0, 1, 2])  # Set y-axis ticks to only display 0 and 1\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "\n",
    "plt.savefig('MPC_V4_stateEL_1.1.13.pdf', format='pdf')\n",
    "\n",
    "\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8296677c-92d0-4c1f-a315-26f6321d4bb8",
   "metadata": {},
   "outputs": [],
   "source": [
    "# EL and FC complete transitions\n",
    "\n",
    "plt.figure(figsize=(10, 8))\n",
    "\n",
    "# Plot transitions OFF-ON for FC\n",
    "plt.subplot(2, 1, 1)\n",
    "plt.step(time[:-1], sigma_OFF_STB_FC_opt, label='sigma_OFF_STB_FC', where='mid', color='purple')\n",
    "plt.step(time[:-1], sigma_STB_ON_FC_opt, label='sigma_STB_ON_FC', where='mid', color='cyan')\n",
    "plt.title('Fuel Cell Transitions')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('State')\n",
    "plt.yticks([0, 1])  # Set y-axis ticks to only display 0 and 1\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot transitions OFF-ON for EL\n",
    "plt.subplot(2, 1, 2)\n",
    "plt.step(time[:-1], sigma_OFF_STB_EL_opt, label='sigma_OFF_STB_EL', where='mid', color='orange')\n",
    "plt.step(time[:-1], sigma_STB_ON_EL_opt, label='sigma_STB_ON_EL', where='mid', color='brown')\n",
    "plt.title('Electrolyzer Transitions')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('State')\n",
    "plt.yticks([0, 1])  # Set y-axis ticks to only display 0 and 1\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "plt.savefig('MPC_V4_transitions_1.1.13.pdf', format='pdf')\n",
    "\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "5e094d20",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Case 1: high efficiency V2\n",
    "SOE_opt_1, LOH_opt_1, P_batt_opt_1, P_grid_sale_opt_1, P_grid_pchs_opt_1, delta_ON_EL_opt_1, delta_STB_EL_opt_1, delta_OFF_EL_opt_1, sigma_OFF_STB_EL_opt_1, sigma_STB_OFF_EL_opt_1, sigma_ON_STB_EL_opt_1, sigma_STB_ON_EL_opt_1, sigma_ON_OFF_EL_opt_1, sigma_OFF_ON_EL_opt_1, P_EL_opt_1, delta_ON_FC_opt_1, delta_STB_FC_opt_1, delta_OFF_FC_opt_1, sigma_OFF_STB_FC_opt_1, sigma_STB_OFF_FC_opt_1, sigma_ON_STB_FC_opt_1, sigma_STB_ON_FC_opt_1, sigma_ON_OFF_FC_opt_1, sigma_OFF_ON_FC_opt_1 , P_FC_opt_1, obj_opt_1 = optimizer_V2(T, t_s, c_el_3d[:N], pv[:N], load[:N], SOE_initial, LOH_initial)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "76205a8c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Academic license - for non-commercial use only\n",
      "Academic license - for non-commercial use only\n",
      "Gurobi Optimizer version 9.0.0 build v9.0.0rc2 (mac64)\n",
      "Optimize a model with 8692 rows, 2498 columns and 16024 nonzeros\n",
      "Model fingerprint: 0xe548db5f\n",
      "Variable types: 770 continuous, 1728 integer (0 binary)\n",
      "Coefficient statistics:\n",
      "  Matrix range     [1e-07, 5e+03]\n",
      "  Objective range  [2e-05, 3e+00]\n",
      "  Bounds range     [0e+00, 0e+00]\n",
      "  RHS range        [1e-01, 9e+03]\n",
      "\n",
      "User MIP start did not produce a new incumbent solution\n",
      "User MIP start violates constraint R2 by 1.000000000\n",
      "\n",
      "Presolve removed 6848 rows and 1580 columns\n",
      "Presolve time: 0.11s\n",
      "Presolved: 1844 rows, 918 columns, 5724 nonzeros\n",
      "Variable types: 401 continuous, 517 integer (517 binary)\n",
      "\n",
      "Root relaxation: objective 1.114043e+02, 667 iterations, 0.02 seconds\n",
      "Another try with MIP start\n",
      "\n",
      "    Nodes    |    Current Node    |     Objective Bounds      |     Work\n",
      " Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time\n",
      "\n",
      "H    0     0                     119.0065680   40.06928  66.3%     -    0s\n",
      "     0     0  111.40426    0  118  119.00657  111.40426  6.39%     -    0s\n",
      "     0     0  113.00555    0  117  119.00657  113.00555  5.04%     -    0s\n",
      "     0     0  113.32712    0  104  119.00657  113.32712  4.77%     -    0s\n",
      "     0     0  113.33448    0  104  119.00657  113.33448  4.77%     -    0s\n",
      "     0     0  114.02887    0   99  119.00657  114.02887  4.18%     -    0s\n",
      "     0     0  114.24641    0   98  119.00657  114.24641  4.00%     -    0s\n",
      "     0     0  114.24885    0   99  119.00657  114.24885  4.00%     -    0s\n",
      "     0     0  114.46933    0   89  119.00657  114.46933  3.81%     -    0s\n",
      "     0     0  114.54407    0   78  119.00657  114.54407  3.75%     -    0s\n",
      "     0     0  114.78102    0   77  119.00657  114.78102  3.55%     -    0s\n",
      "     0     0  114.78666    0   78  119.00657  114.78666  3.55%     -    0s\n",
      "     0     0  114.83005    0   78  119.00657  114.83005  3.51%     -    0s\n",
      "     0     0  114.83049    0   79  119.00657  114.83049  3.51%     -    0s\n",
      "     0     0  114.83115    0   78  119.00657  114.83115  3.51%     -    0s\n",
      "     0     0  114.83115    0   78  119.00657  114.83115  3.51%     -    0s\n",
      "     0     2  114.83131    0   78  119.00657  114.83131  3.51%     -    0s\n",
      "H  144   131                     118.9104409  115.02596  3.27%   7.0    0s\n",
      "*  271   218              36     118.7735226  115.13723  3.06%   7.1    1s\n",
      "H  507   384                     118.7336137  115.36869  2.83%   7.2    1s\n",
      "*  560   410              33     118.7201024  115.36869  2.82%   7.5    1s\n",
      "H  773   401                     118.4004641  115.49817  2.45%   7.0    1s\n",
      "H 1439   645                     118.3759585  115.64381  2.31%   8.7    3s\n",
      "H 1687   679                     118.3282067  115.69456  2.23%   8.4    3s\n",
      "H 1690   371                     116.2156125  115.69456  0.45%   8.4    3s\n",
      "* 2206   457              41     116.1941257  115.78425  0.35%   7.7    3s\n",
      "* 2715   556              38     116.1892743  115.81425  0.32%   7.4    4s\n",
      "H 3539   555                     116.1418540  115.87479  0.23%   7.1    4s\n",
      "  3607   537     cutoff   25       116.14185  115.87945  0.23%   7.1    5s\n",
      "* 4966    65              38     116.1404247  116.07171  0.06%   7.2    6s\n",
      "* 5094    65              37     116.1367164  116.10912  0.02%   7.2    6s\n",
      "* 5108     0              37     116.1365411  116.10989  0.02%   7.2    6s\n",
      "\n",
      "Cutting planes:\n",
      "  Gomory: 27\n",
      "  Cover: 4\n",
      "  Implied bound: 44\n",
      "  Projected implied bound: 2\n",
      "  Clique: 1\n",
      "  MIR: 37\n",
      "  Flow cover: 53\n",
      "  Inf proof: 5\n",
      "  Zero half: 5\n",
      "  Relax-and-lift: 9\n",
      "\n",
      "Explored 5182 nodes (38371 simplex iterations) in 6.17 seconds\n",
      "Thread count was 4 (of 4 available processors)\n",
      "\n",
      "Solution count 10: 116.137 116.137 116.14 ... 118.4\n",
      "\n",
      "Optimal solution found (tolerance 1.00e-04)\n",
      "Best objective 1.161365411090e+02, best bound 1.161365411090e+02, gap 0.0000%\n"
     ]
    }
   ],
   "source": [
    "\n",
    "# Case 2: low efficiency V2 - change global parameters in between case 1 and case 2\n",
    "SOE_opt_2, LOH_opt_2, P_batt_opt_2, P_grid_sale_opt_2, P_grid_pchs_opt_2, delta_ON_EL_opt_2, delta_STB_EL_opt_2, delta_OFF_EL_opt_2, sigma_OFF_STB_EL_opt_2, sigma_STB_OFF_EL_opt_2, sigma_ON_STB_EL_opt_2, sigma_STB_ON_EL_opt_2, sigma_ON_OFF_EL_opt_2, sigma_OFF_ON_EL_opt_2, P_EL_opt_2, delta_ON_FC_opt_2, delta_STB_FC_opt_2, delta_OFF_FC_opt_2, sigma_OFF_STB_FC_opt_2, sigma_STB_OFF_FC_opt_2, sigma_ON_STB_FC_opt_2, sigma_STB_ON_FC_opt_2, sigma_ON_OFF_FC_opt_2, sigma_OFF_ON_FC_opt_2 , P_FC_opt_2, obj_opt_2 = optimizer_V2(T, t_s, c_el_3d[:N], pv[:N], load[:N], SOE_initial, LOH_initial)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "9e44d730",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Case 3: PWA efficiency V4\n",
    "SOE_opt_3, LOH_opt_3, P_batt_opt_3, P_grid_sale_opt_3, P_grid_pchs_opt_3, delta_ON_EL_opt_3, delta_STB_EL_opt_3, delta_OFF_EL_opt_3, sigma_OFF_STB_EL_opt_3, sigma_STB_OFF_EL_opt_3, sigma_ON_STB_EL_opt_3, sigma_STB_ON_EL_opt_3, sigma_ON_OFF_EL_opt_3, sigma_OFF_ON_EL_opt_3, P_EL_opt_3, delta_ON_FC_opt_3, delta_STB_FC_opt_3, delta_OFF_FC_opt_3, sigma_OFF_STB_FC_opt_3, sigma_STB_OFF_FC_opt_3, sigma_ON_STB_FC_opt_3, sigma_STB_ON_FC_opt_3, sigma_ON_OFF_FC_opt_3, sigma_OFF_ON_FC_opt_3 , P_FC_opt_3, obj_opt_3 = optimizer_V4(T, t_s, c_el_3d[:N], pv[:N], load[:N], SOE_initial, LOH_initial)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "e9e8aad7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "116.031"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "obj_opt_1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "f8b2d411",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# Case 1\n",
    "if isinstance(delta_ON_EL_opt_1, float):\n",
    "    delta_ON_EL_opt_1 = [delta_ON_EL_opt_1]\n",
    "if isinstance(delta_OFF_EL_opt_1, float):\n",
    "    delta_OFF_EL_opt_1 = [delta_OFF_EL_opt_1]    \n",
    "if isinstance(delta_ON_FC_opt_1, float):\n",
    "    delta_ON_FC_opt_1 = [delta_ON_FC_opt_1]\n",
    "if isinstance(delta_OFF_FC_opt_1, float):\n",
    "    delta_OFF_FC_opt_1 = [delta_OFF_FC_opt_1]\n",
    "\n",
    "state_EL_1 = []\n",
    "state_FC_1 = []\n",
    "\n",
    "for i in range(len(delta_ON_EL_opt_1)):\n",
    "    if delta_ON_EL_opt_1[i] == 1:\n",
    "        state_EL_1.append(2)\n",
    "    elif delta_OFF_EL_opt_1[i] == 1:\n",
    "        state_EL_1.append(0)\n",
    "    else:\n",
    "        state_EL_1.append(1)\n",
    "\n",
    "    if delta_ON_FC_opt_1[i] == 1:\n",
    "        state_FC_1.append(2)\n",
    "    elif delta_OFF_FC_opt_1[i] == 1:\n",
    "        state_FC_1.append(0)\n",
    "    else:\n",
    "        state_FC_1.append(1)\n",
    "\n",
    "state_EL_1 = np.array(state_EL_1)\n",
    "state_FC_1 = np.array(state_FC_1)\n",
    "\n",
    "# Case 2\n",
    "if isinstance(delta_ON_EL_opt_2, float):\n",
    "    delta_ON_EL_opt_2 = [delta_ON_EL_opt_2]\n",
    "if isinstance(delta_OFF_EL_opt_2, float):\n",
    "    delta_OFF_EL_opt_2 = [delta_OFF_EL_opt_2]    \n",
    "if isinstance(delta_ON_FC_opt_2, float):\n",
    "    delta_ON_FC_opt_2 = [delta_ON_FC_opt_2]\n",
    "if isinstance(delta_OFF_FC_opt_2, float):\n",
    "    delta_OFF_FC_opt_2 = [delta_OFF_FC_opt_2]\n",
    "\n",
    "state_EL_2 = []\n",
    "state_FC_2 = []\n",
    "\n",
    "for i in range(len(delta_ON_EL_opt_2)):\n",
    "    if delta_ON_EL_opt_2[i] == 1:\n",
    "        state_EL_2.append(2)\n",
    "    elif delta_OFF_EL_opt_2[i] == 1:\n",
    "        state_EL_2.append(0)\n",
    "    else:\n",
    "        state_EL_2.append(1)\n",
    "\n",
    "    if delta_ON_FC_opt_2[i] == 1:\n",
    "        state_FC_2.append(2)\n",
    "    elif delta_OFF_FC_opt_2[i] == 1:\n",
    "        state_FC_2.append(0)\n",
    "    else:\n",
    "        state_FC_2.append(1)\n",
    "\n",
    "state_EL_2 = np.array(state_EL_2)\n",
    "state_FC_2 = np.array(state_FC_2)\n",
    "\n",
    "# Case 3\n",
    "if isinstance(delta_ON_EL_opt_3, float):\n",
    "    delta_ON_EL_opt_3 = [delta_ON_EL_opt_3]\n",
    "if isinstance(delta_OFF_EL_opt_3, float):\n",
    "    delta_OFF_EL_opt_3 = [delta_OFF_EL_opt_3]    \n",
    "if isinstance(delta_ON_FC_opt_3, float):\n",
    "    delta_ON_FC_opt_3 = [delta_ON_FC_opt_3]\n",
    "if isinstance(delta_OFF_FC_opt_3, float):\n",
    "    delta_OFF_FC_opt_3 = [delta_OFF_FC_opt_3]\n",
    "\n",
    "state_EL_3 = []\n",
    "state_FC_3 = []\n",
    "\n",
    "for i in range(len(delta_ON_EL_opt_3)):\n",
    "    if delta_ON_EL_opt_3[i] == 1:\n",
    "        state_EL_3.append(2)\n",
    "    elif delta_OFF_EL_opt_3[i] == 1:\n",
    "        state_EL_3.append(0)\n",
    "    else:\n",
    "        state_EL_3.append(1)\n",
    "\n",
    "    if delta_ON_FC_opt_3[i] == 1:\n",
    "        state_FC_3.append(2)\n",
    "    elif delta_OFF_FC_opt_3[i] == 1:\n",
    "        state_FC_3.append(0)\n",
    "    else:\n",
    "        state_FC_3.append(1)\n",
    "\n",
    "state_EL_3 = np.array(state_EL_3)\n",
    "state_FC_3 = np.array(state_FC_3)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "74b5e5c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "time = np.arange(T/t_s + 1) / 4  # Convert time to hours\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "\n",
    "# Plot LOH for Case 1\n",
    "plt.plot(time, LOH_opt_1, label='LOH - Constant high efficiency')\n",
    "\n",
    "# Plot LOH for Case 2\n",
    "plt.plot(time, LOH_opt_2, label='LOH - Constant low efficiency')\n",
    "\n",
    "# Plot LOH for Case 3\n",
    "plt.plot(time, LOH_opt_3, label='LOH - PWA efficiency')\n",
    "\n",
    "# Adding labels and title\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('LOH [1]')\n",
    "plt.title('Comparison of LOH for different efficiency models')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "plt.savefig('MPC_II_LOH.pdf', format='pdf')\n",
    "\n",
    "\n",
    "# Show the plot\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "e6823036",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Assuming LOH_opt_1, LOH_opt_2, and LOH_opt_3 are already defined\n",
    "# Adjusting the time variable\n",
    "time = np.arange(T/t_s + 1) / 4  # Convert time to hours\n",
    "\n",
    "plt.figure(figsize=(12, 10))\n",
    "\n",
    "# Plot LOH for all cases\n",
    "plt.subplot(2, 1, 1)\n",
    "plt.plot(time, LOH_opt_1, label='LOH - Constant high efficiency')\n",
    "plt.plot(time, LOH_opt_2, label='LOH - Constant low efficiency')\n",
    "plt.plot(time, LOH_opt_3, label='LOH - PWA efficiency')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('LOH [1]')\n",
    "plt.title('Comparison of LOH for Different Efficiency Models')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Zoom on the first 3 elements of LOH\n",
    "plt.subplot(2, 1, 2)\n",
    "plt.plot(time[:4], LOH_opt_1[:4], label='LOH - Constant high efficiency', marker='o')\n",
    "plt.plot(time[:4], LOH_opt_2[:4], label='LOH - Constant low efficiency', marker='o')\n",
    "plt.plot(time[:4], LOH_opt_3[:4], label='LOH - PWA efficiency', marker='o')\n",
    "#plt.plot(time[44:47], LOH_opt_1[44:47] - 0.021, label='LOH - Constant high efficiency', marker='o')\n",
    "#plt.plot(time[44:47], LOH_opt_2[44:47]  , label='LOH - Constant low efficiency', marker='o')\n",
    "#plt.plot(time[44:47], LOH_opt_3[44:47] , label='LOH - PWA efficiency', marker='o')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('LOH [1]')\n",
    "plt.title('Zoom on first intervals of LOH predictions')\n",
    "#plt.yticks(np.arange(0.3, 0.6, 0.1))\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Save the plot as a PDF\n",
    "plt.savefig('MPC_II_LOH_zoom_low.pdf', format='pdf')\n",
    "\n",
    "# Show the plot\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "dca7b4ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([   0.,    0., 4700., 5000., 5000., 5000., 5000., 5000., 5000.,\n",
       "       4700.,    0.,    0.,    0., 4700., 5000., 5000., 5000., 5000.,\n",
       "       5000., 5000., 5000., 4700.,    0.,    0.,    0.,    0.,    0.,\n",
       "          0.,    0., 4700.,    0.,    0.,    0.,    0.,    0.,    0.,\n",
       "          0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,\n",
       "          0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,\n",
       "          0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,\n",
       "          0.,    0.,    0.,    0.,    0., 4700.,    0.,    0., 4700.,\n",
       "       5000., 5000., 5000., 5000., 5000., 5000., 5000., 5000., 5000.,\n",
       "       5000., 5000., 5000., 5000., 5000., 5000., 5000., 5000., 5000.,\n",
       "       5000., 4700.,    0.,    0.,    0.,    0.])"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "P_FC_opt_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "bde0743b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1296x1800 with 10 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "plt.figure(figsize=(18, 25))\n",
    "\n",
    "# Plot SOE\n",
    "plt.subplot(5, 2, 1)\n",
    "plt.plot(time[:-1], SOE_opt_1[:-1], label='Constant high efficiency')\n",
    "plt.plot(time[:-1], SOE_opt_2[:-1], label='Constant low efficiency')\n",
    "plt.plot(time[:-1], SOE_opt_3[:-1], label='PWA efficiency')\n",
    "plt.title('State of Energy (SOE) of the Battery')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('SOE [Wh]')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot LOH\n",
    "plt.subplot(5, 2, 2)\n",
    "plt.plot(time[:-1], LOH_opt_1[:-1], label='Constant high efficiency')\n",
    "plt.plot(time[:-1], LOH_opt_2[:-1], label='Constant low efficiency')\n",
    "plt.plot(time[:-1], LOH_opt_3[:-1], label='PWA efficiency')\n",
    "plt.title('Level of Hydrogen (LOH)')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('LOH [1]')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot P_grid\n",
    "plt.subplot(5, 2, 8)\n",
    "plt.plot(time[:-1], P_grid_pchs_opt_1, label='Purchased from grid - Constant high efficiency')\n",
    "plt.plot(time[:-1], P_grid_pchs_opt_2, label='Purchased from grid - Constant low efficiency')\n",
    "plt.plot(time[:-1], P_grid_pchs_opt_3, label='Purchased from grid - PWA efficiency')\n",
    "plt.title('Power Grid Usage')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('Power [W]')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot P_EL (Electrolyzer Power)\n",
    "plt.subplot(5, 2, 4)\n",
    "plt.plot(time[:-1], P_EL_opt_1, label='Net Electrolyzer Power - Constant high efficiency')\n",
    "plt.plot(time[:-1], P_EL_opt_2, label='Net Electrolyzer Power - Constant low efficiency')\n",
    "plt.plot(time[:-1], P_EL_opt_3, label='Net Electrolyzer Power - PWA efficiency')\n",
    "#plt.plot(time[:-1], 1.19 * P_EL_opt_1, label='Electrolyzer + Auxiliaries Power - Constant high efficiency')\n",
    "#plt.plot(time[:-1], 1.19 * P_EL_opt_2, label='Electrolyzer + Auxiliaries Power - Constant low efficiency')\n",
    "#plt.plot(time[:-1], 1.19 * P_EL_opt_3, label='Electrolyzer + Auxiliaries Power - PWA efficiency')\n",
    "plt.title('Electrolyzer Power')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('Power [W]')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot P_FC (Fuel Cell Power)\n",
    "plt.subplot(5, 2, 3)\n",
    "plt.plot(time[:-1], P_FC_opt_1, label='Net Fuel Cell Power - Constant high efficiency')\n",
    "plt.plot(time[:-1], P_FC_opt_2, label='Net Fuel Cell Power - Constant low efficiency')\n",
    "plt.plot(time[:-1], P_FC_opt_3, label='Net Fuel Cell Power - PWA efficiency')\n",
    "#plt.plot(time[:-1], 0.89 * P_FC_opt_1, label='Fuel Cell - Auxiliaries Power - Constant high efficiency')\n",
    "#plt.plot(time[:-1], 0.89 * P_FC_opt_2, label='Fuel Cell - Auxiliaries Power - Constant low efficiency')\n",
    "#plt.plot(time[:-1], 0.89 * P_FC_opt_3, label='Fuel Cell - Auxiliaries Power - PWA efficiency')\n",
    "plt.title('Fuel Cell Power')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('Power [W]')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot P_batt_opt (Battery Power)\n",
    "plt.subplot(5, 2, 7)\n",
    "plt.plot(time[:-1], P_batt_opt_1, label='Constant high efficiency')\n",
    "plt.plot(time[:-1], P_batt_opt_2, label='Constant low efficiency')\n",
    "plt.plot(time[:-1], P_batt_opt_3, label='PWA efficiency')\n",
    "plt.title('Battery Power')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('Power [W]')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot state_EL (Electrolyzer State)\n",
    "plt.subplot(5, 2, 6)\n",
    "plt.plot(time[:-1], state_EL_1, label='state_EL - Constant high efficiency')\n",
    "plt.plot(time[:-1], state_EL_2, label='state_EL - Constant low efficiency')\n",
    "plt.plot(time[:-1], state_EL_3, label='state_EL - PWA efficiency')\n",
    "plt.title('Electrolyzer State')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('State [-]')\n",
    "plt.yticks([0, 1, 2])\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot state_FC (Fuel Cell State)\n",
    "plt.subplot(5, 2, 5)\n",
    "plt.plot(time[:-1], state_FC_1, label='state_FC - Constant high efficiency')\n",
    "plt.plot(time[:-1], state_FC_2, label='state_FC - Constant low efficiency')\n",
    "plt.plot(time[:-1], state_FC_3, label='state_FC - PWA efficiency')\n",
    "plt.title('Fuel Cell State')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('State [-]')\n",
    "plt.yticks([0, 1, 2])\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot c_el (Electricity Cost)\n",
    "plt.subplot(5, 2, 9)\n",
    "plt.plot(time[:-1], c_el)\n",
    "plt.title('Electricity Cost')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('Cost [$/kWh]')\n",
    "plt.grid(True)\n",
    "\n",
    "# Plot all power contributions\n",
    "plt.subplot(5, 2, 10)\n",
    "plt.plot(time[:-1], load[:N], label='Load')\n",
    "plt.plot(time[:-1], pv[:N], label='PV Generation')\n",
    "plt.title('Forecasts')\n",
    "plt.xlabel('Time [hours]')\n",
    "plt.ylabel('Power [W]')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "\n",
    "plt.savefig('MPC_II_Powers_LOH.pdf', format='pdf')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "04c3eb93",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting git+https://github.com/LBNL-ETA/FMI-MLC\n",
      "  Cloning https://github.com/LBNL-ETA/FMI-MLC to /private/var/folders/0x/l1m3sdhn7r59npk394yrpzk40000gn/T/pip-req-build-hkegoqnq\n",
      "  Running command git clone -q https://github.com/LBNL-ETA/FMI-MLC /private/var/folders/0x/l1m3sdhn7r59npk394yrpzk40000gn/T/pip-req-build-hkegoqnq\n",
      "Requirement already satisfied: pandas in /Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages (from FMI-MLC==1.0.0) (1.3.2)\n",
      "Requirement already satisfied: numpy in /Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages (from FMI-MLC==1.0.0) (1.20.3)\n",
      "Requirement already satisfied: gym in /Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages (from FMI-MLC==1.0.0) (0.17.2)\n",
      "Requirement already satisfied: cloudpickle<1.4.0,>=1.2.0 in /Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages (from gym->FMI-MLC==1.0.0) (1.3.0)\n",
      "Requirement already satisfied: pyglet<=1.5.0,>=1.4.0 in /Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages (from gym->FMI-MLC==1.0.0) (1.5.0)\n",
      "Requirement already satisfied: scipy in /Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages (from gym->FMI-MLC==1.0.0) (1.7.1)\n",
      "Requirement already satisfied: future in /Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages (from pyglet<=1.5.0,>=1.4.0->gym->FMI-MLC==1.0.0) (0.18.2)\n",
      "Requirement already satisfied: python-dateutil>=2.7.3 in /Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages (from pandas->FMI-MLC==1.0.0) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2017.3 in /Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages (from pandas->FMI-MLC==1.0.0) (2022.1)\n",
      "Requirement already satisfied: six>=1.5 in /Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages (from python-dateutil>=2.7.3->pandas->FMI-MLC==1.0.0) (1.16.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n",
      "Requirement already satisfied: casadi in /Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages (3.6.3)\n",
      "Requirement already satisfied: numpy in /Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages (from casadi) (1.20.3)\n"
     ]
    }
   ],
   "source": [
    "%pip install git+https://github.com/LBNL-ETA/FMI-MLC\n",
    "!pip install casadi\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "726a344f-95b3-4b1b-a4d8-ceacb389e74c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/Users/thomasdefauw/Documents/Alienor/hess/MPC-FMU/FMU\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import sys\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib as mpl\n",
    "import matplotlib.pyplot as plt\n",
    "from pprint import pprint\n",
    "from pandas.plotting import register_matplotlib_converters\n",
    "register_matplotlib_converters()\n",
    "%matplotlib inline\n",
    "\n",
    "mpl.rcParams['figure.dpi'] = 72\n",
    "\n",
    "\n",
    "# Get the directory where the current script is located\n",
    "root = os.getcwd()\n",
    "\n",
    "# Add the parent directory to the sys.path\n",
    "sys.path.append(os.path.join(root, '..'))\n",
    "print(root)\n",
    "\n",
    "\n",
    "from fmi_mlc import fmi_gym\n",
    "from fmi_mlc import get_default_parameter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "da2fd840",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define global parameters\n",
    "M = 100000\n",
    "m = 1\n",
    "\n",
    "R = 8.314\n",
    "F = 96485\n",
    "V_tn = 1.482\n",
    "T_amb = 273.15 + 23.5\n",
    "K=1.4\n",
    "NCV_H2 = 1.19951*10**8\n",
    "M_H2O = 18\n",
    "M_H2 = 2\n",
    "M_Air = 18\n",
    "M_O2 = 32\n",
    "\n",
    "\n",
    "# Electrolyzer parameters\n",
    "eta_EL = 0.6\n",
    "eta_F_EL = 0.95 # Faradaic efficiency\n",
    "P_EL_STB = 285.7\n",
    "P_EL_nom = 5000\n",
    "P_EL_max = 5000\n",
    "P_EL_min = 500\n",
    "r_EL = 4500 # 20 W/s or depeds on t_s\n",
    "C_rep_EL = 0.27*1.55*10**(-3)  # replacement cost (euro/W) - to be multiplied by installed power in W P_EL_nom\n",
    "N_H_EL = 40000     # number of hours\n",
    "C_OM_EL = 0.002    # O&M cost (euro/h)\n",
    "alpha_EL = 1000 * (C_rep_EL * P_EL_nom /N_H_EL + C_OM_EL) # (euro/Wh * W + euro/h)\n",
    "C_EL = 0.1334 #(euro)\n",
    "C_EL_ON = 0.123\n",
    "C_EL_STB = 0.0042 \n",
    "C_EL_OFF = 0.0062 \n",
    "# Electrolyzer auxiliaries parameters\n",
    "\n",
    "\n",
    "# Fuel cell parameters\n",
    "eta_FC = 0.4\n",
    "eta_F_FC = 0.95 # Faradaic efficiency\n",
    "P_FC_STB = 16.6\n",
    "P_FC_nom = 5000\n",
    "P_FC_max = 5000\n",
    "P_FC_min = 300\n",
    "r_FC = 4700 # 20 W/s if t_s < 15min, otherwise = P_FC_max  \n",
    "C_rep_FC = 0.27*1.55*10**(-3)  # replacement cost for the fuel cell (euro/W) - to be multiplied by installed power in W P_EL_nom\n",
    "N_H_FC = 40000     # number of hours for the fuel cell (h)\n",
    "C_OM_FC = 0.01    # O&M cost for the fuel cell (euro/h)\n",
    "alpha_FC = 1000 * (C_rep_FC * P_FC_nom /N_H_FC + C_OM_FC) # (euro/Wh * W + euro/h)\n",
    "C_FC = 0.018 #(euro)\n",
    "C_FC_ON = 0.01 \n",
    "C_FC_STB = 0.003 \n",
    "C_FC_OFF = 0.005\n",
    "# Fuel cell auxiliaries parameters\n",
    "T_nom_FC = 55 + 273.15\n",
    "T_in_FC = 40 + 273.15\n",
    "R_th_FC = 0.0455\n",
    "cp_H2O = 4182\n",
    "H_T = cp_H2O * ( T_nom_FC - T_amb)\n",
    "H_0 = 258800\n",
    "lambda_H2 = 1.5\n",
    "lambda_O2 = 2\n",
    "cp_H2 = 14380\n",
    "cp_Air = 923\n",
    "h_H2_in = cp_H2 * T_in_FC\n",
    "h_Air_in = cp_Air * T_amb\n",
    "h_H2_out = cp_H2 * T_nom_FC\n",
    "h_Air_out = cp_Air * T_nom_FC\n",
    "\n",
    "\n",
    "# Hydrogen storage parameters\n",
    "LOH_min = 0.1 # (1)\n",
    "LOH_max = 0.99 # (1)\n",
    "C_max = 5158.1*10**6 # (J), for LHV = 119.96 MJ/kg\n",
    "\n",
    "# Battery parameters\n",
    "E_battery_nom = 5000 # (Wh)\n",
    "C_battery_inv = 0.37  # investment cost for the battery (euro/Wh)\n",
    "N_battery_cycles = 4000  # number of battery cycles\n",
    "P_battery_nom = 5000 # (W)\n",
    "c_battery = C_battery_inv * E_battery_nom / (2 * N_battery_cycles * P_battery_nom) # (euro/W)\n",
    "eta_batt_ch = 0.98 # (1)\n",
    "eta_batt_disch = 0.98 # (1)\n",
    "SOE_min = 500 # (Wh)\n",
    "SOE_max = 4500 # (Wh)\n",
    "\n",
    "# Grid arameters\n",
    "P_grid_max = 3000 # (W)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3b3f349b",
   "metadata": {},
   "outputs": [],
   "source": [
    "def optimizer_V1(T, t_s, c_el, pv, load, SOE_initial, LOH_initial): \n",
    "    # states: SOE_battery, LOH_hess\n",
    "    # inputs to FMU: P_battery, P_FC_sys (start with P_FC), P_El_sys (start with P_El), state_FC, state_EL\n",
    "\n",
    "    # V1: no auxiliaries, no thermal model, no STB state, add transitions and costs between OFF-On\n",
    "    # inputs variables in MPC: P_battery, P_grid, P_FC, delta_ON_FC, delta_OFF_FC, sigma_OFF_ON_FC, P_EL, delta_ON_EL, delta_OFF_EL, sigma_OFF_ON_EL\n",
    "    \n",
    "    # Access global parameters\n",
    "    global P_grid_max, P_battery_nom, SOE_min, SOE_max\n",
    "    global LOH_min, LOH_max, C_max, eta_EL, eta_FC, P_EL_min, P_EL_max, P_EL_STB, P_FC_min, P_FC_max, P_FC_STB, r_EL, r_FC\n",
    "    global alpha_EL, alpha_FC, C_EL, C_FC, c_battery\n",
    "    \n",
    "\n",
    "    N = int(T // t_s)\n",
    "    \n",
    "    # Initialize\n",
    "    import casadi as ca\n",
    "    opti = ca.Opti(\"conic\")\n",
    "\n",
    "    # -----------------------------\n",
    "    # Variables and solver\n",
    "    # -----------------------------\n",
    "\n",
    "    SOE = opti.variable(1, N+1)  # state\n",
    "    LOH = opti.variable(1, N+1)  # state\n",
    "    P_batt = opti.variable(1, N)  # input\n",
    "    P_batt_abs = opti.variable(1,N) # input\n",
    "\n",
    "    P_grid_sale = opti.variable(1, N)        # input \n",
    "    P_grid_pchs = opti.variable(1, N)        # input \n",
    "    \n",
    "    P_FC = opti.variable(1, N)          # input\n",
    "    delta_ON_FC = opti.variable(1, N)   # binary input\n",
    "    delta_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_FC = opti.variable(1, N)  # binary input\n",
    "    \n",
    "    P_EL = opti.variable(1, N)          # input\n",
    "    delta_ON_EL = opti.variable(1, N)   # binary input\n",
    "    delta_OFF_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_EL = opti.variable(1, N)  # binary input\n",
    "\n",
    "\n",
    "    # delta_i are discrete variables (binary)\n",
    "    discrete_var = [0]*(N+1) + [0]*(N+1) + [0]*N + [0]*N + [0]*N + [0]*N + [0]*N + [1]*N + [1]*N + [1]*N + [0]*N + [1]*N + [1]*N + [1]*N\n",
    "\n",
    "    # Solver\n",
    "    opti.solver('gurobi', {'discrete': discrete_var})\n",
    "    #opti.solver('bonmin', {'discrete': discrete_var, 'bonmin.tol': 1e-4, 'bonmin.print_level': 0, 'print_time': 0})\n",
    "\n",
    "\n",
    "    # -----------------------------\n",
    "    # Constraints\n",
    "    # -----------------------------\n",
    "\n",
    "    \n",
    "    # Initial storage level\n",
    "    opti.subject_to(SOE[0] == SOE_initial)\n",
    "    opti.subject_to(LOH[0] == LOH_initial)\n",
    "\n",
    "    # Impose initial state of FC and electrolyzer to be OFF\n",
    "    opti.subject_to(delta_OFF_EL[0] == 1)\n",
    "    opti.subject_to(delta_OFF_FC[0] == 1)\n",
    "    \n",
    "\n",
    "    # Constraints at every time step\n",
    "    for t in range(N):\n",
    "\n",
    "            # Bounds on grid\n",
    "            opti.subject_to(pv[t] + P_grid_pchs[t] + 0.89 * P_FC[t] == load[t] + P_grid_sale[t] + P_batt[t] + 1.19 * P_EL[t])\n",
    "            opti.subject_to(P_grid_sale[t]>=0)\n",
    "            opti.subject_to(P_grid_sale[t]<=0)\n",
    "            #opti.subject_to(P_grid_sale[t]<=P_grid_max)\n",
    "            opti.subject_to(P_grid_pchs[t]>=0)\n",
    "            opti.subject_to(P_grid_pchs[t]<=P_grid_max)\n",
    "\n",
    "            # Bounds on battery and SOE\n",
    "            opti.subject_to(P_batt_abs[t] >= P_batt[t])\n",
    "            opti.subject_to(P_batt_abs[t] >= -P_batt[t])\n",
    "        \n",
    "            \n",
    "            opti.subject_to(P_batt[t]>= -0.9 * P_battery_nom)\n",
    "            opti.subject_to(P_batt[t]<= 0.9 * P_battery_nom)\n",
    "        \n",
    "            opti.subject_to(SOE[t+1] == SOE[t] + P_batt[t] * t_s/3600)\n",
    "            opti.subject_to(SOE[t] >= SOE_min)\n",
    "            opti.subject_to(SOE[t] <= SOE_max)\n",
    "            \n",
    "            # Bounds on hydrogen storage \n",
    "            opti.subject_to(LOH[t+1] == LOH[t] + (P_EL[t] * eta_EL - P_FC[t]/eta_FC) * t_s / C_max)\n",
    "            opti.subject_to(LOH[t] >= LOH_min)\n",
    "            opti.subject_to(LOH[t] <= LOH_max)                \n",
    "\n",
    "            # Constraints on electrolyzer\n",
    "            # Bounds when ON                \n",
    "            opti.subject_to(P_EL[t] >= delta_ON_EL[t] * P_EL_min)\n",
    "            opti.subject_to(P_EL[t] <= delta_ON_EL[t] * P_EL_max)\n",
    "        \n",
    "            # Ramping constraints                \n",
    "            if t < N-1:                \n",
    "                opti.subject_to(P_EL[t+1] - P_EL[t] <= r_EL)\n",
    "                opti.subject_to(P_EL[t] - P_EL[t+1] <= r_EL)\n",
    "                            \n",
    "            # Constraints on fuel cell\n",
    "            # Bounds when ON\n",
    "            opti.subject_to(P_FC[t] >= delta_ON_FC[t] * P_FC_min)\n",
    "            opti.subject_to(P_FC[t] <= delta_ON_FC[t] * P_FC_max)\n",
    "            \n",
    "            # Ramping constraints                \n",
    "            if t < N-1:                \n",
    "                opti.subject_to(P_FC[t+1] - P_FC[t] <= r_FC)\n",
    "                opti.subject_to(P_FC[t] - P_FC[t+1] <= r_FC)\n",
    "                            \n",
    "            # States \n",
    "            opti.subject_to(delta_ON_EL[t] >= 0)\n",
    "            opti.subject_to(delta_ON_EL[t] <= 1)\n",
    "            opti.subject_to(delta_OFF_EL[t] >= 0)\n",
    "            opti.subject_to(delta_OFF_EL[t] <= 1)\n",
    "            opti.subject_to(sigma_OFF_ON_EL[t] >= 0)\n",
    "            opti.subject_to(sigma_OFF_ON_EL[t] <= 1)\n",
    "\n",
    "            opti.subject_to(delta_ON_FC[t] >= 0)\n",
    "            opti.subject_to(delta_ON_FC[t] <= 1)\n",
    "            opti.subject_to(delta_OFF_FC[t] >= 0)\n",
    "            opti.subject_to(delta_OFF_FC[t] <= 1)\n",
    "            opti.subject_to(sigma_OFF_ON_FC[t] >= 0)\n",
    "            opti.subject_to(sigma_OFF_ON_FC[t] <= 1)    \n",
    "                           \n",
    "            opti.subject_to(delta_ON_EL[t] + delta_OFF_EL[t] == 1)\n",
    "            opti.subject_to(delta_ON_FC[t] + delta_OFF_FC[t] == 1)\n",
    "            \n",
    "            # Transitions EL and FC\n",
    "            if t >= 1 and t <= N:              \n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - delta_OFF_EL[t-1] <= 0)\n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - delta_ON_EL[t] <= 0)\n",
    "                opti.subject_to(delta_OFF_EL[t-1] + delta_ON_EL[t] - sigma_OFF_ON_EL[t] <= 1)\n",
    "\n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - delta_OFF_FC[t-1] <= 0)\n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - delta_ON_FC[t] <= 0)\n",
    "                opti.subject_to(delta_OFF_FC[t-1] + delta_ON_FC[t] - sigma_OFF_ON_FC[t] <= 1)\n",
    "\n",
    "\n",
    "            # Transitions dwwelling time for OFF-STB\n",
    "            T_CLD_EL = 2 \n",
    "            T_CLD_FC = 2\n",
    "             # Electrolyzer constraints\n",
    "            if t >= 1 and t < N - T_CLD_EL:\n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - sigma_OFF_ON_EL[t-1] <= sigma_OFF_ON_EL[t+1:t + T_CLD_EL+1])\n",
    "                sigma_sum_EL = sum([sigma_OFF_ON_EL[t-j] for j in range(T_CLD_EL)])\n",
    "                opti.subject_to(sigma_sum_EL <= T_CLD_EL)\n",
    "    \n",
    "            # Fuel Cell constraints\n",
    "            if t >= 1 and t < N - T_CLD_FC:\n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - sigma_OFF_ON_FC[t-1] <= sigma_OFF_ON_FC[t+1:t + T_CLD_FC+1])\n",
    "                sigma_sum_FC = sum([sigma_OFF_ON_FC[t-j] for j in range(T_CLD_FC)])\n",
    "                opti.subject_to(sigma_sum_FC <= T_CLD_FC)\n",
    "             \n",
    "                    \n",
    "            # Bilinear to linear\n",
    "\n",
    "\n",
    "    # -----------------------------\n",
    "    # Objective\n",
    "    # -----------------------------\n",
    "\n",
    "    obj = sum(alpha_EL * t_s/3600 * delta_ON_EL[t] + C_EL * sigma_OFF_ON_EL[t] + alpha_FC * t_s/3600 * delta_ON_FC[t] \n",
    "    + C_FC * sigma_OFF_ON_FC[t] + c_battery * P_batt_abs[t] + 1000*(c_el[t]/1000 * P_grid_pchs[t] - 1 * c_el[t]/1000 * P_grid_sale[t]) * t_s/3600 for t in range(N))\n",
    "    opti.minimize(obj)\n",
    "    \n",
    "    # -----------------------------\n",
    "    # Solve and get optimal values\n",
    "    # -----------------------------\n",
    "\n",
    "    sol = opti.solve()\n",
    "    \n",
    "    SOE_opt = sol.value(SOE)\n",
    "    LOH_opt = sol.value(LOH)\n",
    "    P_batt_opt = sol.value(P_batt)\n",
    "    P_batt_abs = sol.value(P_batt_abs)\n",
    "\n",
    "    P_grid_sale_opt = sol.value(P_grid_sale)\n",
    "    P_grid_pchs_opt = sol.value(P_grid_pchs)\n",
    "    \n",
    "    P_FC_opt = sol.value(P_FC)  \n",
    "    delta_ON_FC_opt = sol.value(delta_ON_FC)\n",
    "    delta_OFF_FC_opt = sol.value(delta_OFF_FC)\n",
    "    sigma_OFF_ON_FC_opt = sol.value(sigma_OFF_ON_FC)\n",
    "    P_EL_opt = sol.value(P_EL)\n",
    "    delta_ON_EL_opt = sol.value(delta_ON_EL)\n",
    "    delta_OFF_EL_opt = sol.value(delta_OFF_EL)\n",
    "    sigma_OFF_ON_EL_opt = sol.value(sigma_OFF_ON_EL)\n",
    "\n",
    "    obj_opt = round(sol.value(obj), 2)\n",
    "\n",
    "    return SOE_opt, LOH_opt, P_batt_opt, P_grid_sale_opt, P_grid_pchs_opt, delta_ON_EL_opt, delta_OFF_EL_opt, sigma_OFF_ON_EL_opt, P_EL_opt, delta_ON_FC_opt, delta_OFF_FC_opt, sigma_OFF_ON_FC_opt, P_FC_opt, obj_opt\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "428cc928",
   "metadata": {},
   "outputs": [],
   "source": [
    "def optimizer_V2(T, t_s, c_el, pv, load, SOE_initial, LOH_initial): \n",
    "    # Adapt inputs: T (horizon of simulation), ts (sampling time), SOE_battery, LOH_hess, pv, load, c_el (electricity prices)\n",
    "    # states: SOE_battery, LOH_hess\n",
    "    # inputs to FMU: P_battery, P_FC_sys (start with P_FC), P_El_sys (start with P_El), state_FC, state_EL\n",
    "\n",
    "    # V2: no auxiliaries, no thermal model, include STB state, and transitions and costs between OFF-On\n",
    "    # inputs variables in MPC: P_battery, P_grid, P_FC, delta_ON_FC, delta_OFF_FC, sigma_OFF_ON_FC, P_EL, delta_ON_EL, delta_OFF_EL, sigma_OFF_ON_EL\n",
    "    \n",
    "    # Access global parameters\n",
    "    global P_grid_max, P_battery_nom, SOE_min, SOE_max\n",
    "    global LOH_min, LOH_max, C_max, eta_EL, eta_FC, P_EL_min, P_EL_max, P_EL_STB, P_FC_min, P_FC_max, P_FC_STB, r_EL, r_FC\n",
    "    global alpha_EL, alpha_FC, C_EL_ON, C_EL_STB, C_EL_OFF, C_FC_ON, C_FC_STB, C_FC_OFF, c_battery\n",
    "\n",
    "    N = int(T // t_s)\n",
    "    \n",
    "    # Initialize\n",
    "    import casadi as ca\n",
    "    opti = ca.Opti(\"conic\")\n",
    "\n",
    "    # -----------------------------\n",
    "    # Variables and solver\n",
    "    # -----------------------------\n",
    "\n",
    " \n",
    "    SOE = opti.variable(1, N+1)  # state\n",
    "    LOH = opti.variable(1, N+1)  # state\n",
    "\n",
    "    P_batt = opti.variable(1, N)  # input\n",
    "    P_batt_abs = opti.variable(1,N) # binary input\n",
    "\n",
    "    P_grid_sale = opti.variable(1, N)        # input \n",
    "    P_grid_pchs = opti.variable(1, N)        # input \n",
    "\n",
    "    P_FC = opti.variable(1, N)          # input\n",
    "    delta_ON_FC = opti.variable(1, N)   # binary input\n",
    "    delta_STB_FC = opti.variable(1, N)  # binary input\n",
    "    delta_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_STB_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_STB_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_ON_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_STB_ON_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_ON_STB_FC = opti.variable(1, N)  # binary input\n",
    "\n",
    "    P_EL = opti.variable(1, N)          # input\n",
    "    delta_ON_EL = opti.variable(1, N)   # binary input\n",
    "    delta_STB_EL = opti.variable(1, N)  # binary input\n",
    "    delta_OFF_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_STB_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_STB_OFF_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_ON_OFF_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_STB_ON_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_ON_STB_EL = opti.variable(1, N)  # binary input\n",
    "\n",
    "    # binary inputs are discrete variables \n",
    "    discrete_var = [0]*(N+1) + [0]*(N+1) + [0]*N + [0]*N + [0]*N + [0]*N + [0]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [0]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N \n",
    "\n",
    "    # Solver\n",
    "    opti.solver('gurobi', {'discrete': discrete_var})\n",
    "    #opti.solver('bonmin', {'discrete': discrete_var, 'bonmin.tol': 1e-4, 'bonmin.print_level': 0, 'print_time': 0})\n",
    "\n",
    "    # -----------------------------\n",
    "    # Constraints\n",
    "    # -----------------------------\n",
    "    \n",
    "    # Initial storage level\n",
    "    opti.subject_to(SOE[0] == SOE_initial)\n",
    "    opti.subject_to(LOH[0] == LOH_initial)\n",
    "\n",
    "    # Impose initial state of FC and electrolyzer to be OFF\n",
    "    opti.subject_to(delta_OFF_EL[0] == 1)\n",
    "    opti.subject_to(delta_OFF_FC[0] == 1)\n",
    "\n",
    "    # Constraints at every time step\n",
    "    for t in range(N):\n",
    "        # Bounds on grid\n",
    "        opti.subject_to(pv[t] + P_grid_pchs[t] + (0.89*P_FC[t] - P_FC_STB * delta_STB_FC[t]) \n",
    "                        == load[t] + P_grid_sale[t] + P_batt[t]  + (1.19*P_EL[t] + P_EL_STB * delta_STB_EL[t]))\n",
    "        opti.subject_to(P_grid_sale[t]>=0)\n",
    "        opti.subject_to(P_grid_sale[t]<=0)\n",
    "        #opti.subject_to(P_grid_sale[t]<=P_grid_max)\n",
    "        opti.subject_to(P_grid_pchs[t]>=0)\n",
    "        opti.subject_to(P_grid_pchs[t]<=P_grid_max)\n",
    "\n",
    "        # Bounds on battery and SOE\n",
    "        opti.subject_to(P_batt_abs[t] >= P_batt[t])\n",
    "        opti.subject_to(P_batt_abs[t] >= -P_batt[t])\n",
    "        \n",
    "        opti.subject_to(P_batt[t]>= - 0.9 * P_battery_nom)\n",
    "        opti.subject_to(P_batt[t]<= 0.9 * P_battery_nom)\n",
    "    \n",
    "        opti.subject_to(SOE[t+1] == SOE[t] + P_batt[t] * t_s/3600)\n",
    "        opti.subject_to(SOE[t] >= SOE_min)\n",
    "        opti.subject_to(SOE[t] <= SOE_max)\n",
    "        \n",
    "        # Bounds on hydrogen storage \n",
    "        opti.subject_to(LOH[t+1] == LOH[t] + (P_EL[t] * eta_EL - P_FC[t]/eta_FC) * t_s /C_max)\n",
    "        opti.subject_to(LOH[t] >= LOH_min)\n",
    "        opti.subject_to(LOH[t] <= LOH_max)                \n",
    "\n",
    "        # Constraints on electrolyzer\n",
    "        # Bounds when ON                \n",
    "        opti.subject_to(P_EL[t] >= delta_ON_EL[t] * P_EL_min)\n",
    "        opti.subject_to(P_EL[t] <= delta_ON_EL[t] * P_EL_max)\n",
    "    \n",
    "        # Ramping constraints                \n",
    "        if t < N-1:                \n",
    "            opti.subject_to(P_EL[t+1] - P_EL[t] <= r_EL)\n",
    "            opti.subject_to(P_EL[t] - P_EL[t+1] <= r_EL)\n",
    "                        \n",
    "        # Constraints on fuel cell\n",
    "        # Bounds when ON\n",
    "        opti.subject_to(P_FC[t] >= delta_ON_FC[t] * P_FC_min)\n",
    "        opti.subject_to(P_FC[t] <= delta_ON_FC[t] * P_FC_max)\n",
    "        \n",
    "        # Ramping constraints                \n",
    "        if t < N-1:                \n",
    "            opti.subject_to(P_FC[t+1] - P_FC[t] <= r_FC)\n",
    "            opti.subject_to(P_FC[t] - P_FC[t+1] <= r_FC)\n",
    "                        \n",
    "        # States    \n",
    "        opti.subject_to(delta_ON_EL[t] >= 0)\n",
    "        opti.subject_to(delta_ON_EL[t] <= 1)\n",
    "        opti.subject_to(delta_OFF_EL[t] >= 0)\n",
    "        opti.subject_to(delta_OFF_EL[t] <= 1)\n",
    "        opti.subject_to(delta_STB_EL[t] >= 0)\n",
    "        opti.subject_to(delta_STB_EL[t] <= 1)\n",
    "\n",
    "        opti.subject_to(delta_ON_FC[t] >= 0)\n",
    "        opti.subject_to(delta_ON_FC[t] <= 1)\n",
    "        opti.subject_to(delta_OFF_FC[t] >= 0)\n",
    "        opti.subject_to(delta_OFF_FC[t] <= 1)\n",
    "        opti.subject_to(delta_STB_FC[t] >= 0)\n",
    "        opti.subject_to(delta_STB_FC[t] <= 1)\n",
    "\n",
    "        opti.subject_to(delta_ON_EL[t] + delta_STB_EL[t] + delta_OFF_EL[t] == 1)\n",
    "        opti.subject_to(delta_ON_FC[t] + delta_STB_FC[t] + delta_OFF_FC[t] == 1)\n",
    "        \n",
    "        # Transitions EL\n",
    "        opti.subject_to(sigma_OFF_STB_EL[t] >= 0)\n",
    "        opti.subject_to(sigma_OFF_STB_EL[t] <= 1)  \n",
    "        opti.subject_to(sigma_STB_OFF_EL[t] >= 0)\n",
    "        opti.subject_to(sigma_STB_ON_EL[t] >= 0)\n",
    "        opti.subject_to(sigma_ON_STB_EL[t] >= 0)\n",
    "        opti.subject_to(sigma_ON_OFF_EL[t] >= 0)\n",
    "        opti.subject_to(sigma_OFF_ON_EL[t] == 0)\n",
    "\n",
    "        # OFF to STB\n",
    "        opti.subject_to(sigma_OFF_STB_EL[t] - delta_OFF_EL[t-1] <= 0)\n",
    "        opti.subject_to(sigma_OFF_STB_EL[t] - delta_STB_EL[t] <= 0)\n",
    "        opti.subject_to(delta_OFF_EL[t-1] + delta_STB_EL[t] - sigma_OFF_STB_EL[t] <= 1)\n",
    "        # STB to OFF\n",
    "        opti.subject_to(sigma_STB_OFF_EL[t] - delta_STB_EL[t-1] <= 0)\n",
    "        opti.subject_to(sigma_STB_OFF_EL[t] - delta_OFF_EL[t] <= 0)\n",
    "        opti.subject_to(delta_STB_EL[t-1] + delta_OFF_EL[t] - sigma_STB_OFF_EL[t] <= 1)\n",
    "        # STB to ON\n",
    "        opti.subject_to(sigma_STB_ON_EL[t] - delta_STB_EL[t-1] <= 0)\n",
    "        opti.subject_to(sigma_STB_ON_EL[t] - delta_ON_EL[t] <= 0)\n",
    "        opti.subject_to(delta_STB_EL[t-1] + delta_ON_EL[t] - sigma_STB_ON_EL[t] <= 1)\n",
    "        # ON to STB\n",
    "        opti.subject_to(sigma_ON_STB_EL[t] - delta_ON_EL[t-1] <= 0)\n",
    "        opti.subject_to(sigma_ON_STB_EL[t] - delta_STB_EL[t] <= 0)\n",
    "        opti.subject_to(delta_ON_EL[t-1] + delta_STB_EL[t] - sigma_ON_STB_EL[t] <= 1)\n",
    "        # ON to OFF\n",
    "        opti.subject_to(sigma_ON_OFF_EL[t] - delta_ON_EL[t-1] <= 0)\n",
    "        opti.subject_to(sigma_ON_OFF_EL[t] - delta_OFF_EL[t] <= 0)\n",
    "        opti.subject_to(delta_ON_EL[t-1] + delta_OFF_EL[t] - sigma_ON_OFF_EL[t] <= 1)\n",
    "        # OFF to ON\n",
    "        opti.subject_to(sigma_OFF_ON_EL[t] == 0)               \n",
    "        opti.subject_to(sigma_OFF_ON_EL[t] - delta_OFF_EL[t-1] <= 0)\n",
    "        opti.subject_to(sigma_OFF_ON_EL[t] - delta_ON_EL[t] <= 0)\n",
    "        opti.subject_to(delta_OFF_EL[t-1] + delta_ON_EL[t] - sigma_OFF_ON_EL[t] <= 1)\n",
    "\n",
    "\n",
    "        # Transitions FC \n",
    "        opti.subject_to(sigma_OFF_STB_FC[t] >= 0)\n",
    "        opti.subject_to(sigma_OFF_STB_FC[t] <= 1)\n",
    "        opti.subject_to(sigma_STB_OFF_FC[t] >= 0)\n",
    "        opti.subject_to(sigma_STB_ON_FC[t] >= 0)\n",
    "        opti.subject_to(sigma_ON_STB_FC[t] >= 0)\n",
    "        opti.subject_to(sigma_ON_OFF_FC[t] >= 0)\n",
    "        opti.subject_to(sigma_OFF_ON_FC[t] == 0)\n",
    "\n",
    "        # OFF to STB\n",
    "        opti.subject_to(sigma_OFF_STB_FC[t] - delta_OFF_FC[t-1] <= 0)\n",
    "        opti.subject_to(sigma_OFF_STB_FC[t] - delta_STB_FC[t] <= 0)\n",
    "        opti.subject_to(delta_OFF_FC[t-1] + delta_STB_FC[t] - sigma_OFF_STB_FC[t] <= 1)\n",
    "        # STB to OFF\n",
    "        opti.subject_to(sigma_STB_OFF_FC[t] - delta_STB_FC[t-1] <= 0)\n",
    "        opti.subject_to(sigma_STB_OFF_FC[t] - delta_OFF_FC[t] <= 0)\n",
    "        opti.subject_to(delta_STB_FC[t-1] + delta_OFF_FC[t] - sigma_STB_OFF_FC[t] <= 1)\n",
    "        # STB to ON\n",
    "        opti.subject_to(sigma_STB_ON_FC[t] - delta_STB_FC[t-1] <= 0)\n",
    "        opti.subject_to(sigma_STB_ON_FC[t] - delta_ON_FC[t] <= 0)\n",
    "        opti.subject_to(delta_STB_FC[t-1] + delta_ON_FC[t] - sigma_STB_ON_FC[t] <= 1)\n",
    "        # ON to STB\n",
    "        opti.subject_to(sigma_ON_STB_FC[t] - delta_ON_FC[t-1] <= 0)\n",
    "        opti.subject_to(sigma_ON_STB_FC[t] - delta_STB_FC[t] <= 0)\n",
    "        opti.subject_to(delta_ON_FC[t-1] + delta_STB_FC[t] - sigma_ON_STB_FC[t] <= 1)\n",
    "        # ON to OFF\n",
    "        opti.subject_to(sigma_ON_OFF_FC[t] - delta_ON_FC[t-1] <= 0)\n",
    "        opti.subject_to(sigma_ON_OFF_FC[t] - delta_OFF_FC[t] <= 0)\n",
    "        opti.subject_to(delta_ON_FC[t-1] + delta_OFF_FC[t] - sigma_ON_OFF_FC[t] <= 1)\n",
    "        # OFF to ON              \n",
    "        opti.subject_to(sigma_OFF_ON_FC[t] == 0) \n",
    "        opti.subject_to(sigma_OFF_ON_FC[t] - delta_OFF_FC[t-1] <= 0)\n",
    "        opti.subject_to(sigma_OFF_ON_FC[t] - delta_ON_FC[t] <= 0)\n",
    "        opti.subject_to(delta_OFF_FC[t-1] + delta_ON_FC[t] - sigma_OFF_ON_FC[t] <= 1)\n",
    "\n",
    "        # Transitions dwwelling time for OFF-STB\n",
    "        T_CLD_EL = 1\n",
    "        T_CLD_FC = 1\n",
    "        # Electrolyzer constraints\n",
    "        if t >= 1 and t < N - T_CLD_EL:\n",
    "            opti.subject_to(sigma_OFF_STB_EL[t] - sigma_OFF_STB_EL[t-1] <= sigma_OFF_STB_EL[t+1:t + T_CLD_EL+1])\n",
    "            sigma_sum_EL = sum([sigma_OFF_STB_EL[t-j] for j in range(T_CLD_EL)]) # should go to rage(T_CDL_EL+1)\n",
    "            opti.subject_to(sigma_sum_EL <= T_CLD_EL)\n",
    "        \n",
    "        # Fuel Cell constraints\n",
    "        if t >= 1 and t < N - T_CLD_FC:\n",
    "            opti.subject_to(sigma_OFF_STB_FC[t] - sigma_OFF_STB_FC[t-1] <= sigma_OFF_STB_FC[t+1:t + T_CLD_FC+1])\n",
    "            sigma_sum_FC = sum([sigma_OFF_STB_FC[t-j] for j in range(T_CLD_FC)])  # should go to rage(T_CDL_FC+1)\n",
    "            opti.subject_to(sigma_sum_FC <= T_CLD_FC)\n",
    "             \n",
    "                    \n",
    "\n",
    "\n",
    "    # -----------------------------\n",
    "    # Objective\n",
    "    # -----------------------------\n",
    "\n",
    "    obj = sum(alpha_EL * t_s/3600 * delta_ON_EL[t] + C_EL_ON * sigma_OFF_STB_EL[t] + C_EL_STB * sigma_STB_OFF_EL[t] + C_EL_OFF * sigma_ON_OFF_EL[t] \n",
    "    + alpha_FC * t_s/3600 * delta_ON_FC[t] + C_FC_ON * sigma_OFF_STB_FC[t] + C_FC_STB * sigma_STB_OFF_FC[t] + C_FC_OFF * sigma_ON_OFF_FC[t] \n",
    "    + c_battery * P_batt_abs[t] + 1000 * (c_el[t]/1000 * P_grid_pchs[t] - 1 * c_el[t]/1000 * P_grid_sale[t]) * t_s/3600 for t in range(N))\n",
    "    opti.minimize(obj)\n",
    "    \n",
    "    # -----------------------------\n",
    "    # Solve and get optimal values\n",
    "    # -----------------------------\n",
    "\n",
    "    sol = opti.solve()\n",
    "    \n",
    "    SOE_opt = sol.value(SOE)\n",
    "    LOH_opt = sol.value(LOH)\n",
    "\n",
    "    P_batt_opt = sol.value(P_batt)\n",
    "    P_batt_abs = sol.value(P_batt_abs)\n",
    "\n",
    "    P_grid_sale_opt = sol.value(P_grid_sale)\n",
    "    P_grid_pchs_opt = sol.value(P_grid_pchs)\n",
    "\n",
    "    P_FC_opt = sol.value(P_FC)  \n",
    "    delta_ON_FC_opt = sol.value(delta_ON_FC)\n",
    "    delta_STB_FC_opt = sol.value(delta_STB_FC)\n",
    "    delta_OFF_FC_opt = sol.value(delta_OFF_FC)\n",
    "    sigma_OFF_STB_FC_opt = sol.value(sigma_OFF_STB_FC)\n",
    "    sigma_STB_OFF_FC_opt = sol.value(sigma_STB_OFF_FC)\n",
    "    sigma_ON_STB_FC_opt = sol.value(sigma_ON_STB_FC)\n",
    "    sigma_STB_ON_FC_opt = sol.value(sigma_STB_ON_FC)\n",
    "    sigma_ON_OFF_FC_opt = sol.value(sigma_ON_OFF_FC)\n",
    "    sigma_OFF_ON_FC_opt = sol.value(sigma_OFF_ON_FC)\n",
    "\n",
    "    P_EL_opt = sol.value(P_EL)  \n",
    "    delta_ON_EL_opt = sol.value(delta_ON_EL)\n",
    "    delta_STB_EL_opt = sol.value(delta_STB_EL)\n",
    "    delta_OFF_EL_opt = sol.value(delta_OFF_EL)\n",
    "    sigma_OFF_STB_EL_opt = sol.value(sigma_OFF_STB_EL)\n",
    "    sigma_STB_OFF_EL_opt = sol.value(sigma_STB_OFF_EL)\n",
    "    sigma_ON_STB_EL_opt = sol.value(sigma_ON_STB_EL)\n",
    "    sigma_STB_ON_EL_opt = sol.value(sigma_STB_ON_EL)\n",
    "    sigma_ON_OFF_EL_opt = sol.value(sigma_ON_OFF_EL)\n",
    "    sigma_OFF_ON_EL_opt = sol.value(sigma_OFF_ON_EL)\n",
    "\n",
    "\n",
    "    obj_opt = round(sol.value(obj), 3)\n",
    "\n",
    "    return SOE_opt, LOH_opt, P_batt_opt, P_grid_sale_opt, P_grid_pchs_opt, delta_ON_EL_opt, delta_STB_EL_opt, delta_OFF_EL_opt, sigma_OFF_STB_EL_opt, sigma_STB_OFF_EL_opt, sigma_ON_STB_EL_opt, sigma_STB_ON_EL_opt, sigma_ON_OFF_EL_opt, sigma_OFF_ON_EL_opt, P_EL_opt, delta_ON_FC_opt, delta_STB_FC_opt, delta_OFF_FC_opt, sigma_OFF_STB_FC_opt, sigma_STB_OFF_FC_opt, sigma_ON_STB_FC_opt, sigma_STB_ON_FC_opt, sigma_ON_OFF_FC_opt, sigma_OFF_ON_FC_opt , P_FC_opt, obj_opt\n",
    "        \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d6f2b498",
   "metadata": {},
   "outputs": [],
   "source": [
    "def optimizer_V3(T, t_s, c_el, pv, load, SOE_initial, LOH_initial): \n",
    "    # states: SOE_battery, LOH_hess\n",
    "    # inputs to FMU: P_battery, P_FC_sys (start with P_FC), P_El_sys (start with P_El), state_FC, state_EL\n",
    "\n",
    "    # V3: no auxiliaries, no thermal model, no STB state, add transitions and costs between OFF-On, PWA efficiency\n",
    "    # inputs variables in MPC: P_battery, P_grid, P_FC, delta_ON_FC, delta_OFF_FC, sigma_OFF_ON_FC, P_EL, delta_ON_EL, delta_OFF_EL, sigma_OFF_ON_EL\n",
    "    \n",
    "    # Access global parameters\n",
    "    global m, M, P_grid_max, P_battery_nom, SOE_min, SOE_max\n",
    "    global LOH_min, LOH_max, C_max, eta_EL, eta_FC, P_EL_min, P_EL_max, P_EL_STB, P_FC_min, P_FC_max, P_FC_STB, r_EL, r_FC\n",
    "    global alpha_EL, alpha_FC, C_EL, C_FC, c_battery\n",
    "    \n",
    " \n",
    "\n",
    "    N = int(T // t_s)\n",
    "    \n",
    "    # Initialize\n",
    "    import casadi as ca\n",
    "    #opti = ca.Opti()\n",
    "    opti = ca.Opti(\"conic\")\n",
    "\n",
    "\n",
    "    # -----------------------------\n",
    "    # Variables and solver\n",
    "    # -----------------------------\n",
    "\n",
    "    SOE = opti.variable(1, N+1)  # state\n",
    "    LOH = opti.variable(1, N+1)  # state\n",
    "\n",
    "    P_batt = opti.variable(1, N)  # input\n",
    "    P_batt_abs = opti.variable(1,N) # input\n",
    "\n",
    "    P_grid_sale = opti.variable(1, N)        # input \n",
    "    P_grid_pchs = opti.variable(1, N)        # input \n",
    "\n",
    "    P_FC = opti.variable(1, N)          # input\n",
    "    delta_ON_FC = opti.variable(1, N)   # binary input\n",
    "    delta_OFF_FC = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_FC = opti.variable(1, N)  # binary input\n",
    "    x1_FC = opti.variable(1, N)   # PWA binary input\n",
    "    x2_FC = opti.variable(1, N)  # PWA binary input\n",
    "    x3_FC = opti.variable(1, N)  # PWA binary input\n",
    "    z1_FC = opti.variable(1, N)          # bilinear input\n",
    "    z2_FC = opti.variable(1, N)          # bilinear input\n",
    "    z3_FC = opti.variable(1, N)          # bilinear input\n",
    "\n",
    "    P_EL = opti.variable(1, N)          # input\n",
    "    delta_ON_EL = opti.variable(1, N)   # binary input\n",
    "    delta_OFF_EL = opti.variable(1, N)  # binary input\n",
    "    sigma_OFF_ON_EL = opti.variable(1, N)  # binary input\n",
    "    x1_EL = opti.variable(1, N)   # PWA binary input\n",
    "    x2_EL = opti.variable(1, N)  # PWA binary input\n",
    "    x3_EL = opti.variable(1, N)  # PWA binary input\n",
    "    z1_EL = opti.variable(1, N)          # bilinear input\n",
    "    z2_EL = opti.variable(1, N)          # bilinear input\n",
    "    z3_EL = opti.variable(1, N)          # bilinear input\n",
    "\n",
    "    # binary inputs are discrete variables \n",
    "    discrete_var = [0]*(N+1) + [0]*(N+1) + [0]*N + [0]*N + [0]*N + [0]*N + [0]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [0]*N + [0]*N + [0]*N + [0]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [1]*N + [0]*N + [0]*N + [0]*N\n",
    "\n",
    "    # Solver\n",
    "    opti.solver('gurobi', {'discrete': discrete_var})\n",
    "    #opti.solver('bonmin', {'discrete': discrete_var, 'bonmin.tol': 1e-4, 'bonmin.print_level': 0, 'print_time': 0})\n",
    "\n",
    "    # -----------------------------\n",
    "    # Constraints\n",
    "    # -----------------------------\n",
    "\n",
    "    \n",
    "    # Initial storage level\n",
    "    opti.subject_to(SOE[0] == SOE_initial)\n",
    "    opti.subject_to(LOH[0] == LOH_initial)\n",
    "\n",
    "    # Impose initial state of FC and electrolyzer to be OFF\n",
    "    opti.subject_to(delta_OFF_EL[0] == 1)\n",
    "    opti.subject_to(delta_OFF_FC[0] == 1)\n",
    "\n",
    "\n",
    "    \n",
    "\n",
    "    # Constraints at every time step\n",
    "    for t in range(N):\n",
    "\n",
    "            # Bounds on grid\n",
    "            opti.subject_to(pv[t] + P_grid_pchs[t] + 0.89*P_FC[t] == load[t] + P_grid_sale[t] + P_batt[t] + 1.19*P_EL[t])\n",
    "            opti.subject_to(P_grid_sale[t]>=0)\n",
    "            #opti.subject_to(P_grid_sale[t]<=P_grid_max)\n",
    "            opti.subject_to(P_grid_sale[t]<=0)\n",
    "            opti.subject_to(P_grid_pchs[t]>=0)\n",
    "            opti.subject_to(P_grid_pchs[t]<=P_grid_max)\n",
    "\n",
    "            # Bounds on battery and SOE\n",
    "            opti.subject_to(P_batt_abs[t] >= P_batt[t])\n",
    "            opti.subject_to(P_batt_abs[t] >= -P_batt[t])\n",
    "            \n",
    "            opti.subject_to(P_batt[t]>= -0.9 * P_battery_nom)\n",
    "            opti.subject_to(P_batt[t]<= 0.9 * P_battery_nom)\n",
    "        \n",
    "            opti.subject_to(SOE[t+1] == SOE[t] + P_batt[t]  * t_s/3600)\n",
    "            opti.subject_to(SOE[t] >= SOE_min)\n",
    "            opti.subject_to(SOE[t] <= SOE_max)\n",
    "            \n",
    "            #PWA efficiency electrolyzer\n",
    "            # We introduce 3 binary variables xi to activate the piece i of the PWA\n",
    "            opti.subject_to(x1_EL[t] >= 0)\n",
    "            opti.subject_to(x1_EL[t] <= 1)\n",
    "            opti.subject_to(x2_EL[t] >= 0)\n",
    "            opti.subject_to(x2_EL[t] <= 1)\n",
    "            opti.subject_to(x3_EL[t] >= 0)\n",
    "            opti.subject_to(x3_EL[t] <= 1)    \n",
    "\n",
    "            opti.subject_to(delta_OFF_EL[t] + x1_EL[t] + x2_EL[t] + x3_EL[t] == 1)\n",
    "\n",
    "            opti.subject_to(P_EL[t] >= P_EL_min - M * (1-x1_EL[t]))\n",
    "            opti.subject_to(P_EL[t] <= 1700 + M * (1-x1_EL[t]))\n",
    "            opti.subject_to(P_EL[t] >= 1700 - M * (1-x2_EL[t]))\n",
    "            opti.subject_to(P_EL[t] <= 3750 + M * (1-x2_EL[t]))\n",
    "            opti.subject_to(P_EL[t] >= 3750 - M * (1-x3_EL[t]))\n",
    "            opti.subject_to(P_EL[t] <= P_EL_max + M * (1-x3_EL[t]))\n",
    "           \n",
    "            # Piecewise linear expression to replace P_EL * eta_EL:\n",
    "            #Non-linear: P_eta_EL = x1_EL[t] * (0.71685 * P_EL[t] + 71.8325) + x2_EL[t] * (0.56641 * P_EL[t] + 327.2039) + x3_EL[t] * (0.48142 * P_EL[t] + 616.6985)\n",
    "            # We introduce 3 variables zi to replace the bilinear product xi * P_EL\n",
    "            P_eta_EL =  0.68186 * z1_EL[t] + x1_EL[t] * 41.1124 + 0.59523 * z2_EL[t] + x2_EL[t] * 192.3783 + 0.53432 * z3_EL[t] + x3_EL[t] * 400.5637\n",
    "            \n",
    "            # Bi-linear constraints\n",
    "            # For z1_EL and x1_EL\n",
    "            opti.subject_to(z1_EL[t] >= m * x1_EL[t])\n",
    "            opti.subject_to(z1_EL[t] <= M * x1_EL[t])\n",
    "            opti.subject_to(z1_EL[t] >= P_EL[t] - M * (1 - x1_EL[t]))\n",
    "            opti.subject_to(z1_EL[t] <= P_EL[t] + m * (1 - x1_EL[t]))\n",
    "            # For z2_EL and x2_EL\n",
    "            opti.subject_to(z2_EL[t] >= m * x2_EL[t])\n",
    "            opti.subject_to(z2_EL[t] <= M * x2_EL[t])\n",
    "            opti.subject_to(z2_EL[t] >= P_EL[t] - M * (1 - x2_EL[t]))\n",
    "            opti.subject_to(z2_EL[t] <= P_EL[t] + m * (1 - x2_EL[t]))\n",
    "            # For z3_EL and x3_EL\n",
    "            opti.subject_to(z3_EL[t] >= m * x3_EL[t])\n",
    "            opti.subject_to(z3_EL[t] <= M * x3_EL[t])\n",
    "            opti.subject_to(z3_EL[t] >= P_EL[t] - M * (1 - x3_EL[t]))\n",
    "            opti.subject_to(z3_EL[t] <= P_EL[t] + m * (1 - x3_EL[t]))\n",
    "\n",
    "            #PWA efficiency fuel cell\n",
    "            # We introduce 3 binary variables xi to activate the piece i of the PWA\n",
    "            opti.subject_to(x1_FC[t] >= 0)\n",
    "            opti.subject_to(x1_FC[t] <= 1)\n",
    "            opti.subject_to(x2_FC[t] >= 0)\n",
    "            opti.subject_to(x2_FC[t] <= 1)\n",
    "            opti.subject_to(x3_FC[t] >= 0)\n",
    "            opti.subject_to(x3_FC[t] <= 1)    \n",
    "\n",
    "            opti.subject_to(delta_OFF_FC[t] + x1_FC[t] + x2_FC[t] + x3_FC[t] == 1)\n",
    "\n",
    "            opti.subject_to(P_FC[t] >= P_FC_min - M * (1-x1_FC[t]))\n",
    "            opti.subject_to(P_FC[t] <= 2200 + M * (1-x1_FC[t]))\n",
    "            opti.subject_to(P_FC[t] >= 2200 - M * (1-x2_FC[t]))\n",
    "            opti.subject_to(P_FC[t] <= 3800 + M * (1-x2_FC[t]))\n",
    "            opti.subject_to(P_FC[t] >= 3800 - M * (1-x3_FC[t]))\n",
    "            opti.subject_to(P_FC[t] <= P_FC_max + M * (1-x3_FC[t]))\n",
    "\n",
    "            # Piecewise linear expression to replace P_FC / eta_FC:\n",
    "            #Non-linear: P_eta_FC = x1_FC[t] * (2.8347 * P_FC[t] - 292.4739) + x2_FC[t] * (4.0384 * P_FC[t] -2929.9436) + x3_FC[t] * (6.3259 * P_FC[t] + 11682.9301)\n",
    "            # We introduce 3 variables zi to replace the bilinear product xi * P_FC\n",
    "            P_eta_FC = 2.8474 * z1_FC[t] - x1_FC[t] * 322.7086 +  3.7637 * z2_FC[t] - x2_FC[t] * 2337.5082 + 4.9519 * z3_FC[t] - x3_FC[t] * 6862.2995\n",
    "\n",
    "            # Bi-linear constraints\n",
    "            # For z1_FC and x1_FC\n",
    "            opti.subject_to(z1_FC[t] >= m * x1_FC[t])\n",
    "            opti.subject_to(z1_FC[t] <= M * x1_FC[t])\n",
    "            opti.subject_to(z1_FC[t] >= P_FC[t] - M * (1 - x1_FC[t]))\n",
    "            opti.subject_to(z1_FC[t] <= P_FC[t] + m * (1 - x1_FC[t]))\n",
    "            # For z2_FC and x2_FC\n",
    "            opti.subject_to(z2_FC[t] >= m * x2_FC[t])\n",
    "            opti.subject_to(z2_FC[t] <= M * x2_FC[t])\n",
    "            opti.subject_to(z2_FC[t] >= P_FC[t] - M * (1 - x2_FC[t]))\n",
    "            opti.subject_to(z2_FC[t] <= P_FC[t] + m * (1 - x2_FC[t]))\n",
    "            # For z3_FC and x3_FC\n",
    "            opti.subject_to(z3_FC[t] >= m * x3_FC[t])\n",
    "            opti.subject_to(z3_FC[t] <= M * x3_FC[t])\n",
    "            opti.subject_to(z3_FC[t] >= P_FC[t] - M * (1 - x3_FC[t]))\n",
    "            opti.subject_to(z3_FC[t] <= P_FC[t] + m * (1 - x3_FC[t]))\n",
    "\n",
    "\n",
    "            # Bounds on hydrogen storage \n",
    "            opti.subject_to(LOH[t+1] == LOH[t] + (P_eta_EL - P_eta_FC)/ C_max * t_s )\n",
    "            opti.subject_to(LOH[t] >= LOH_min)\n",
    "            opti.subject_to(LOH[t] <= LOH_max)                \n",
    "\n",
    "            # Constraints on electrolyzer\n",
    "            # Bounds when ON                \n",
    "            opti.subject_to(P_EL[t] >= delta_ON_EL[t] * P_EL_min)\n",
    "            opti.subject_to(P_EL[t] <= delta_ON_EL[t] * P_EL_max)\n",
    "        \n",
    "            # Ramping constraints                \n",
    "            if t < N-1:                \n",
    "                opti.subject_to(P_EL[t+1] - P_EL[t] <= r_EL)\n",
    "                opti.subject_to(P_EL[t] - P_EL[t+1] <= r_EL)\n",
    "                            \n",
    "            # Constraints on fuel cell\n",
    "            # Bounds when ON\n",
    "            opti.subject_to(P_FC[t] >= delta_ON_FC[t] * P_FC_min)\n",
    "            opti.subject_to(P_FC[t] <= delta_ON_FC[t] * P_FC_max)\n",
    "            \n",
    "            # Ramping constraints                \n",
    "            if t < N-1:                \n",
    "                opti.subject_to(P_FC[t+1] - P_FC[t] <= r_FC)\n",
    "                opti.subject_to(P_FC[t] - P_FC[t+1] <= r_FC)\n",
    "                            \n",
    "            # States      \n",
    "            opti.subject_to(delta_ON_EL[t] >= 0)\n",
    "            opti.subject_to(delta_ON_EL[t] <= 1)\n",
    "            opti.subject_to(delta_OFF_EL[t] >= 0)\n",
    "            opti.subject_to(delta_OFF_EL[t] <= 1)\n",
    "            opti.subject_to(sigma_OFF_ON_EL[t] >= 0)\n",
    "            opti.subject_to(sigma_OFF_ON_EL[t] <= 1)\n",
    "\n",
    "            opti.subject_to(delta_ON_FC[t] >= 0)\n",
    "            opti.subject_to(delta_ON_FC[t] <= 1)\n",
    "            opti.subject_to(delta_OFF_FC[t] >= 0)\n",
    "            opti.subject_to(delta_OFF_FC[t] <= 1)\n",
    "            opti.subject_to(sigma_OFF_ON_FC[t] >= 0)\n",
    "            opti.subject_to(sigma_OFF_ON_FC[t] <= 1)\n",
    "\n",
    "            opti.subject_to(delta_ON_EL[t] + delta_OFF_EL[t] == 1)\n",
    "            opti.subject_to(delta_ON_FC[t] + delta_OFF_FC[t] == 1)\n",
    "            \n",
    "            # Transitions EL and FC\n",
    "            if t >= 1 and t <= N:              \n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - delta_OFF_EL[t-1] <= 0)\n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - delta_ON_EL[t] <= 0)\n",
    "                opti.subject_to(delta_OFF_EL[t-1] + delta_ON_EL[t] - sigma_OFF_ON_EL[t] <= 1)\n",
    "\n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - delta_OFF_FC[t-1] <= 0)\n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - delta_ON_FC[t] <= 0)\n",
    "                opti.subject_to(delta_OFF_FC[t-1] + delta_ON_FC[t] - sigma_OFF_ON_FC[t] <= 1)\n",
    "\n",
    "\n",
    "            # Transitions dwwelling time for OFF-STB\n",
    "            T_CLD_EL = 1\n",
    "            T_CLD_FC = 1\n",
    "             # Electrolyzer constraints\n",
    "            if t >= 1 and t < N - T_CLD_EL:\n",
    "                opti.subject_to(sigma_OFF_ON_EL[t] - sigma_OFF_ON_EL[t-1] <= sigma_OFF_ON_EL[t+1:t + T_CLD_EL+1])\n",
    "                sigma_sum_EL = sum([sigma_OFF_ON_EL[t-j] for j in range(T_CLD_EL)])\n",
    "                opti.subject_to(sigma_sum_EL <= T_CLD_EL)\n",
    "    \n",
    "            # Fuel Cell constraints\n",
    "            if t >= 1 and t < N - T_CLD_FC:\n",
    "                opti.subject_to(sigma_OFF_ON_FC[t] - sigma_OFF_ON_FC[t-1] <= sigma_OFF_ON_FC[t+1:t + T_CLD_FC+1])\n",
    "                sigma_sum_FC = sum([sigma_OFF_ON_FC[t-j] for j in range(T_CLD_FC)])\n",
    "                opti.subject_to(sigma_sum_FC <= T_CLD_FC)\n",
    "             \n",
    "            \n",
    "   \n",
    "    # -----------------------------\n",
    "    # Objective\n",
    "    # -----------------------------\n",
    "\n",
    "    obj = sum(alpha_EL * t_s/3600 * delta_ON_EL[t] + C_EL * sigma_OFF_ON_EL[t] + alpha_FC * t_s/3600 * delta_ON_FC[t] \n",
    "    + C_FC * sigma_OFF_ON_FC[t] + c_battery * P_batt_abs[t] + 1*(c_el[t]/1000 * P_grid_pchs[t] - 0 * c_el[t]/1000 * P_grid_sale[t]) * t_s/3600 for t in range(N))\n",
    "    opti.minimize(obj)\n",
    "    \n",
    "    # -----------------------------\n",
    "    # Solve and get optimal values\n",
    "    # -----------------------------\n",
    "\n",
    "    sol = opti.solve()\n",
    "    \n",
    "    SOE_opt = sol.value(SOE)\n",
    "    LOH_opt = sol.value(LOH)\n",
    "    P_batt_opt = sol.value(P_batt)\n",
    "    P_batt_abs_opt = sol.value(P_batt_abs)\n",
    "    P_grid_sale_opt = sol.value(P_grid_sale)\n",
    "    P_grid_pchs_opt = sol.value(P_grid_pchs)\n",
    "    P_FC_opt = sol.value(P_FC)  \n",
    "    delta_ON_FC_opt = sol.value(delta_ON_FC)\n",
    "    delta_OFF_FC_opt = sol.value(delta_OFF_FC)\n",
    "    sigma_OFF_ON_FC_opt = sol.value(sigma_OFF_ON_FC)\n",
    "    x1_FC_opt = sol.value(x1_FC)\n",
    "    x2_FC_opt = sol.value(x2_FC)\n",
    "    x3_FC_opt = sol.value(x3_FC)\n",
    "    z1_FC_opt = sol.value(z1_FC)\n",
    "    z2_FC_opt = sol.value(z2_FC)\n",
    "    z3_FC_opt = sol.value(z3_FC)\n",
    "    P_EL_opt = sol.value(P_EL)\n",
    "    delta_ON_EL_opt = sol.value(delta_ON_EL)\n",
    "    delta_OFF_EL_opt = sol.value(delta_OFF_EL)\n",
    "    sigma_OFF_ON_EL_opt = sol.value(sigma_OFF_ON_EL)\n",
    "    x1_EL_opt = sol.value(x1_EL)\n",
    "    x2_EL_opt = sol.value(x2_EL)\n",
    "    x3_EL_opt = sol.value(x3_EL)\n",
    "    z1_EL_opt = sol.value(z1_EL)\n",
    "    z2_EL_opt = sol.value(z2_EL)\n",
    "    z3_EL_opt = sol.value(z3_EL)\n",
    "\n",
    "    obj_opt = round(sol.value(obj), 3)\n",
    "\n",
    "    return SOE_opt, LOH_opt, P_batt_opt, P_grid_sale_opt, P_grid_pchs_opt, delta_ON_EL_opt, delta_OFF_EL_opt, sigma_OFF_ON_EL_opt , P_EL_opt, delta_ON_FC_opt, delta_OFF_FC_opt, sigma_OFF_ON_FC_opt , P_FC_opt, obj_opt\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "95474f8f-758f-431f-bb5e-24b53d4831ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "def ctrl_postprocessor(delta_ON_EL, delta_OFF_EL, delta_ON_FC, delta_OFF_FC, P_FC, P_EL, P_grid_pchs, P_grid_sale):\n",
    "    # Ensure inputs are arrays/lists\n",
    "    if isinstance(delta_ON_EL, float):\n",
    "        delta_ON_EL = [delta_ON_EL]\n",
    "    if isinstance(delta_OFF_EL, float):\n",
    "        delta_OFF_EL = [delta_OFF_EL]\n",
    "    if isinstance(delta_ON_FC, float):\n",
    "        delta_ON_FC = [delta_ON_FC]\n",
    "    if isinstance(delta_OFF_FC, float):\n",
    "        delta_OFF_FC = [delta_OFF_FC]\n",
    "    if isinstance(P_FC, float):\n",
    "        P_FC = [P_FC]\n",
    "    if isinstance(P_EL, float):\n",
    "        P_EL = [P_EL]\n",
    "    if isinstance(P_grid_pchs, float):\n",
    "        P_grid_pchs = [P_grid_pchs]\n",
    "    if isinstance(P_grid_sale, float):\n",
    "        P_grid_sale = [P_grid_sale]\n",
    "        \n",
    "    state_EL = []\n",
    "    state_FC = []\n",
    "    P_grid = []\n",
    "\n",
    "    # Loop over each time step\n",
    "    for i in range(len(delta_ON_EL)):\n",
    "        # Determine the state of the electrolyzer\n",
    "        if delta_ON_EL[i] == 1:\n",
    "            state_EL.append(2)  # ON state\n",
    "        elif delta_OFF_EL[i] == 1:\n",
    "            state_EL.append(0)  # OFF state\n",
    "        else:\n",
    "            state_EL.append(1)  # Standby state\n",
    "\n",
    "        # Determine the state of the fuel cell\n",
    "        if delta_ON_FC[i] == 1:\n",
    "            state_FC.append(2)  # ON state\n",
    "        elif delta_OFF_FC[i] == 1:\n",
    "            state_FC.append(0)  # OFF state\n",
    "        else:\n",
    "            state_FC.append(1)  # Standby state\n",
    "\n",
    "        # Calculate the net grid power for each time step\n",
    "        P_grid.append(P_grid_sale[i] - P_grid_pchs[i])\n",
    "\n",
    "    return np.array(P_FC), np.array(P_EL), np.array(state_FC), np.array(state_EL), np.array(P_grid)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "06cae62b-a3b0-4f81-91b7-66e44d3b61e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "def MPC(states, c_el_slice, pv_slice, load_slice, T, t_s):\n",
    "\n",
    "    # Debugging: Print out the inputs to ensure they are correct\n",
    "    print(f\"Running MPC with horizon {T}\")\n",
    "    print(f\"c_el_slice: {c_el_slice}\")\n",
    "    print(f\"pv_slice: {pv_slice}\")\n",
    "    print(f\"load_slice: {load_slice}\") \n",
    "    \n",
    "    # Initialize action dictionary\n",
    "    action = {\n",
    "        'P_battery': 0,\n",
    "        'P_FC_sys': 0,\n",
    "        'P_EL_sys': 0,\n",
    "        'state_FC': 0,\n",
    "        'state_EL': 0\n",
    "    }\n",
    "\n",
    "    tolerance = 1*10**(-2)\n",
    "    \n",
    "    # Extract necessary information from inputs\n",
    "    SOE = states[2]  # Adjust index based on actual state structure\n",
    "    LOH = states[4]    \n",
    "\n",
    "    \n",
    "    # MPC V1\n",
    "    SOE_opt, LOH_opt, P_batt, P_grid_sale, P_grid_pchs, delta_ON_EL, delta_OFF_EL, sigma_EL, P_EL, delta_ON_FC, delta_OFF_FC, sigma_FC, P_FC, obj_opt = optimizer_V1(T, t_s, c_el_slice, pv_slice, load_slice, SOE, LOH)\n",
    "\n",
    "    \n",
    "    # Compute values for action['P_battery'], action['P_EL_sys'], action['P_FC_sys'], action['state_EL'] and action['state_FC']\n",
    "    P_FC, P_EL, state_FC, state_EL, P_grid = ctrl_postprocessor(delta_ON_EL, delta_OFF_EL, delta_ON_FC, delta_OFF_FC, P_FC, P_EL, P_grid_pchs, P_grid_sale)\n",
    "\n",
    "    print(f\"Battery setpoint: {P_batt[0]}\")\n",
    "\n",
    "    #if isinstance(P_batt, float):\n",
    "    #    P_batt = [P_batt]\n",
    "    # Update action dictionary with the first value of each vector\n",
    "    action['P_battery'] = P_batt[0]\n",
    "    action['P_FC_sys'] = 0.89 * P_FC[0]\n",
    "    action['P_EL_sys'] = 1.19 * P_EL[0]\n",
    "    action['state_FC'] = state_FC[0]\n",
    "    action['state_EL'] = state_EL[0]\n",
    "\n",
    "    for key in ['P_battery', 'P_EL_sys', 'P_FC_sys']:\n",
    "        if abs(action[key]) < tolerance:\n",
    "            action[key] = 0\n",
    "     \n",
    "    # Convert action dictionary to a list of values\n",
    "    action_list = list(action.values())\n",
    "    # Round each action to 2 decimal places\n",
    "    action_list = [round(a, 2) for a in action_list]\n",
    "\n",
    "     # Create the observation DataFrame: take 2nd element of SOE and LOH as first elemet is the initial state given by the FMU - prediction\n",
    "    observation = pd.DataFrame({\n",
    "        'SOE': [SOE_opt[1]],\n",
    "        'LOH': [LOH_opt[1]],\n",
    "        'P_grid': [P_grid[0]], \n",
    "        'Objective': [obj_opt]\n",
    "    })\n",
    "    \n",
    "    return action_list, observation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "142e00fb",
   "metadata": {},
   "outputs": [],
   "source": [
    "t_s = 15*60\n",
    "T = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "aff4d86e-9943-401b-af71-889743178332",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Root directory: /Users/thomasdefauw/Documents/Alienor/hess/MPC-FMU/FMU\n",
      "FMU Path: /home/alienor/Documents/hess/MPC-FMU/FMU/H2Microgrid_0TransiEnt_HybridMicrogrid_H2Microgrid_0HP.fmu\n",
      "ERROR: The \"pyfmi\" package was not found. Please install.\n"
     ]
    },
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'pyfmi'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[18], line 66\u001b[0m\n\u001b[1;32m     63\u001b[0m parameter[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124maction_max\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39marray([\u001b[38;5;241m1e4\u001b[39m, \u001b[38;5;241m1e4\u001b[39m, \u001b[38;5;241m1e4\u001b[39m, \u001b[38;5;241m0\u001b[39m, \u001b[38;5;241m0\u001b[39m], dtype\u001b[38;5;241m=\u001b[39mdtype) \n\u001b[1;32m     64\u001b[0m parameter[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mobservation_names\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m [\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mP_PV\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mP_load\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mSOE_battery\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mP_battery\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mLOH\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mP_EL\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mP_FC\u001b[39m\u001b[38;5;124m'\u001b[39m]\n\u001b[0;32m---> 66\u001b[0m env \u001b[38;5;241m=\u001b[39m \u001b[43mfmi_gym\u001b[49m\u001b[43m(\u001b[49m\u001b[43mparameter\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/miniconda3/envs/ada/lib/python3.8/site-packages/fmi_mlc/fmi_gym.py:49\u001b[0m, in \u001b[0;36mfmi_gym.__init__\u001b[0;34m(self, parameter, pyfmi)\u001b[0m\n\u001b[1;32m     46\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfmu \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m     48\u001b[0m \u001b[38;5;66;03m# FMI interface (load FMU)\u001b[39;00m\n\u001b[0;32m---> 49\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msetup_pyfmi\u001b[49m\u001b[43m(\u001b[49m\u001b[43mpyfmi\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     51\u001b[0m \u001b[38;5;66;03m# Use Python preprocessing before calling FMU\u001b[39;00m\n\u001b[1;32m     52\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mparameter[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mpreprocessor\u001b[39m\u001b[38;5;124m'\u001b[39m]:\n",
      "File \u001b[0;32m~/miniconda3/envs/ada/lib/python3.8/site-packages/fmi_mlc/fmi_gym.py:120\u001b[0m, in \u001b[0;36mfmi_gym.setup_pyfmi\u001b[0;34m(self, pyfmi)\u001b[0m\n\u001b[1;32m    118\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[1;32m    119\u001b[0m     \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mERROR: The \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpyfmi\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m package was not found. Please install.\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m--> 120\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m e\n",
      "File \u001b[0;32m~/miniconda3/envs/ada/lib/python3.8/site-packages/fmi_mlc/fmi_gym.py:116\u001b[0m, in \u001b[0;36mfmi_gym.setup_pyfmi\u001b[0;34m(self, pyfmi)\u001b[0m\n\u001b[1;32m    114\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    115\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 116\u001b[0m         \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mpyfmi\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m load_fmu\n\u001b[1;32m    117\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mload_fmu \u001b[38;5;241m=\u001b[39m load_fmu\n\u001b[1;32m    118\u001b[0m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n",
      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'pyfmi'"
     ]
    }
   ],
   "source": [
    "# class controller\n",
    "class controller:\n",
    "    def __init__(self, c_el, pv, load, T, t_s):\n",
    "        self.c_el = c_el\n",
    "        self.pv = pv\n",
    "        self.load = load\n",
    "        self.T = int(T // t_s)\n",
    "        self.t_s = t_s\n",
    "        self.iteration = 0\n",
    "\n",
    "    def do_step(self, state):\n",
    "        k = self.iteration \n",
    "\n",
    "        #print(\"c_el before slicing:\", self.c_el)\n",
    "\n",
    "        # Extract the relevant slice from the pv and load vectors\n",
    "        c_el_slice = self.c_el[k:k + self.T]\n",
    "        pv_slice = self.pv[k:k + self.T]\n",
    "        load_slice = self.load[k:k + self.T]\n",
    "\n",
    "        #print(\"c_el_slice:\", c_el_slice)\n",
    "\n",
    "        # If we're at the end and slices are too short wrto initial time horizon, pad with 0\n",
    "        if len(c_el_slice) < self.T:\n",
    "            pv_slice = np.pad(pv_slice, (0, self.T - len(pv_slice)), 'constant', constant_values=0)\n",
    "            load_slice = np.pad(load_slice, (0, self.T - len(load_slice)), 'constant', constant_values=0)\n",
    "            c_el_slice = np.pad(c_el_slice, (0, self.T - len(c_el_slice)), 'constant', constant_values=0)\n",
    "\n",
    "\n",
    "        # Controller logic using state, pv_slice, and load_slice\n",
    "        action, observation = MPC(state, c_el_slice, pv_slice, load_slice, T, t_s)\n",
    "        \n",
    "        # Increment the iteration counter\n",
    "        self.iteration += 1\n",
    "        \n",
    "        return action, observation\n",
    "        \n",
    "\n",
    "\n",
    "# fmi_gym parameter initialization for the dry run\n",
    "parameter = {}\n",
    "\n",
    "parameter['seed'] = 1\n",
    "parameter['store_data'] = True\n",
    "\n",
    "# fmu parameter initialization\n",
    "dtype = np.float64\n",
    "parameter['fmu_step_size'] = t_s\n",
    "parameter['fmu_path'] = os.path.join(root, '/home/alienor/Documents/hess/MPC-FMU/FMU/H2Microgrid_0TransiEnt_HybridMicrogrid_H2Microgrid_0HP.fmu') #/home/alienor is the way to access my folders via the container\n",
    "print(f\"Root directory: {root}\")\n",
    "print(\"FMU Path:\", parameter['fmu_path'])\n",
    "parameter['fmu_start_time'] = 165*24*60*60 + 0*60*60\n",
    "parameter['fmu_warmup_time'] = 0*60*60\n",
    "parameter['fmu_final_time'] = 172*24*60*60 + 0*60*60 + T\n",
    "# if you need to overwrite used weather file in model. Same for load file.\n",
    "#parameter['fmu_param'] = {'weaDat.weather_file': '/home/alienor/Documents/hess/H2Microgrid_TransiEnt/Resources/weather/USA_CA_Los.Angeles.Intl.AP.722950_TMY3.mos'}\n",
    "\n",
    "# find a way to overwrite initalization of battery SOC and HESS SOC\n",
    "\n",
    "# data exchange parameter\n",
    "parameter['action_names'] = ['P_set_battery', 'P_set_FC', 'P_set_EL', 'state_FC', 'state_EL' ]\n",
    "parameter['action_min'] = np.array([-1e4, 0, 0, 0, 0], dtype=dtype) # can ignore this, can set to [-1e3] * len(action_names)\n",
    "parameter['action_max'] = np.array([1e4, 1e4, 1e4, 0, 0], dtype=dtype) \n",
    "parameter['observation_names'] = ['P_PV', 'P_load', 'SOE_battery', 'P_battery', 'LOH', 'P_EL', 'P_FC']\n",
    "\n",
    "env = fmi_gym(parameter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "17783333",
   "metadata": {},
   "outputs": [],
   "source": [
    "# MPC time parameters\n",
    "T = 24*60*60  # horizon time (at each iteration, optimization horizon - can be different than simulation duration\n",
    "t_s = 15*60  # Time step size in seconds: ts = 1h -> for not losing too much on transitions for HESS, ideally ts should be smaller or equal to tau_CLD\n",
    "N = int(T//t_s) # Number of iteration in 1 optimization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "c411a033-dff0-4418-a6db-0366b07a7183",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.42617e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.42697e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.4271e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.42723e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.4273e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.42764e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.42795e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.42808e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.42816e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.42897e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.42907e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.42909e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43051e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43053e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43111e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43128e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.4327e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43279e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43311e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43334e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43336e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43372e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43467e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43485e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43575e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43623e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43649e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43651e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43698e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43759e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.4384e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43937e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43937e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.43981e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.44106e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.44182e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.44234e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.44234e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.44238e+07.\n",
      "\n",
      "\n",
      "Warning: Nonlinear solver accepted imprecise solution when solving\n",
      "  Tag: simulation.nonlinear[9] during event iteration at time 1.44239e+07.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Initialize the environment \n",
    "# Dry run to read PV and load profiles on entire simulation, and use them as forecasts\n",
    "done = False\n",
    "state = env.reset()\n",
    "\n",
    "# Run the simulation\n",
    "while not done:\n",
    "    action = env.action_space.sample() # random test without actions computed by controller --> good dry run to read PV and load profiles!\n",
    "    state, reward, done, info = env.step(action)\n",
    "    \n",
    "    if done:\n",
    "        dry = env.data.copy(deep=True)\n",
    "        state = env.reset()\n",
    "env.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "caf51cae-4c53-4fad-854f-8a8526ae6f85",
   "metadata": {},
   "outputs": [],
   "source": [
    "# When timestep is a multiple of 1 hour\n",
    "dry.index = [pd.to_datetime('2021-01-01') + pd.DateOffset(seconds=ix) for ix in dry.index]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "e2bb462b-e87c-4333-94b5-6b8bcd5524e1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# When timestep is not a multiple of 1 hour\n",
    "# Reference time\n",
    "reference_time = pd.to_datetime('2021-01-01')\n",
    "\n",
    "# Convert Timestamps to seconds\n",
    "dry.index = (dry.index - reference_time).total_seconds().astype(int)\n",
    "\n",
    "# Generate the new index\n",
    "dry.index = [reference_time + pd.DateOffset(seconds=ix) for ix in dry.index]\n",
    "\n",
    "dry = dry[['time', 'P_PV', 'P_load']]\n",
    "\n",
    "#plot\n",
    "plt.figure(figsize=(12, 6))\n",
    "\n",
    "plt.plot(dry.index, dry['P_PV'], label='PV', color='blue')\n",
    "plt.plot(dry.index, dry['P_load'], label='Load', color='red')\n",
    "\n",
    "plt.title('PV Generation and Load Demand over Time')\n",
    "plt.xlabel('Time')\n",
    "plt.ylabel('Power (W)')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "994634ea",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Root directory: /root/.vscode-server/bin/eaa41d57266683296de7d118f574d0c2652e1fc4\n",
      "FMU Path: /home/alienor/Documents/hess/MPC-FMU/FMU/H2Microgrid_0TransiEnt_HybridMicrogrid_H2Microgrid_0HP.fmu\n"
     ]
    }
   ],
   "source": [
    "# overwrite fmi_gym parameter for the simulation in order to generate less forecasts \n",
    "#parameter = {}\n",
    "\n",
    "parameter['seed'] = 1\n",
    "parameter['store_data'] = True\n",
    "\n",
    "# fmu parameter initialization\n",
    "dtype = np.float64\n",
    "parameter['fmu_step_size'] = t_s\n",
    "parameter['fmu_path'] = os.path.join(root, '/home/alienor/Documents/hess/MPC-FMU/FMU/H2Microgrid_0TransiEnt_HybridMicrogrid_H2Microgrid_0HP.fmu') #/home/alienor is the way to access my folders via the container\n",
    "print(f\"Root directory: {root}\")\n",
    "print(\"FMU Path:\", parameter['fmu_path'])\n",
    "parameter['fmu_start_time'] = 165*24*60*60 + 0*60*60\n",
    "parameter['fmu_warmup_time'] = 0*60*60\n",
    "parameter['fmu_final_time'] = 166*24*60*60 + 0*60*60\n",
    "# if you need to overwrite used weather file in model. Same for load file.\n",
    "#parameter['fmu_param'] = {'weaDat.weather_file': '/home/alienor/Documents/hess/H2Microgrid_TransiEnt/Resources/weather/USA_CA_Los.Angeles.Intl.AP.722950_TMY3.mos'}\n",
    "\n",
    "# find a way to overwrite initalization of battery SOC and HESS SOC\n",
    "\n",
    "# data exchange parameter\n",
    "parameter['action_names'] = ['P_set_battery', 'P_set_FC', 'P_set_EL', 'state_FC', 'state_EL' ]\n",
    "parameter['action_min'] = np.array([-1e4, 0, 0, 0, 0], dtype=dtype) # can ignore this, can set to [-1e3] * len(action_names)\n",
    "parameter['action_max'] = np.array([1e4, 1e4, 1e4, 0, 0], dtype=dtype) \n",
    "parameter['observation_names'] = ['P_PV', 'P_load', 'SOE_battery', 'P_battery', 'LOH', 'P_EL', 'P_FC']\n",
    "\n",
    "env = fmi_gym(parameter)\n",
    "\n",
    "L = int((parameter['fmu_final_time'] - parameter['fmu_start_time']) // t_s) # Number of timesteps in 1 simulation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "75f9c856",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1296x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Electricity prices at a 15min sampling time\n",
    "\n",
    "\n",
    "# Define the pricing schemes\n",
    "high_season_weekday_15min = np.array(\n",
    "    [0.07274]*40 + [0.10018]*12 + [0.15858]*16 + [0.10018]*12 + [0.07274]*16\n",
    ")\n",
    "\n",
    "high_season_weekend_15min = np.array([0.07274]*96)\n",
    "\n",
    "low_season_weekday_15min = np.array(\n",
    "    [0.07664]*40 + [0.10018]*12 + [0.10018]*16 + [0.10018]*12 + [0.07664]*16\n",
    ")\n",
    "\n",
    "low_season_weekend_15min = np.array([0.07664]*96)\n",
    "\n",
    "# Create a time vector for 24 hours, with a 15-minute interval\n",
    "hours = np.arange(0, 24, 0.25)\n",
    "\n",
    "# Plotting the pricing schemes\n",
    "plt.figure(figsize=(18, 6))\n",
    "plt.plot(hours, high_season_weekday_15min, label='High Season Weekday')\n",
    "plt.plot(hours, high_season_weekend_15min, label='High Season Weekend')\n",
    "plt.plot(hours, low_season_weekday_15min, label='Low Season Weekday')\n",
    "plt.plot(hours, low_season_weekend_15min, label='Low Season Weekend')\n",
    "\n",
    "# Labels and title\n",
    "plt.xlabel('Hours of the Day')\n",
    "plt.ylabel('Price ($/kWh)')\n",
    "plt.title('TOU Electricity Prices Throughout the Day in Los Angeles')\n",
    "plt.legend(loc='upper right')\n",
    "\n",
    "# Show all hours on the x-axis\n",
    "plt.xticks(np.arange(0, 25, 1))\n",
    "\n",
    "# Remove the grid\n",
    "plt.grid(False)\n",
    "\n",
    "# Show plot\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "b18a1c6a-b5b9-44fe-a5e7-6963594a64d6",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Iteration 0: SOE = 2500.0, LOH = 0.5\n",
      "Running MPC with horizon 86400\n",
      "c_el_slice: [0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274\n",
      " 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274\n",
      " 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274\n",
      " 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274\n",
      " 0.07274 0.07274 0.07274 0.07274 0.10018 0.10018 0.10018 0.10018 0.10018\n",
      " 0.10018 0.10018 0.10018 0.10018 0.10018 0.10018 0.10018 0.15858 0.15858\n",
      " 0.15858 0.15858 0.15858 0.15858 0.15858 0.15858 0.15858 0.15858 0.15858\n",
      " 0.15858 0.15858 0.15858 0.15858 0.15858 0.10018 0.10018 0.10018 0.10018\n",
      " 0.10018 0.10018 0.10018 0.10018 0.10018 0.10018 0.10018 0.10018 0.07274\n",
      " 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274\n",
      " 0.07274 0.07274 0.07274 0.07274 0.07274 0.07274]\n",
      "pv_slice: [    0.             0.             0.             0.\n",
      "     0.             0.             0.             0.\n",
      "     0.             0.             0.             0.\n",
      "     0.             0.             0.             0.\n",
      "     0.             0.             0.            79.76512746\n",
      "   253.62249563   540.95227691  1020.57520085  1713.49467544\n",
      "  2634.91831165  3654.67672777  4630.6054038   5593.51620152\n",
      "  6661.85865083  7812.52751563  9026.51864061 10188.31954389\n",
      " 11259.47964461 12284.80709317 13330.97371186 14373.00606175\n",
      " 15348.74814167 16276.97768586 17165.87407786 17898.09186203\n",
      " 18386.11483783 18694.56456053 18909.81469556 18996.85160221\n",
      " 18930.47963427 18852.46797545 18856.90255872 18941.04085043\n",
      " 19005.2850789  19046.8884095  19059.93247694 19061.37739983\n",
      " 19073.08870467 19020.05313431 18866.80549063 18542.68378227\n",
      " 18005.49662217 17280.54278346 16394.84797817 15356.04984852\n",
      " 14232.54872589 13105.9880379  12054.9873729  11098.03427031\n",
      " 10194.80583779  9277.1377472   8310.93553064  7323.52437244\n",
      "  6356.8885066   5415.65182056  4509.51922681  3222.70189718\n",
      "  1668.26751091   458.93645667     0.             0.\n",
      "     0.             0.             0.             0.\n",
      "     0.             0.             0.             0.\n",
      "     0.             0.             0.             0.\n",
      "     0.             0.             0.             0.\n",
      "     0.             0.             0.             0.        ]\n",
      "load_slice: [ 5721.5774616   5725.2151868   5736.0326128   5721.2200412\n",
      "  5737.4653444   5720.0911996   5727.627182    5733.0726288\n",
      "  5720.06904     5725.738952    5695.1726132   5707.5567692\n",
      "  5678.9392148   5697.0675088   5707.9849732   5718.601088\n",
      "  5822.5878712   5369.65500774  5478.31239534  5444.67854174\n",
      "  5411.43105614  6300.75293747  6384.95188267  6426.82015467\n",
      "  6510.05309187  7349.43813686  7512.84261006  7469.82877406\n",
      "  7571.85509486 14937.1330074  14907.6676138  14961.4387762\n",
      " 14872.5255498  15421.9352425  15454.3177709  15496.2159221\n",
      " 15538.5288569  15711.6334441  15587.3532481  15680.7298069\n",
      " 15692.5040189  15722.6959582  15829.8180982  15758.994555\n",
      " 15750.0595118  14859.0606072  14761.4572608  14872.9012364\n",
      " 14932.326094   15754.9666383  15612.0989331  15725.1930095\n",
      " 15737.5454031  15749.0702648  15768.8349232  15765.0423176\n",
      " 15730.9376052  15752.8696146  15721.599503   15698.9777418\n",
      " 15726.8710606  15819.3704339  15849.4727871  15777.5685491\n",
      " 15788.6780483  10557.28099103 10625.68379063 10540.37051983\n",
      " 10631.30401503  8273.2890104   8271.2826908   8248.325558\n",
      "  8194.568662    7743.49042234  7700.37854594  7802.14805914\n",
      "  7711.22447514  9136.3840846   9100.7034234   9120.2785382\n",
      "  9133.0644026   9035.34837603  8919.51959243  8884.73775603\n",
      "  8922.96500963  6082.015014    6075.8493792   6051.6386592\n",
      "  6076.3924444   5761.3745344   5793.819616    5738.815176\n",
      "  5780.5838736   5732.5632916   5720.3748364   5742.93389   ]\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I             1         OPT 21.617085       41 10.001134\n",
      "NLP0014I             2         OPT 21.618232       29 5.288702\n",
      "NLP0014I             3         OPT 21.789094       28 6.654649\n",
      "NLP0014I             4         OPT 21.789093       49 11.626872\n",
      "NLP0014I             5         OPT 21.61823       29 6.606491\n",
      "NLP0014I             6         OPT 21.787283       44 9.761664\n",
      "NLP0014I             7         OPT 21.618807       29 6.708238\n",
      "NLP0014I             8         OPT 21.618808       30 6.779452\n",
      "NLP0014I             9         OPT 21.814392       24 6.166026\n",
      "NLP0014I            10         OPT 21.872629       42 9.176356\n",
      "NLP0014I            11         OPT 21.618205       28 6.593128\n",
      "NLP0014I            12         OPT 21.618206       43 8.964019\n",
      "NLP0014I            13         OPT 21.87263       29 6.852839\n",
      "NLP0014I            14         OPT 21.786099       30 6.850355\n",
      "NLP0014I            15         OPT 21.619774       26 5.834903\n",
      "NLP0014I            16         OPT 21.619777       27 6.336818\n",
      "NLP0014I            17         OPT 21.786099       28 5.820059\n",
      "NLP0014I            18         OPT 22.846775       44 11.628942\n",
      "NLP0014I            19         OPT 21.618748       50 12.150541\n",
      "NLP0014I            20         OPT 21.618749       29 6.950191\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I            21         OPT 22.846777       27 6.118872\n",
      "NLP0014I            22         OPT 21.618779       29 6.316729\n",
      "NLP0014I            23         OPT 21.795138       29 6.538294\n",
      "NLP0014I            24         OPT 21.795138       55 14.818261\n",
      "NLP0014I            25         OPT 21.61878       28 6.307958\n",
      "NLP0014I            26         OPT 21.618231       30 6.395045\n",
      "NLP0014I            27         OPT 23.382956       27 6.386513\n",
      "NLP0014I            28         OPT 23.382955       42 9.920369\n",
      "NLP0014I            29         OPT 21.618233       28 7.266718\n",
      "NLP0014I            30         OPT 21.618207       28 6.816029\n",
      "NLP0014I            31         OPT 21.805853       53 13.255768\n",
      "NLP0014I            32         OPT 21.805853       52 11.924542\n",
      "NLP0014I            33         OPT 21.618208       28 6.408464\n",
      "NLP0014I            34         OPT 21.617756       49 11.937791\n",
      "NLP0014I            35         OPT 21.809071       28 6.151726\n",
      "NLP0014I            36         OPT 21.809069       56 14.640258\n",
      "NLP0014I            37         OPT 21.617756       28 6.847368\n",
      "NLP0014I            38         OPT 24.006181       49 12.015042\n",
      "NLP0014I            39         OPT 21.617776       29 6.43923\n",
      "NLP0014I            40         OPT 21.61778       28 6.982015\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I            41         OPT 24.006183       27 6.133223\n",
      "NLP0014I            42         OPT 22.660649       42 10.620826\n",
      "NLP0014I            43         OPT 21.617388       50 12.878207\n",
      "NLP0014I            44         OPT 21.617387       28 6.348239\n",
      "NLP0014I            45         OPT 22.660649       27 6.535223\n",
      "NLP0014I            46         OPT 21.617412       26 6.646284\n",
      "NLP0014I            47         OPT 24.645167       28 6.560109\n",
      "NLP0014I            48         OPT 24.645168       51 12.802933\n",
      "NLP0014I            49         OPT 21.617411       26 6.475607\n",
      "NLP0014I            50         OPT 21.61741       27 6.177131\n",
      "NLP0014I            51      INFEAS 0.43988047       34 7.773723\n",
      "NLP0014I            52         OPT 21.617719       26 5.841439\n",
      "NLP0014I            53      INFEAS 0.46188075       33 7.435366\n",
      "NLP0014I            54         OPT 25.064392       54 13.953041\n",
      "NLP0014I            55         OPT 21.617103       29 6.53863\n",
      "NLP0014I            56         OPT 21.617106       28 6.572567\n",
      "NLP0014I            57         OPT 25.064391       53 12.821486\n",
      "NLP0014I            58         OPT 21.617103       27 6.167708\n",
      "NLP0014I            59      INFEAS 0.43889277       35 8.51329\n",
      "NLP0014I            60         OPT 21.617293       24 5.51149\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I            61      INFEAS 0.42996861       35 8.113387\n",
      "NLP0014I            62         OPT 21.618231       27 6.692142\n",
      "NLP0014I            63         OPT 21.619567       27 6.4234\n",
      "NLP0014I            64      INFEAS 0.43632595       34 7.474632\n",
      "NLP0014I            65         OPT 21.618811       49 11.820724\n",
      "NLP0014I            66      INFEAS 0.51981922       34 7.328423\n",
      "NLP0014I            67         OPT 21.618236       27 6.486934\n",
      "NLP0014I            68      INFEAS 0.4542686       35 7.792621\n",
      "NLP0014I            69         OPT 21.620594       47 12.97894\n",
      "NLP0014I            70         OPT 21.627208       30 6.70091\n",
      "NLP0014I            71      INFEAS 0.43249161       34 7.92029\n",
      "NLP0014I            72         OPT 21.622074       53 11.89547\n",
      "NLP0014I            73      INFEAS 0.53048142       37 8.26248\n",
      "NLP0014I            74         OPT 21.620589       28 6.811212\n",
      "NLP0014I            75      INFEAS 0.4416165       34 6.983099\n",
      "NLP0014I            76         OPT 21.620591       29 6.846424\n",
      "NLP0014I            77      INFEAS 0.44446677       34 7.355478\n",
      "NLP0014I            78         OPT 22.149448       44 10.343472\n",
      "NLP0014I            79      INFEAS 0.046457751       57 12.636183\n",
      "NLP0014I            80         OPT 25.53296       28 7.960181\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I            81         OPT 22.574732       25 5.929672\n",
      "NLP0014I            82      INFEAS 0.45340147       35 7.036332\n",
      "NLP0014I            83         OPT 22.362085       26 5.798938\n",
      "NLP0014I            84      INFEAS 0.80016321       37 9.142774\n",
      "NLP0014I            85      INFEAS 0.062093328       58 13.379785\n",
      "NLP0014I            86         OPT 25.293369       26 6.445178\n",
      "NLP0014I            87         OPT 22.57713       43 10.975594\n",
      "NLP0014I            88      INFEAS 0.44717314       36 8.019191\n",
      "NLP0014I            89         OPT 22.577125       25 6.312642\n",
      "NLP0014I            90      INFEAS 0.51253275       35 8.245882\n",
      "NLP0014I            91         OPT 25.293364       42 10.420832\n",
      "NLP0014I            92      INFEAS 0.067357299       62 14.939983\n",
      "NLP0014I            93         OPT 25.53296       40 9.616868\n",
      "NLP0014I            94      INFEAS 0.047058471       59 12.741014\n",
      "NLP0014I            95         OPT 30.148675       53 14.218539\n",
      "NLP0014I            96         OPT 32.384865       45 11.626095\n",
      "NLP0014I            97      INFEAS 0.59127083       42 9.20655\n",
      "NLP0014I            98         OPT 32.384864       28 6.159551\n",
      "NLP0014I            99      INFEAS 0.80293027       36 8.249171\n",
      "NLP0014I           100         OPT 34.642876       41 9.76981\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           101      INFEAS 0.40591885       38 8.593212\n",
      "NLP0014I           102      INFEAS 0.70008387       40 8.472639\n",
      "NLP0014I           103         OPT 32.384861       28 6.787977\n",
      "NLP0014I           104         OPT 34.642887       26 5.884975\n",
      "NLP0014I           105         OPT 37.041389       44 10.988894\n",
      "NLP0014I           106      INFEAS 0.63097304       39 8.296561\n",
      "NLP0014I           107         OPT 37.041388       49 14.902251\n",
      "NLP0014I           108      INFEAS 0.80199279       37 7.530688\n",
      "NLP0014I           109         OPT 39.383993       28 5.812678\n",
      "NLP0014I           110      INFEAS 0.42943407       36 7.758491\n",
      "NLP0014I           111      INFEAS 0.23452807       51 10.809989\n",
      "NLP0014I           112         OPT 37.041388       28 6.527222\n",
      "NLP0014I           113         OPT 39.38399       29 6.513482\n",
      "NLP0014I           114         OPT 41.556125       41 9.119246\n",
      "NLP0014I           115      INFEAS 0.59509896       41 9.119542\n",
      "NLP0014I           116         OPT 41.556124       48 10.776519\n",
      "NLP0014I           117      INFEAS 0.80079339       37 8.697811\n",
      "NLP0014I           118         OPT 43.728255       40 9.314474\n",
      "NLP0014I           119      INFEAS 0.41347557       36 8.031719\n",
      "NLP0014I           120      INFEAS 0.70387103       42 8.081618\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           121         OPT 41.556124       49 12.189805\n",
      "NLP0014I           122         OPT 43.728256       41 9.687596\n",
      "NLP0014I           123         OPT 45.940467       45 10.617759\n",
      "NLP0014I           124      INFEAS 0.61560821       38 7.7172\n",
      "NLP0014I           125         OPT 45.94047       49 12.346271\n",
      "NLP0014I           126      INFEAS 0.81645026       40 9.272081\n",
      "NLP0014I           127         OPT 48.290391       46 10.830353\n",
      "NLP0014I           128      INFEAS 0.42633829       36 7.807339\n",
      "NLP0014I           129      INFEAS 0.7006639       39 8.207586\n",
      "NLP0014I           130         OPT 45.940467       47 11.098369\n",
      "NLP0014I           131         OPT 48.290393       27 6.444694\n",
      "NLP0014I           132         OPT 50.776278       45 10.799148\n",
      "NLP0014I           133      INFEAS 0.60755009       40 8.607154\n",
      "NLP0014I           134         OPT 50.776281       38 8.452778\n",
      "NLP0014I           135      INFEAS 0.80597036       38 8.396496\n",
      "NLP0014I           136         OPT 53.289357       28 6.487227\n",
      "NLP0014I           137      INFEAS 0.42425082       36 7.161199\n",
      "NLP0014I           138      INFEAS 0.69168125       39 8.555485\n",
      "NLP0014I           139         OPT 50.776278       42 9.790905\n",
      "NLP0014I           140         OPT 53.289357       28 8.031196\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           141         OPT 55.802433       42 9.433595\n",
      "NLP0014I           142      INFEAS 0.60464441       42 9.276694\n",
      "NLP0014I           143         OPT 55.802434       46 10.731159\n",
      "NLP0014I           144      INFEAS 0.80761883       39 8.147934\n",
      "NLP0014I           145         OPT 58.315513       50 12.577975\n",
      "NLP0014I           146      INFEAS 0.4109359       36 8.200881\n",
      "NLP0014I           147      INFEAS 0.68210756       40 9.139596\n",
      "NLP0014I           148         OPT 55.802436       47 11.215886\n",
      "NLP0014I           149         OPT 58.315514       27 6.834441\n",
      "NLP0014I           150         OPT 60.82859       42 10.424532\n",
      "NLP0014I           151      INFEAS 0.65273526       39 8.348866\n",
      "NLP0014I           152         OPT 60.828595       38 7.87052\n",
      "NLP0014I           153      INFEAS 0.832788       38 8.718082\n",
      "NLP0014I           154         OPT 63.34167       28 7.080514\n",
      "NLP0014I           155      INFEAS 0.44314608       36 8.015512\n",
      "NLP0014I           156      INFEAS 0.7001734       39 8.571367\n",
      "NLP0014I           157         OPT 60.82859       49 10.76353\n",
      "NLP0014I           158         OPT 63.341669       28 7.034549\n",
      "NLP0014I           159         OPT 65.854747       51 12.271737\n",
      "NLP0014I           160      INFEAS 0.64332611       41 8.604877\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           161         OPT 65.854746       52 13.110142\n",
      "NLP0014I           162      INFEAS 0.83250717       38 8.4399\n",
      "NLP0014I           163         OPT 68.367826       28 6.192253\n",
      "NLP0014I           164      INFEAS 0.44392554       36 8.298899\n",
      "NLP0014I           165      INFEAS 0.69202203       39 7.987821\n",
      "NLP0014I           166         OPT 65.854747       28 6.105931\n",
      "NLP0014I           167         OPT 68.367831       26 6.518322\n",
      "NLP0014I           168         OPT 70.880904       46 11.7267\n",
      "NLP0014I           169      INFEAS 0.64313579       40 8.731914\n",
      "NLP0014I           170         OPT 70.880905       48 12.59248\n",
      "NLP0014I           171      INFEAS 0.83130699       39 8.534345\n",
      "NLP0014I           172         OPT 73.393982       28 7.073477\n",
      "NLP0014I           173      INFEAS 0.44299228       36 7.881026\n",
      "NLP0014I           174      INFEAS 0.69202929       39 8.435298\n",
      "NLP0014I           175         OPT 70.880908       28 6.709015\n",
      "NLP0014I           176         OPT 73.393982       28 6.376193\n",
      "NLP0014I           177         OPT 75.907059       45 10.656494\n",
      "NLP0014I           178      INFEAS 0.64382133       41 9.158534\n",
      "NLP0014I           179         OPT 75.907059       44 10.103654\n",
      "NLP0014I           180      INFEAS 0.83344501       39 7.665667\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           181         OPT 78.420144       27 6.663411\n",
      "NLP0014I           182      INFEAS 0.44727591       39 7.796639\n",
      "NLP0014I           183      INFEAS 0.69269682       39 8.435611\n",
      "NLP0014I           184         OPT 75.90706       28 6.545367\n",
      "NLP0014I           185         OPT 78.420141       28 6.70634\n",
      "NLP0014I           186         OPT 80.933214       44 9.739803\n",
      "NLP0014I           187      INFEAS 0.64458648       41 8.374707\n",
      "NLP0014I           188         OPT 80.933217       45 10.581906\n",
      "NLP0014I           189      INFEAS 0.83368682       39 8.548286\n",
      "NLP0014I           190         OPT 83.446294       28 6.35359\n",
      "NLP0014I           191      INFEAS 0.44740877       39 9.674657\n",
      "NLP0014I           192      INFEAS 0.69331129       39 8.186193\n",
      "NLP0014I           193         OPT 80.933215       29 7.310368\n",
      "NLP0014I           194         OPT 83.446295       29 6.859128\n",
      "NLP0014I           195         OPT 85.95937       49 13.275459\n",
      "NLP0014I           196      INFEAS 0.6449553       41 7.787943\n",
      "NLP0014I           197         OPT 85.959372       46 10.321545\n",
      "NLP0014I           198      INFEAS 0.83419496       38 8.783663\n",
      "NLP0014I           199         OPT 88.47245       28 6.093685\n",
      "NLP0014I           200      INFEAS 0.4474234       39 8.031428\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           201      INFEAS 0.69374144       39 8.948007\n",
      "NLP0014I           202         OPT 85.959375       28 6.369383\n",
      "NLP0014I           203         OPT 88.472452       28 6.683807\n",
      "NLP0014I           204         OPT 90.985527       49 11.942086\n",
      "NLP0014I           205      INFEAS 0.64539361       41 8.499159\n",
      "NLP0014I           206         OPT 90.985534       44 9.992488\n",
      "NLP0014I           207      INFEAS 0.83438337       38 7.885801\n",
      "NLP0014I           208         OPT 93.498606       28 6.540848\n",
      "NLP0014I           209      INFEAS 0.4496621       38 8.185552\n",
      "NLP0014I           210      INFEAS 0.69437126       39 8.224017\n",
      "NLP0014I           211         OPT 90.985533       28 6.48258\n",
      "NLP0014I           212         OPT 93.498608       28 6.738339\n",
      "NLP0014I           213         OPT 96.011685       51 13.358455\n",
      "NLP0014I           214      INFEAS 0.64615418       41 8.373265\n",
      "NLP0014I           215         OPT 96.011684       47 12.245067\n",
      "NLP0014I           216      INFEAS 0.83453818       38 8.511934\n",
      "NLP0014I           217         OPT 98.524763       28 6.083541\n",
      "NLP0014I           218      INFEAS 0.44997157       38 8.293228\n",
      "NLP0014I           219      INFEAS 0.69505762       39 8.501374\n",
      "NLP0014I           220         OPT 96.011686       28 6.079083\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           221         OPT 98.524763       28 6.28006\n",
      "NLP0014I           222      INFEAS 0.69562251       39 8.311869\n",
      "NLP0014I           223         OPT 101.03784       28 6.98935\n",
      "NLP0014I           224         OPT 103.55092       28 6.589612\n",
      "NLP0014I           225      INFEAS 0.45072564       38 8.138116\n",
      "NLP0014I           226         OPT 101.03784       46 10.866504\n",
      "NLP0014I           227      INFEAS 0.83493461       38 8.071554\n",
      "NLP0014I           228         OPT 101.03784       43 10.067506\n",
      "NLP0014I           229      INFEAS 0.6466765       41 8.730347\n",
      "NLP0014I           230         OPT 103.55092       51 11.010206\n",
      "NLP0014I           231      INFEAS 0.69587255       39 8.868523\n",
      "NLP0014I           232         OPT 106.06399       50 11.978772\n",
      "NLP0014I           233         OPT 108.57017       28 6.830021\n",
      "NLP0014I           234      INFEAS 0.44444746       36 8.055797\n",
      "NLP0014I           235         OPT 106.064       46 10.523755\n",
      "NLP0014I           236      INFEAS 0.83478385       38 7.848151\n",
      "NLP0014I           237         OPT 106.06399       49 12.36022\n",
      "NLP0014I           238      INFEAS 0.64709466       39 7.927728\n",
      "NLP0014I           239         OPT 108.57017       52 13.158448\n",
      "NLP0014I           240      INFEAS 0.26269281       50 11.620586\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           241         OPT 111.0424       47 10.256476\n",
      "NLP0014I           242         OPT 113.47825       42 9.988408\n",
      "NLP0014I           243      INFEAS 0.44503325       37 8.407922\n",
      "NLP0014I           244         OPT 111.0424       49 12.653262\n",
      "NLP0014I           245      INFEAS 0.833453       38 9.79864\n",
      "NLP0014I           246         OPT 111.0424       49 16.031457\n",
      "NLP0014I           247      INFEAS 0.6445814       39 9.437064\n",
      "NLP0014I           248         OPT 113.47825       28 6.190828\n",
      "NLP0014I           249      INFEAS 0.70380637       39 8.893015\n",
      "NLP0014I           250         OPT 115.91313       43 10.572052\n",
      "NLP0014I           251         OPT 118.31211       28 7.481249\n",
      "NLP0014I           252      INFEAS 0.43695498       36 7.982192\n",
      "NLP0014I           253         OPT 115.91313       50 13.01545\n",
      "NLP0014I           254      INFEAS 0.83706681       39 9.946387\n",
      "NLP0014I           255         OPT 115.91313       59 16.697257\n",
      "NLP0014I           256      INFEAS 0.6581221       42 9.403379\n",
      "NLP0014I           257         OPT 118.31212       28 6.508017\n",
      "NLP0014I           258      INFEAS 0.69863383       39 8.225027\n",
      "NLP0014I           259         OPT 120.69379       28 7.371612\n",
      "NLP0014I           260         OPT 123.05047       28 7.445791\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           261      INFEAS 0.44744102       36 9.366902\n",
      "NLP0014I           262         OPT 120.69379       46 10.396\n",
      "NLP0014I           263      INFEAS 0.83632679       39 9.752373\n",
      "NLP0014I           264         OPT 120.69378       46 11.338048\n",
      "NLP0014I           265      INFEAS 0.6495569       41 9.118595\n",
      "NLP0014I           266         OPT 123.05047       47 11.492753\n",
      "NLP0014I           267      INFEAS 0.70719572       40 9.547524\n",
      "NLP0014I           268         OPT 125.3721       46 11.382999\n",
      "NLP0014I           269         OPT 127.77389       27 6.622652\n",
      "NLP0014I           270      INFEAS 0.44087374       36 8.624872\n",
      "NLP0014I           271         OPT 125.3721       50 12.590677\n",
      "NLP0014I           272      INFEAS 0.83419187       37 8.717621\n",
      "NLP0014I           273         OPT 125.3721       46 12.719235\n",
      "NLP0014I           274      INFEAS 0.64813106       39 9.757834\n",
      "NLP0014I           275         OPT 127.77389       28 6.480252\n",
      "NLP0014I           276      INFEAS 0.28188866       49 11.177958\n",
      "NLP0014I           277         OPT 130.21872       50 11.871987\n",
      "NLP0014I           278         OPT 132.65361       47 12.545277\n",
      "NLP0014I           279      INFEAS 0.43815275       36 9.634509\n",
      "NLP0014I           280         OPT 130.21872       45 10.53981\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           281      INFEAS 0.83503227       39 8.482212\n",
      "NLP0014I           282         OPT 130.21873       48 12.073151\n",
      "NLP0014I           283      INFEAS 0.53656785       34 9.138137\n",
      "NLP0014I           284         OPT 132.65361       27 6.849067\n",
      "NLP0014I           285      INFEAS 0.70050734       39 8.555208\n",
      "NLP0014I           286         OPT 135.06186       49 12.330751\n",
      "NLP0014I           287         OPT 137.44056       28 8.010099\n",
      "NLP0014I           288      INFEAS 0.44871399       36 9.33229\n",
      "NLP0014I           289         OPT 135.06186       41 10.912354\n",
      "NLP0014I           290      INFEAS 0.83632963       39 8.812007\n",
      "NLP0014I           291         OPT 135.06186       46 11.527087\n",
      "NLP0014I           292      INFEAS 0.65179608       40 8.845846\n",
      "NLP0014I           293         OPT 137.44056       27 6.839279\n",
      "NLP0014I           294      INFEAS 0.70207669       39 8.036557\n",
      "NLP0014I           295         OPT 139.81269       54 13.023643\n",
      "NLP0014I           296         OPT 142.16939       27 6.431196\n",
      "NLP0014I           297      INFEAS 0.44865297       36 7.444774\n",
      "NLP0014I           298         OPT 139.8127       41 10.19217\n",
      "NLP0014I           299      INFEAS 0.83695276       39 8.270362\n",
      "NLP0014I           300         OPT 139.8127       48 12.190681\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           301      INFEAS 0.65224662       40 7.712746\n",
      "NLP0014I           302         OPT 142.16938       50 10.986074\n",
      "NLP0014I           303      INFEAS 0.70814829       41 8.391327\n",
      "NLP0014I           304         OPT 144.52607       48 12.672423\n",
      "NLP0014I           305         OPT 146.88276       28 7.196241\n",
      "NLP0014I           306      INFEAS 0.44521413       38 9.987597\n",
      "NLP0014I           307         OPT 144.52607       51 12.909824\n",
      "NLP0014I           308      INFEAS 0.83857475       37 8.378119\n",
      "NLP0014I           309         OPT 144.52607       46 11.881721\n",
      "NLP0014I           310      INFEAS 0.64980256       38 8.890044\n",
      "NLP0014I           311         OPT 146.88276       49 12.127188\n",
      "NLP0014I           312      INFEAS 0.70975802       40 8.275481\n",
      "NLP0014I           313         OPT 149.23944       52 13.580355\n",
      "NLP0014I           314         OPT 151.59614       27 5.764053\n",
      "NLP0014I           315      INFEAS 0.44422934       38 8.645471\n",
      "NLP0014I           316         OPT 149.23945       51 12.288394\n",
      "NLP0014I           317      INFEAS 0.83536318       38 8.801362\n",
      "NLP0014I           318         OPT 149.23945       46 11.202528\n",
      "NLP0014I           319      INFEAS 0.65342992       40 9.554244\n",
      "NLP0014I           320         OPT 151.59613       50 12.622395\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           321      INFEAS 0.7107836       40 9.477913\n",
      "NLP0014I           322         OPT 153.95282       49 12.231035\n",
      "NLP0014I           323         OPT 156.30951       27 6.590727\n",
      "NLP0014I           324      INFEAS 0.45146452       39 8.435182\n",
      "NLP0014I           325         OPT 153.95282       46 11.026472\n",
      "NLP0014I           326      INFEAS 0.8337442       37 7.930793\n",
      "NLP0014I           327         OPT 153.95282       42 10.378579\n",
      "NLP0014I           328      INFEAS 0.65268681       40 8.104038\n",
      "NLP0014I           329         OPT 156.3095       47 11.379055\n",
      "NLP0014I           330      INFEAS 0.70596678       38 8.75024\n",
      "NLP0014I           331         OPT 158.66619       50 12.445005\n",
      "NLP0014I           332         OPT 161.02289       27 6.003421\n",
      "NLP0014I           333      INFEAS 0.44575905       38 9.098771\n",
      "NLP0014I           334         OPT 158.66619       47 11.591227\n",
      "NLP0014I           335      INFEAS 0.83424856       37 8.339734\n",
      "NLP0014I           336         OPT 158.66619       40 9.782172\n",
      "NLP0014I           337      INFEAS 0.65233091       40 9.065618\n",
      "NLP0014I           338         OPT 161.02288       48 11.226425\n",
      "NLP0014I           339      INFEAS 0.70716468       40 8.893658\n",
      "NLP0014I           340         OPT 163.37957       53 15.104839\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           341         OPT 165.73627       27 6.928401\n",
      "NLP0014I           342      INFEAS 0.44666141       38 10.222027\n",
      "NLP0014I           343         OPT 163.37957       46 13.255434\n",
      "NLP0014I           344      INFEAS 0.83508929       37 9.557141\n",
      "NLP0014I           345         OPT 163.37957       43 11.908636\n",
      "NLP0014I           346      INFEAS 0.6532606       39 10.240646\n",
      "NLP0014I           347         OPT 165.73625       47 12.846059\n",
      "NLP0014I           348      INFEAS 0.70761395       40 9.823058\n",
      "NLP0014I           349         OPT 168.09294       52 15.284522\n",
      "NLP0014I           350         OPT 170.44964       27 7.83504\n",
      "NLP0014I           351      INFEAS 0.44492948       38 9.354139\n",
      "NLP0014I           352         OPT 168.09294       46 13.517352\n",
      "NLP0014I           353      INFEAS 0.83523184       37 9.422455\n",
      "NLP0014I           354         OPT 168.09294       42 11.724828\n",
      "NLP0014I           355      INFEAS 0.65413881       40 10.017228\n",
      "NLP0014I           356         OPT 170.44963       40 10.203391\n",
      "NLP0014I           357      INFEAS 0.706581       40 9.471886\n",
      "NLP0014I           358         OPT 172.80631       53 15.324737\n",
      "NLP0014I           359         OPT 175.16301       27 7.240758\n",
      "NLP0014I           360      INFEAS 0.45129649       36 7.414873\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           361         OPT 172.80632       47 11.959436\n",
      "NLP0014I           362      INFEAS 0.83577258       37 8.358627\n",
      "NLP0014I           363         OPT 172.80632       41 10.604146\n",
      "NLP0014I           364      INFEAS 0.65450014       40 10.671461\n",
      "NLP0014I           365         OPT 175.163       47 14.606206\n",
      "NLP0014I           366      INFEAS 0.70455806       40 9.248556\n",
      "NLP0014I           367         OPT 177.51969       65 18.420669\n",
      "NLP0014I           368         OPT 179.87639       27 7.629082\n",
      "NLP0014I           369      INFEAS 0.4492844       39 9.145942\n",
      "NLP0014I           370         OPT 177.5197       51 15.993371\n",
      "NLP0014I           371      INFEAS 0.83380278       37 8.246019\n",
      "NLP0014I           372         OPT 177.51969       42 12.132352\n",
      "NLP0014I           373      INFEAS 0.65464346       40 8.585161\n",
      "NLP0014I           374         OPT 179.87638       27 7.819213\n",
      "NLP0014I           375      INFEAS 0.70140898       40 9.546945\n",
      "NLP0014I           376         OPT 182.23306       48 11.89776\n",
      "NLP0014I           377         OPT 184.58975       52 12.114313\n",
      "NLP0014I           378      INFEAS 0.45105963       36 7.267547\n",
      "NLP0014I           379         OPT 182.23306       47 14.576193\n",
      "NLP0014I           380      INFEAS 0.83667564       38 8.851415\n",
      "NLP0012I \n",
      "              Num      Status      Obj             It       time                 Location\n",
      "NLP0014I           381         OPT 182.23307       41 11.229366\n",
      "NLP0014I           382      INFEAS 0.65454418       39 9.916056\n",
      "NLP0014I           383         OPT 184.58976       27 8.111865\n",
      "NLP0014I           384      INFEAS 0.70588627       39 10.324244\n",
      "NLP0014I           385         OPT 186.94644       53 17.142127\n",
      "NLP0014I           386         OPT 189.30313       50 15.807579\n",
      "NLP0014I           387      INFEAS 0.42634433       36 9.472047\n",
      "NLP0014I           388         OPT 186.94644       27 8.257046\n",
      "NLP0014I           389      INFEAS 0.83478142       38 9.28749\n",
      "NLP0014I           390         OPT 186.94644       57 18.195148\n",
      "NLP0014I           391      INFEAS 0.65325267       40 9.974496\n",
      "NLP0014I           392         OPT 189.30313       27 6.136878\n",
      "NLP0014I           393      INFEAS 0.7189557       41 9.456833\n",
      "NLP0014I           394         OPT 191.65981       49 13.221872\n",
      "NLP0014I           395      INFEAS 0.4999999       45 10.002878\n",
      "NLP0014I           396      INFEAS 0.44167995       37 8.686097\n"
     ]
    },
    {
     "ename": "",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31mThe Kernel crashed while executing code in the current cell or a previous cell. \n",
      "\u001b[1;31mPlease review the code in the cell(s) to identify a possible cause of the failure. \n",
      "\u001b[1;31mClick <a href='https://aka.ms/vscodeJupyterKernelCrash'>here</a> for more info. \n",
      "\u001b[1;31mView Jupyter <a href='command:jupyter.viewOutput'>log</a> for further details."
     ]
    }
   ],
   "source": [
    "# Assuming dry['P_PV'] and dry['P_load'] are our pv and load vectors + random cost vector\n",
    "\n",
    "pv = dry['P_PV'].values\n",
    "load = dry['P_load'].values\n",
    "\n",
    "# Initialize an empty list to store observations\n",
    "observations_list = []\n",
    "\n",
    "# Create an instance of the controller with pv and load vectors\n",
    "ctrl = controller(c_el_2days_highweekday, pv, load, T, t_s)\n",
    "\n",
    "# Run the simulation\n",
    "done = False\n",
    "state = env.reset()\n",
    "\n",
    "while not done:\n",
    "    # Assuming SOE_battery is at index 3 and SOC_HESS is at index 5 in the state array\n",
    "    soe_battery = state[2]  # Adjust index based on actual structure\n",
    "    loh = state[4]    # using state(k-1) and data(k-1) to compute action(k-1) which is applied in k - data must be shifted to k in results df\n",
    "    \n",
    "    # Print SOE_battery and SOC_HESS at each iteration\n",
    "    print(f\"Iteration {ctrl.iteration}: SOE = {soe_battery}, LOH = {loh}\")\n",
    "    \n",
    "\n",
    "    # Get action using the do_step method\n",
    "    action, observation = ctrl.do_step(state)\n",
    "    \n",
    "    # Print the action to verify\n",
    "    print(\"Action computed from the controller:\", action)\n",
    "\n",
    "    # Take a step in the environment using the computed action\n",
    "    state, reward, done, info = env.step(action)\n",
    "\n",
    "    print(f\"States for next iteration= {state}, Reward: {reward}, Done? {done},  Info: {info} \")\n",
    "    \n",
    "    # Append the current observation to the list\n",
    "    observations_list.append(observation)\n",
    "    \n",
    "    \n",
    "    if done:\n",
    "        res = env.data.copy(deep=True)\n",
    "        state = env.reset()\n",
    "\n",
    "env.close()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "1939bb61-e755-492f-9d0d-4328d4eb7c73",
   "metadata": {},
   "outputs": [],
   "source": [
    "# When timestep is a multiple of 1 hour\n",
    "res.index = [pd.to_datetime('2021-01-01') + pd.DateOffset(seconds=ix) for ix in res.index]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "b3f49009-e5e5-4a0f-b6d4-a457337effd8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>time</th>\n",
       "      <th>P_set_battery</th>\n",
       "      <th>P_set_FC</th>\n",
       "      <th>P_set_EL</th>\n",
       "      <th>state_FC</th>\n",
       "      <th>state_EL</th>\n",
       "      <th>LOH</th>\n",
       "      <th>P_FC</th>\n",
       "      <th>P_load</th>\n",
       "      <th>P_EL</th>\n",
       "      <th>P_battery</th>\n",
       "      <th>P_PV</th>\n",
       "      <th>SOE_battery</th>\n",
       "      <th>reward</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-06-15 00:00:00</th>\n",
       "      <td>14256000.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 00:15:00</th>\n",
       "      <td>14256900.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5721.577462</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 00:30:00</th>\n",
       "      <td>14257800.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.499999</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5725.215187</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 00:45:00</th>\n",
       "      <td>14258700.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.499999</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5736.032613</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 01:00:00</th>\n",
       "      <td>14259600.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.499999</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5721.220041</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 23:00:00</th>\n",
       "      <td>14338800.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.499969</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5738.815176</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 23:15:00</th>\n",
       "      <td>14339700.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.499968</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5780.583874</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 23:30:00</th>\n",
       "      <td>14340600.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.499968</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5732.563292</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 23:45:00</th>\n",
       "      <td>14341500.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.499968</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5720.374836</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-16 00:00:00</th>\n",
       "      <td>14342400.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.499967</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5742.933890</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>97 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                           time  P_set_battery  P_set_FC  P_set_EL  state_FC  \\\n",
       "2021-06-15 00:00:00  14256000.0              0         0         0         0   \n",
       "2021-06-15 00:15:00  14256900.0              0         0         0         0   \n",
       "2021-06-15 00:30:00  14257800.0              0         0         0         0   \n",
       "2021-06-15 00:45:00  14258700.0              0         0         0         0   \n",
       "2021-06-15 01:00:00  14259600.0              0         0         0         0   \n",
       "...                         ...            ...       ...       ...       ...   \n",
       "2021-06-15 23:00:00  14338800.0              0         0         0         0   \n",
       "2021-06-15 23:15:00  14339700.0              0         0         0         0   \n",
       "2021-06-15 23:30:00  14340600.0              0         0         0         0   \n",
       "2021-06-15 23:45:00  14341500.0              0         0         0         0   \n",
       "2021-06-16 00:00:00  14342400.0              0         0         0         0   \n",
       "\n",
       "                     state_EL       LOH  P_FC       P_load  P_EL  P_battery  \\\n",
       "2021-06-15 00:00:00         0  0.500000   0.0     0.000000   0.0        0.0   \n",
       "2021-06-15 00:15:00         0  0.500000   0.0  5721.577462   0.0        0.0   \n",
       "2021-06-15 00:30:00         0  0.499999   0.0  5725.215187   0.0        0.0   \n",
       "2021-06-15 00:45:00         0  0.499999   0.0  5736.032613   0.0        0.0   \n",
       "2021-06-15 01:00:00         0  0.499999   0.0  5721.220041   0.0        0.0   \n",
       "...                       ...       ...   ...          ...   ...        ...   \n",
       "2021-06-15 23:00:00         0  0.499969   0.0  5738.815176   0.0        0.0   \n",
       "2021-06-15 23:15:00         0  0.499968   0.0  5780.583874   0.0        0.0   \n",
       "2021-06-15 23:30:00         0  0.499968   0.0  5732.563292   0.0        0.0   \n",
       "2021-06-15 23:45:00         0  0.499968   0.0  5720.374836   0.0        0.0   \n",
       "2021-06-16 00:00:00         0  0.499967   0.0  5742.933890   0.0        0.0   \n",
       "\n",
       "                     P_PV  SOE_battery  reward  \n",
       "2021-06-15 00:00:00   0.0       2500.0      -1  \n",
       "2021-06-15 00:15:00   0.0       2500.0      -1  \n",
       "2021-06-15 00:30:00   0.0       2500.0      -1  \n",
       "2021-06-15 00:45:00   0.0       2500.0      -1  \n",
       "2021-06-15 01:00:00   0.0       2500.0      -1  \n",
       "...                   ...          ...     ...  \n",
       "2021-06-15 23:00:00   0.0       2500.0      -1  \n",
       "2021-06-15 23:15:00   0.0       2500.0      -1  \n",
       "2021-06-15 23:30:00   0.0       2500.0      -1  \n",
       "2021-06-15 23:45:00   0.0       2500.0      -1  \n",
       "2021-06-16 00:00:00   0.0       2500.0      -1  \n",
       "\n",
       "[97 rows x 14 columns]"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# When timestep is not a multiple of 1 hour\n",
    "# Reference time\n",
    "reference_time = pd.to_datetime('2021-01-01')\n",
    "\n",
    "# Convert Timestamps to seconds\n",
    "res.index = (res.index - reference_time).total_seconds().astype(int)\n",
    "\n",
    "# Generate the new index\n",
    "res.index = [reference_time + pd.DateOffset(seconds=ix) for ix in res.index]\n",
    "\n",
    "# Shift the 'P_PV' and 'P_load' columns down by 1 row, filling the first value with 0\n",
    "res['P_PV'] = res['P_PV'].shift(1, fill_value=0)\n",
    "res['P_load'] = res['P_load'].shift(1, fill_value=0)\n",
    "\n",
    "res"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "4ec8f19a-a318-43e0-8a72-eb497baaa078",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SOE</th>\n",
       "      <th>LOH</th>\n",
       "      <th>Objective</th>\n",
       "      <th>P_grid</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-06-15 00:00:00</th>\n",
       "      <td>2500.0</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 00:15:00</th>\n",
       "      <td>2500.0</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>8.2</td>\n",
       "      <td>-5721.577461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 00:30:00</th>\n",
       "      <td>2500.0</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>8.2</td>\n",
       "      <td>-5725.215187</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 00:45:00</th>\n",
       "      <td>2500.0</td>\n",
       "      <td>0.499999</td>\n",
       "      <td>8.2</td>\n",
       "      <td>-5736.032613</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 01:00:00</th>\n",
       "      <td>2500.0</td>\n",
       "      <td>0.499999</td>\n",
       "      <td>8.2</td>\n",
       "      <td>-5721.220041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 23:00:00</th>\n",
       "      <td>2500.0</td>\n",
       "      <td>0.499969</td>\n",
       "      <td>8.3</td>\n",
       "      <td>-5738.815176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 23:15:00</th>\n",
       "      <td>2500.0</td>\n",
       "      <td>0.499969</td>\n",
       "      <td>8.3</td>\n",
       "      <td>-5780.583873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 23:30:00</th>\n",
       "      <td>2500.0</td>\n",
       "      <td>0.499968</td>\n",
       "      <td>8.3</td>\n",
       "      <td>-5732.563291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-15 23:45:00</th>\n",
       "      <td>2500.0</td>\n",
       "      <td>0.499968</td>\n",
       "      <td>8.3</td>\n",
       "      <td>-5720.374836</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-16 00:00:00</th>\n",
       "      <td>2500.0</td>\n",
       "      <td>0.499968</td>\n",
       "      <td>8.3</td>\n",
       "      <td>-5742.933890</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>97 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                        SOE       LOH  Objective       P_grid\n",
       "2021-06-15 00:00:00  2500.0  0.500000        0.0     0.000000\n",
       "2021-06-15 00:15:00  2500.0  0.500000        8.2 -5721.577461\n",
       "2021-06-15 00:30:00  2500.0  0.500000        8.2 -5725.215187\n",
       "2021-06-15 00:45:00  2500.0  0.499999        8.2 -5736.032613\n",
       "2021-06-15 01:00:00  2500.0  0.499999        8.2 -5721.220041\n",
       "...                     ...       ...        ...          ...\n",
       "2021-06-15 23:00:00  2500.0  0.499969        8.3 -5738.815176\n",
       "2021-06-15 23:15:00  2500.0  0.499969        8.3 -5780.583873\n",
       "2021-06-15 23:30:00  2500.0  0.499968        8.3 -5732.563291\n",
       "2021-06-15 23:45:00  2500.0  0.499968        8.3 -5720.374836\n",
       "2021-06-16 00:00:00  2500.0  0.499968        8.3 -5742.933890\n",
       "\n",
       "[97 rows x 4 columns]"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Concatenate all observations into a single DataFrame\n",
    "obs_raw = pd.concat(observations_list, ignore_index=True)\n",
    "\n",
    "obs_raw.index = [pd.to_datetime('2021-01-01') + pd.DateOffset(hours=ix) for ix in obs_raw.index]\n",
    "\n",
    "# Step 1: Create a new DataFrame for the first row\n",
    "initial_row = pd.DataFrame({\n",
    "    'SOE': [res['SOE_battery'].iloc[0]],\n",
    "    'LOH': [res['LOH'].iloc[0]],\n",
    "    'Objective': 0,\n",
    "    'P_grid': 0,\n",
    "}, index=[obs_raw.index[0]])\n",
    "\n",
    "\n",
    "# Step 2: Concatenate the new row with the shifted DataFrame\n",
    "obs = pd.concat([initial_row, obs_raw], ignore_index=False)\n",
    "\n",
    "# Step 3: Reset the index if needed to maintain consistency\n",
    "obs.index = res.index\n",
    "\n",
    "obs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "3a6916e4-0ef7-41f6-898c-bbd52cbd04c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2021-06-15 00:00:00    0.000000e+00\n",
       "2021-06-15 00:15:00   -2.012985e-07\n",
       "2021-06-15 00:30:00   -2.012994e-07\n",
       "2021-06-15 00:45:00   -2.012994e-07\n",
       "2021-06-15 01:00:00   -2.012994e-07\n",
       "                           ...     \n",
       "2021-06-15 23:00:00   -2.012712e-07\n",
       "2021-06-15 23:15:00   -2.012712e-07\n",
       "2021-06-15 23:30:00   -2.012703e-07\n",
       "2021-06-15 23:45:00   -2.012712e-07\n",
       "2021-06-16 00:00:00   -2.012712e-07\n",
       "Length: 97, dtype: float64"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res['P_PV'] + res['P_FC'] - obs['P_grid'] - res['P_EL'] - res['P_battery'] - res['P_load'] "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "95a58899-a9be-4016-8f00-a314227fdde6",
   "metadata": {},
   "source": [
    "### Plot "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "a636fbd5-f5d6-436a-b4bf-ca7c580950eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1440x2160 with 14 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Assuming you have the electricity prices in a variable named 'c_el'\n",
    "# If c_el has one value for each 15 minutes, you'll need to adjust the time vector accordingly.\n",
    "\n",
    "# Create subplots with 8 rows and 2 columns, share the x-axis for easier comparison\n",
    "fig, axs = plt.subplots(7, 2, figsize=(20, 30))\n",
    "\n",
    "# Plot SOE_battery\n",
    "axs[0, 0].plot(res['SOE_battery'], label='Simulation model SOE')\n",
    "axs[0, 0].plot(obs['SOE'], label='SOE computed by MPC')\n",
    "axs[0, 0].set_title('Evolution of the battery state of energy')\n",
    "axs[0, 0].set_xlabel('Time')\n",
    "axs[0, 0].set_ylabel('State of energy (Wh)')\n",
    "axs[0, 0].set_ylim(0, 5000)  # Set y-axis limits between 0 and 5000 Wh\n",
    "axs[0, 0].legend()\n",
    "\n",
    "# Plot LOH\n",
    "axs[1, 0].plot(res['LOH'], label='Simulation model LOH', color='orange')\n",
    "axs[1, 0].plot(obs['LOH'], label='LOH computed by MPC')\n",
    "axs[1, 0].set_title('Evolution of the normalized energy level of the hydrogen tank')\n",
    "axs[1, 0].set_xlabel('Time')\n",
    "axs[1, 0].set_ylabel('Level of Hydrogen in storage tank (-)')\n",
    "axs[1, 0].set_ylim(0, 1)  # Set y-axis limits between 0 and 1\n",
    "axs[1, 0].legend()\n",
    "\n",
    "# Plot P_set_FC vs P_FC\n",
    "axs[2, 0].plot(res['P_set_FC'], label='Setpoint', linestyle='--')\n",
    "axs[2, 0].plot(-res['P_FC'], label='Simulation model result')\n",
    "axs[2, 0].set_title('Fuel cell power command vs. model response')\n",
    "axs[2, 0].set_xlabel('Time')\n",
    "axs[2, 0].set_ylabel('Power (W)')\n",
    "axs[2, 0].legend()\n",
    "\n",
    "# Plot P_set_EL vs P_EL\n",
    "axs[3, 0].plot(res['P_set_EL'], label='Setpoint', linestyle='--')\n",
    "axs[3, 0].plot(res['P_EL'], label='Simulation model result')\n",
    "axs[3, 0].set_title('Electrolyzer power command vs. model response')\n",
    "axs[3, 0].set_xlabel('Time')\n",
    "axs[3, 0].set_ylabel('Power (W)')\n",
    "axs[3, 0].legend()\n",
    "\n",
    "# Plot state_FC and state_EL\n",
    "axs[4, 0].plot(res['state_FC'], label='FC state')\n",
    "axs[4, 0].plot(res['state_EL'], label='EL state', linestyle='--')\n",
    "axs[4, 0].set_title('State modes of the electrolyzer and fuel cell')\n",
    "axs[4, 0].set_xlabel('Time')\n",
    "axs[4, 0].set_ylabel('State (-)')\n",
    "axs[4, 0].legend()\n",
    "\n",
    "# Plot Power balance with P_EL, P_FC, P_battery, P_load, P_PV, P_grid\n",
    "axs[5, 0].plot(res['P_EL'], label='Electrolyzer')\n",
    "axs[5, 0].plot(res['P_FC'], label='FC')\n",
    "axs[5, 0].plot(res['P_battery'], label='Battery')\n",
    "axs[5, 0].plot(res['P_load'], label='Load')\n",
    "axs[5, 0].plot(res['P_PV'], label='PV')\n",
    "axs[5, 0].plot(obs['P_grid'], label='Grid power', linestyle='--')\n",
    "axs[5, 0].set_title('Power exchanges in microgrid')\n",
    "axs[5, 0].set_xlabel('Time')\n",
    "axs[5, 0].set_ylabel('Power (W)')\n",
    "axs[5, 0].legend()\n",
    "\n",
    "# Calculate and plot the sum of all power contributions\n",
    "power_sum = res['P_PV'] + res['P_FC'] - obs['P_grid'] - res['P_EL'] - res['P_battery'] - res['P_load'] \n",
    "axs[5, 1].plot(power_sum, label='Sum of Power Contributions', color='purple')\n",
    "axs[5, 1].set_title('Sum of Power Contributions')\n",
    "axs[5, 1].set_xlabel('Time')\n",
    "axs[5, 1].set_ylabel('Power (W)')\n",
    "axs[5, 1].legend()\n",
    "\n",
    "# Plot electricity prices\n",
    "axs[6, 0].plot(high_season_weekday_15min, label='Electricity Prices')\n",
    "axs[6, 0].set_title('Electricity Prices Used for Each Hour of the Day')\n",
    "axs[6, 0].set_xlabel('Time')\n",
    "axs[6, 0].set_ylabel('Price ($/kWh)')\n",
    "axs[6, 0].legend()\n",
    "\n",
    "# Plot P_set_battery vs P_battery\n",
    "axs[6, 1].plot(res['P_set_battery'], label='Setpoint', linestyle='--')\n",
    "axs[6, 1].plot(res['P_battery'], label='Simulation model result')\n",
    "axs[6, 1].set_title('Battery power command vs. model response')\n",
    "axs[6, 1].set_xlabel('Time')\n",
    "axs[6, 1].set_ylabel('Power (W)')\n",
    "axs[6, 1].legend()\n",
    "\n",
    "# Adjust layout\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "54f5f123-d677-42dc-af08-531fd27001db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1152x432 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create subplots\n",
    "fig, axs = plt.subplots(1, 2, figsize=(16, 6), sharex=True, sharey=False)\n",
    "axs = axs.ravel()\n",
    "\n",
    "# Plot difference between P_PV and P_load\n",
    "dry['P_load'].plot(ax=axs[0])\n",
    "axs[0].set_ylabel('Power [W]')\n",
    "axs[0].set_title('Load forecasts')\n",
    "\n",
    "# Plot P_EL and P_FC\n",
    "dry['P_PV'].plot(ax=axs[1])\n",
    "axs[1].set_ylabel('Power [W]')\n",
    "axs[1].set_title('Solar power forecasts')\n",
    "\n",
    "# Show plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "236f9ab1-94d1-46c7-8b5b-acf09828e1e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1152x432 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(1, 2, figsize=(16, 6), sharex=True, sharey=False)\n",
    "axs = axs.ravel()\n",
    "res[['P_set_battery', 'P_battery', 'P_set_FC', 'P_FC', 'P_set_EL', 'P_EL', 'P_PV', 'P_load']].plot(ax=axs[0])\n",
    "axs[0].set_ylabel('Power [W]')\n",
    "res[['state_FC', 'state_EL']].plot(ax=axs[1])\n",
    "axs[1].set_ylabel('Modes/states')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "0da25c57-6e29-4df1-b120-a73c49ceeec1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1152x432 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(1, 2, figsize=(16, 6), sharex=True, sharey=False)\n",
    "axs = axs.ravel()\n",
    "res[['P_battery']].plot(ax=axs[0])\n",
    "axs[0].set_ylabel('Power [W]')\n",
    "res[['SOE_battery']].plot(ax=axs[1])\n",
    "axs[1].set_ylabel('Modes/states')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "7f76661c-f72d-4d5c-89a2-172853c5fcb6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "obs_exc_las = obs.iloc[:-1]\n",
    "\n",
    "# Plotting the Objective over time (excluding the last time point)\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(obs['Objective'], marker='o', linestyle='-', color='blue', label='Objective')\n",
    "plt.title('Operating cost Over Time Horizon ')\n",
    "plt.xlabel('Time')\n",
    "plt.ylabel('Cost [EUR] ')\n",
    "plt.grid(True)\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1aee4736-5bce-495f-bf93-75f021827d8f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
